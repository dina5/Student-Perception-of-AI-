{
  "cells": [
    {
      "cell_type": "markdown",
      "id": "66d72223",
      "metadata": {
        "papermill": {
          "duration": 0.020893,
          "end_time": "2023-05-01T19:26:21.542684",
          "exception": false,
          "start_time": "2023-05-01T19:26:21.521791",
          "status": "completed"
        },
        "tags": [],
        "id": "66d72223"
      },
      "source": [
        "<h1>Introduction:</h1>\n",
        "AI is rapidly changing and so too are the views held by people about AI. Specifically in education where students often have great differences in experiences it would be beneficial to understand what this demographic currently thinks. In order to help put this into context it is essential to understand the demographic being surveyed as well.\n",
        "<br>\n",
        "<br>\n",
        "\n",
        "Although the survey size may be somewhat small and there may be a selection bias via who answered the survey there is still value to be gained within these limitations.\n",
        "<br>\n",
        "\n",
        "In this notebook I will use a range of survey questions in order to find insights."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "3b3a8100",
      "metadata": {
        "papermill": {
          "duration": 0.020442,
          "end_time": "2023-05-01T19:26:21.582735",
          "exception": false,
          "start_time": "2023-05-01T19:26:21.562293",
          "status": "completed"
        },
        "tags": [],
        "id": "3b3a8100"
      },
      "source": [
        "**importing the relevant files:**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "id": "a4aa0491",
      "metadata": {
        "_cell_guid": "4ecff0c8-0722-4f55-a3ed-aff9e3d30342",
        "_uuid": "e6ac3486-6915-48ba-bace-1c32f25ed4bb",
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:21.624541Z",
          "iopub.status.busy": "2023-05-01T19:26:21.623257Z",
          "iopub.status.idle": "2023-05-01T19:26:21.641765Z",
          "shell.execute_reply": "2023-05-01T19:26:21.640507Z"
        },
        "jupyter": {
          "outputs_hidden": false
        },
        "papermill": {
          "duration": 0.043587,
          "end_time": "2023-05-01T19:26:21.645637",
          "exception": false,
          "start_time": "2023-05-01T19:26:21.602050",
          "status": "completed"
        },
        "tags": [],
        "id": "a4aa0491"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import os\n",
        "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
        "    for filename in filenames:\n",
        "        print(os.path.join(dirname, filename))"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "4469b048",
      "metadata": {
        "papermill": {
          "duration": 0.019566,
          "end_time": "2023-05-01T19:26:21.685495",
          "exception": false,
          "start_time": "2023-05-01T19:26:21.665929",
          "status": "completed"
        },
        "tags": [],
        "id": "4469b048"
      },
      "source": [
        "**reading the input into a pandas dataframe:**"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install kaggle"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xBI6vYtgJ58L",
        "outputId": "2e48ef9b-69aa-40e9-b806-52468b3d6071"
      },
      "id": "xBI6vYtgJ58L",
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: kaggle in /usr/local/lib/python3.10/dist-packages (1.5.16)\n",
            "Requirement already satisfied: six>=1.10 in /usr/local/lib/python3.10/dist-packages (from kaggle) (1.16.0)\n",
            "Requirement already satisfied: certifi in /usr/local/lib/python3.10/dist-packages (from kaggle) (2023.7.22)\n",
            "Requirement already satisfied: python-dateutil in /usr/local/lib/python3.10/dist-packages (from kaggle) (2.8.2)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from kaggle) (2.31.0)\n",
            "Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from kaggle) (4.66.1)\n",
            "Requirement already satisfied: python-slugify in /usr/local/lib/python3.10/dist-packages (from kaggle) (8.0.1)\n",
            "Requirement already satisfied: urllib3 in /usr/local/lib/python3.10/dist-packages (from kaggle) (2.0.7)\n",
            "Requirement already satisfied: bleach in /usr/local/lib/python3.10/dist-packages (from kaggle) (6.1.0)\n",
            "Requirement already satisfied: webencodings in /usr/local/lib/python3.10/dist-packages (from bleach->kaggle) (0.5.1)\n",
            "Requirement already satisfied: text-unidecode>=1.3 in /usr/local/lib/python3.10/dist-packages (from python-slugify->kaggle) (1.3)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->kaggle) (3.3.1)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->kaggle) (3.4)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Upload the kaggle.json file to access the dataset**"
      ],
      "metadata": {
        "id": "9NZcNP88K1oe"
      },
      "id": "9NZcNP88K1oe"
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import files\n",
        "files.upload()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 90
        },
        "id": "WpK2ak--K1Og",
        "outputId": "4f62b124-68be-49c8-8575-dab313e78343"
      },
      "id": "WpK2ak--K1Og",
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-9928f1d3-70be-4160-a2aa-6f145afcb8d0\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-9928f1d3-70be-4160-a2aa-6f145afcb8d0\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script>// Copyright 2017 Google LLC\n",
              "//\n",
              "// Licensed under the Apache License, Version 2.0 (the \"License\");\n",
              "// you may not use this file except in compliance with the License.\n",
              "// You may obtain a copy of the License at\n",
              "//\n",
              "//      http://www.apache.org/licenses/LICENSE-2.0\n",
              "//\n",
              "// Unless required by applicable law or agreed to in writing, software\n",
              "// distributed under the License is distributed on an \"AS IS\" BASIS,\n",
              "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
              "// See the License for the specific language governing permissions and\n",
              "// limitations under the License.\n",
              "\n",
              "/**\n",
              " * @fileoverview Helpers for google.colab Python module.\n",
              " */\n",
              "(function(scope) {\n",
              "function span(text, styleAttributes = {}) {\n",
              "  const element = document.createElement('span');\n",
              "  element.textContent = text;\n",
              "  for (const key of Object.keys(styleAttributes)) {\n",
              "    element.style[key] = styleAttributes[key];\n",
              "  }\n",
              "  return element;\n",
              "}\n",
              "\n",
              "// Max number of bytes which will be uploaded at a time.\n",
              "const MAX_PAYLOAD_SIZE = 100 * 1024;\n",
              "\n",
              "function _uploadFiles(inputId, outputId) {\n",
              "  const steps = uploadFilesStep(inputId, outputId);\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  // Cache steps on the outputElement to make it available for the next call\n",
              "  // to uploadFilesContinue from Python.\n",
              "  outputElement.steps = steps;\n",
              "\n",
              "  return _uploadFilesContinue(outputId);\n",
              "}\n",
              "\n",
              "// This is roughly an async generator (not supported in the browser yet),\n",
              "// where there are multiple asynchronous steps and the Python side is going\n",
              "// to poll for completion of each step.\n",
              "// This uses a Promise to block the python side on completion of each step,\n",
              "// then passes the result of the previous step as the input to the next step.\n",
              "function _uploadFilesContinue(outputId) {\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  const steps = outputElement.steps;\n",
              "\n",
              "  const next = steps.next(outputElement.lastPromiseValue);\n",
              "  return Promise.resolve(next.value.promise).then((value) => {\n",
              "    // Cache the last promise value to make it available to the next\n",
              "    // step of the generator.\n",
              "    outputElement.lastPromiseValue = value;\n",
              "    return next.value.response;\n",
              "  });\n",
              "}\n",
              "\n",
              "/**\n",
              " * Generator function which is called between each async step of the upload\n",
              " * process.\n",
              " * @param {string} inputId Element ID of the input file picker element.\n",
              " * @param {string} outputId Element ID of the output display.\n",
              " * @return {!Iterable<!Object>} Iterable of next steps.\n",
              " */\n",
              "function* uploadFilesStep(inputId, outputId) {\n",
              "  const inputElement = document.getElementById(inputId);\n",
              "  inputElement.disabled = false;\n",
              "\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  outputElement.innerHTML = '';\n",
              "\n",
              "  const pickedPromise = new Promise((resolve) => {\n",
              "    inputElement.addEventListener('change', (e) => {\n",
              "      resolve(e.target.files);\n",
              "    });\n",
              "  });\n",
              "\n",
              "  const cancel = document.createElement('button');\n",
              "  inputElement.parentElement.appendChild(cancel);\n",
              "  cancel.textContent = 'Cancel upload';\n",
              "  const cancelPromise = new Promise((resolve) => {\n",
              "    cancel.onclick = () => {\n",
              "      resolve(null);\n",
              "    };\n",
              "  });\n",
              "\n",
              "  // Wait for the user to pick the files.\n",
              "  const files = yield {\n",
              "    promise: Promise.race([pickedPromise, cancelPromise]),\n",
              "    response: {\n",
              "      action: 'starting',\n",
              "    }\n",
              "  };\n",
              "\n",
              "  cancel.remove();\n",
              "\n",
              "  // Disable the input element since further picks are not allowed.\n",
              "  inputElement.disabled = true;\n",
              "\n",
              "  if (!files) {\n",
              "    return {\n",
              "      response: {\n",
              "        action: 'complete',\n",
              "      }\n",
              "    };\n",
              "  }\n",
              "\n",
              "  for (const file of files) {\n",
              "    const li = document.createElement('li');\n",
              "    li.append(span(file.name, {fontWeight: 'bold'}));\n",
              "    li.append(span(\n",
              "        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n",
              "        `last modified: ${\n",
              "            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n",
              "                                    'n/a'} - `));\n",
              "    const percent = span('0% done');\n",
              "    li.appendChild(percent);\n",
              "\n",
              "    outputElement.appendChild(li);\n",
              "\n",
              "    const fileDataPromise = new Promise((resolve) => {\n",
              "      const reader = new FileReader();\n",
              "      reader.onload = (e) => {\n",
              "        resolve(e.target.result);\n",
              "      };\n",
              "      reader.readAsArrayBuffer(file);\n",
              "    });\n",
              "    // Wait for the data to be ready.\n",
              "    let fileData = yield {\n",
              "      promise: fileDataPromise,\n",
              "      response: {\n",
              "        action: 'continue',\n",
              "      }\n",
              "    };\n",
              "\n",
              "    // Use a chunked sending to avoid message size limits. See b/62115660.\n",
              "    let position = 0;\n",
              "    do {\n",
              "      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n",
              "      const chunk = new Uint8Array(fileData, position, length);\n",
              "      position += length;\n",
              "\n",
              "      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n",
              "      yield {\n",
              "        response: {\n",
              "          action: 'append',\n",
              "          file: file.name,\n",
              "          data: base64,\n",
              "        },\n",
              "      };\n",
              "\n",
              "      let percentDone = fileData.byteLength === 0 ?\n",
              "          100 :\n",
              "          Math.round((position / fileData.byteLength) * 100);\n",
              "      percent.textContent = `${percentDone}% done`;\n",
              "\n",
              "    } while (position < fileData.byteLength);\n",
              "  }\n",
              "\n",
              "  // All done.\n",
              "  yield {\n",
              "    response: {\n",
              "      action: 'complete',\n",
              "    }\n",
              "  };\n",
              "}\n",
              "\n",
              "scope.google = scope.google || {};\n",
              "scope.google.colab = scope.google.colab || {};\n",
              "scope.google.colab._files = {\n",
              "  _uploadFiles,\n",
              "  _uploadFilesContinue,\n",
              "};\n",
              "})(self);\n",
              "</script> "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saving kaggle.json to kaggle.json\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'kaggle.json': b'{\"username\":\"mdeliashossain\",\"key\":\"6485baf9753231a2108b33994149ea00\"}'}"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Move the uploaded \"kaggle.json\" file to the correct location. Run the following command in a code cell:**"
      ],
      "metadata": {
        "id": "s5dxJjVDLWka"
      },
      "id": "s5dxJjVDLWka"
    },
    {
      "cell_type": "code",
      "source": [
        "!mkdir ~/.kaggle\n",
        "!cp kaggle.json ~/.kaggle/"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "eseLGPLqLKFJ",
        "outputId": "44e0ad61-b121-4de1-d55e-70685fd88520"
      },
      "id": "eseLGPLqLKFJ",
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "mkdir: cannot create directory ‘/root/.kaggle’: File exists\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The above error message you received is just letting you know that the directory already exists and doesn't need to be created again."
      ],
      "metadata": {
        "id": "C3lEI7_qLwQH"
      },
      "id": "C3lEI7_qLwQH"
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Set the appropriate permission**"
      ],
      "metadata": {
        "id": "qTP0Y1wQLz2_"
      },
      "id": "qTP0Y1wQLz2_"
    },
    {
      "cell_type": "code",
      "source": [
        "!chmod 600 ~/.kaggle/kaggle.json"
      ],
      "metadata": {
        "id": "GB5dV0cWLjfY"
      },
      "id": "GB5dV0cWLjfY",
      "execution_count": 8,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Use the API command to download the dataset from kaggle**"
      ],
      "metadata": {
        "id": "7M_8BzOoKAV4"
      },
      "id": "7M_8BzOoKAV4"
    },
    {
      "cell_type": "code",
      "source": [
        "!kaggle datasets download -d gianinamariapetrascu/survey-on-students-perceptions-of-ai-in-education"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XRQ5bAAxKGof",
        "outputId": "4fb4fde6-b61a-4a1e-c4ee-b1ff3040d57f"
      },
      "id": "XRQ5bAAxKGof",
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Downloading survey-on-students-perceptions-of-ai-in-education.zip to /content\n",
            "\r  0% 0.00/2.70k [00:00<?, ?B/s]\n",
            "\r100% 2.70k/2.70k [00:00<00:00, 5.12MB/s]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Let's Unzip the dataset**"
      ],
      "metadata": {
        "id": "mvdcdCPnME4g"
      },
      "id": "mvdcdCPnME4g"
    },
    {
      "cell_type": "code",
      "source": [
        "!unzip survey-on-students-perceptions-of-ai-in-education"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wvrOtY40MMqX",
        "outputId": "9042d2c2-8287-4ba8-d341-5957c03d0c2b"
      },
      "id": "wvrOtY40MMqX",
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Archive:  survey-on-students-perceptions-of-ai-in-education.zip\n",
            "  inflating: Survey_AI.csv           \n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Let's load the dataset using Pandas**"
      ],
      "metadata": {
        "id": "647ZnMqRMV63"
      },
      "id": "647ZnMqRMV63"
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "id": "0e37df22",
      "metadata": {
        "_cell_guid": "03536073-c5e7-4e63-b584-7df78980a234",
        "_uuid": "fc2fb265-14b2-4c34-9266-b90b446a3b88",
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:21.728120Z",
          "iopub.status.busy": "2023-05-01T19:26:21.727340Z",
          "iopub.status.idle": "2023-05-01T19:26:21.747624Z",
          "shell.execute_reply": "2023-05-01T19:26:21.746296Z"
        },
        "jupyter": {
          "outputs_hidden": false
        },
        "papermill": {
          "duration": 0.044624,
          "end_time": "2023-05-01T19:26:21.750579",
          "exception": false,
          "start_time": "2023-05-01T19:26:21.705955",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0e37df22",
        "outputId": "87410eae-c13c-46e4-c9c2-8a7fbd4a432c"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   ID  Q1.AI_knowledge                                      Q2.AI_sources  \\\n",
            "0   1                8  Internet;Books/Scientific papers (physical/onl...   \n",
            "1   2                7                              Internet;Social media   \n",
            "2   3                5  Internet;Books/Scientific papers (physical/onl...   \n",
            "3   4                5                              Internet;Social media   \n",
            "4   5                4                                           Internet   \n",
            "\n",
            "   Q2#1.Internet  Q2#2.Books/Papers  Q2#3.Social_media  Q2#4.Discussions  \\\n",
            "0              1                  1                  0                 0   \n",
            "1              1                  0                  1                 0   \n",
            "2              1                  1                  0                 0   \n",
            "3              1                  0                  1                 0   \n",
            "4              1                  0                  0                 0   \n",
            "\n",
            "   Q2#5.NotInformed  Q3#1.AI_dehumanization  Q3#2.Job_replacement  ...  \\\n",
            "0                 0                       1                     2  ...   \n",
            "1                 0                       2                     3  ...   \n",
            "2                 0                       2                     1  ...   \n",
            "3                 0                       4                     4  ...   \n",
            "4                 0                       1                     2  ...   \n",
            "\n",
            "   Q7.Utility_grade  Q8.Advantage_teaching  Q9.Advantage_learning  \\\n",
            "0                 9                      3                      1   \n",
            "1                 6                      2                      2   \n",
            "2                 6                      3                      3   \n",
            "3                 9                      1                      2   \n",
            "4                 8                      3                      2   \n",
            "\n",
            "   Q10.Advantage_evaluation   Q11.Disadvantage_educational_process  \\\n",
            "0                          2                                     3   \n",
            "1                          1                                     2   \n",
            "2                          3                                     4   \n",
            "3                          2                                     3   \n",
            "4                          3                                     4   \n",
            "\n",
            "   Q12.Gender  Q13.Year_of_study Q14.Major  Q15.Passed_exams  Q16.GPA  \n",
            "0           1                  2         2                 1      9.2  \n",
            "1           2                  2         2                 1      7.7  \n",
            "2           2                  2         2                 0      7.2  \n",
            "3           1                  2         2                 1      8.2  \n",
            "4           1                  2         2                 1      7.7  \n",
            "\n",
            "[5 rows x 35 columns]\n"
          ]
        }
      ],
      "source": [
        "# Load the dataset with the correct encoding\n",
        "df = pd.read_csv('/content/Survey_AI.csv')\n",
        "\n",
        "# Perform operations on the dataset\n",
        "# For example, display the first few rows\n",
        "print(df.head())"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "6a53ce08",
      "metadata": {
        "papermill": {
          "duration": 0.019411,
          "end_time": "2023-05-01T19:26:21.789827",
          "exception": false,
          "start_time": "2023-05-01T19:26:21.770416",
          "status": "completed"
        },
        "tags": [],
        "id": "6a53ce08"
      },
      "source": [
        "**looking at the first 20 rows of the dataframe (df):**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "id": "9654ebae",
      "metadata": {
        "_cell_guid": "48287e9c-12f8-4d99-b3d3-c4a60f2012a1",
        "_uuid": "14e23c93-ecfc-4f94-9a49-dfc357f71bef",
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:21.830548Z",
          "iopub.status.busy": "2023-05-01T19:26:21.830060Z",
          "iopub.status.idle": "2023-05-01T19:26:21.877239Z",
          "shell.execute_reply": "2023-05-01T19:26:21.876305Z"
        },
        "jupyter": {
          "outputs_hidden": false
        },
        "papermill": {
          "duration": 0.070414,
          "end_time": "2023-05-01T19:26:21.879790",
          "exception": false,
          "start_time": "2023-05-01T19:26:21.809376",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 934
        },
        "id": "9654ebae",
        "outputId": "e2f5869a-198c-4251-e71b-53da0668a529"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    ID  Q1.AI_knowledge                                      Q2.AI_sources  \\\n",
              "0    1                8  Internet;Books/Scientific papers (physical/onl...   \n",
              "1    2                7                              Internet;Social media   \n",
              "2    3                5  Internet;Books/Scientific papers (physical/onl...   \n",
              "3    4                5                              Internet;Social media   \n",
              "4    5                4                                           Internet   \n",
              "5    6                5           Internet;Discussions with family/friends   \n",
              "6    7                7  Books/Scientific papers (physical/online forma...   \n",
              "7    8                6                                           Internet   \n",
              "8    9                6  Internet;Books/Scientific papers (physical/onl...   \n",
              "9   10                4                                           Internet   \n",
              "10  11                4           Internet;Discussions with family/friends   \n",
              "11  12                6                                           Internet   \n",
              "12  13                9  Internet;Books/Scientific papers (physical/onl...   \n",
              "13  14                9   Books/Scientific papers (physical/online format)   \n",
              "14  15                7                                           Internet   \n",
              "15  16                6  Internet;Books/Scientific papers (physical/onl...   \n",
              "16  17                1                     I don't inform myself about AI   \n",
              "17  18                8                              Internet;Social media   \n",
              "18  19                7  Internet;Social media;Discussions with family/...   \n",
              "19  20                6                                       Social media   \n",
              "\n",
              "    Q2#1.Internet  Q2#2.Books/Papers  Q2#3.Social_media  Q2#4.Discussions  \\\n",
              "0               1                  1                  0                 0   \n",
              "1               1                  0                  1                 0   \n",
              "2               1                  1                  0                 0   \n",
              "3               1                  0                  1                 0   \n",
              "4               1                  0                  0                 0   \n",
              "5               1                  0                  0                 1   \n",
              "6               0                  1                  1                 1   \n",
              "7               1                  0                  0                 0   \n",
              "8               1                  1                  0                 1   \n",
              "9               1                  0                  0                 0   \n",
              "10              1                  0                  0                 1   \n",
              "11              1                  0                  0                 0   \n",
              "12              1                  1                  1                 0   \n",
              "13              0                  1                  0                 0   \n",
              "14              1                  0                  0                 0   \n",
              "15              1                  1                  0                 0   \n",
              "16              0                  0                  0                 0   \n",
              "17              1                  0                  1                 0   \n",
              "18              1                  0                  1                 1   \n",
              "19              0                  0                  1                 0   \n",
              "\n",
              "    Q2#5.NotInformed  Q3#1.AI_dehumanization  Q3#2.Job_replacement  ...  \\\n",
              "0                  0                       1                     2  ...   \n",
              "1                  0                       2                     3  ...   \n",
              "2                  0                       2                     1  ...   \n",
              "3                  0                       4                     4  ...   \n",
              "4                  0                       1                     2  ...   \n",
              "5                  0                       3                     4  ...   \n",
              "6                  0                       1                     2  ...   \n",
              "7                  0                       1                     1  ...   \n",
              "8                  0                       2                     4  ...   \n",
              "9                  0                       4                     4  ...   \n",
              "10                 0                       3                     3  ...   \n",
              "11                 0                       4                     4  ...   \n",
              "12                 0                       2                     4  ...   \n",
              "13                 0                       2                     4  ...   \n",
              "14                 0                       2                     4  ...   \n",
              "15                 0                       2                     2  ...   \n",
              "16                 1                       1                     4  ...   \n",
              "17                 0                       5                     5  ...   \n",
              "18                 0                       4                     4  ...   \n",
              "19                 0                       1                     2  ...   \n",
              "\n",
              "    Q7.Utility_grade  Q8.Advantage_teaching  Q9.Advantage_learning  \\\n",
              "0                  9                      3                      1   \n",
              "1                  6                      2                      2   \n",
              "2                  6                      3                      3   \n",
              "3                  9                      1                      2   \n",
              "4                  8                      3                      2   \n",
              "5                  6                      1                      2   \n",
              "6                 10                      1                      2   \n",
              "7                  8                      3                      3   \n",
              "8                  8                      3                      2   \n",
              "9                  7                      1                      1   \n",
              "10                10                      2                      2   \n",
              "11                 4                      2                      2   \n",
              "12                10                      3                      1   \n",
              "13                 9                      1                      1   \n",
              "14                10                      3                      1   \n",
              "15                 4                      2                      2   \n",
              "16                 3                      1                      2   \n",
              "17                 8                      1                      1   \n",
              "18                 6                      1                      1   \n",
              "19                 6                      1                      3   \n",
              "\n",
              "    Q10.Advantage_evaluation   Q11.Disadvantage_educational_process  \\\n",
              "0                           2                                     3   \n",
              "1                           1                                     2   \n",
              "2                           3                                     4   \n",
              "3                           2                                     3   \n",
              "4                           3                                     4   \n",
              "5                           3                                     1   \n",
              "6                           1                                     3   \n",
              "7                           3                                     3   \n",
              "8                           2                                     1   \n",
              "9                           3                                     1   \n",
              "10                          3                                     3   \n",
              "11                          3                                     2   \n",
              "12                          3                                     3   \n",
              "13                          3                                     2   \n",
              "14                          3                                     4   \n",
              "15                          1                                     1   \n",
              "16                          1                                     4   \n",
              "17                          3                                     1   \n",
              "18                          2                                     2   \n",
              "19                          3                                     2   \n",
              "\n",
              "    Q12.Gender  Q13.Year_of_study Q14.Major  Q15.Passed_exams  Q16.GPA  \n",
              "0            1                  2         2                 1      9.2  \n",
              "1            2                  2         2                 1      7.7  \n",
              "2            2                  2         2                 0      7.2  \n",
              "3            1                  2         2                 1      8.2  \n",
              "4            1                  2         2                 1      7.7  \n",
              "5            1                  2         2                 1      7.7  \n",
              "6            1                  2         2                 0      7.2  \n",
              "7            2                  2         2                 0      6.7  \n",
              "8            1                  2         2                 0      7.7  \n",
              "9            1                  2         3                 1      8.2  \n",
              "10           1                  2         3                 0      7.7  \n",
              "11           2                  2         2                 1      7.7  \n",
              "12           1                  2         2                 1      9.7  \n",
              "13           2                  1         3                 1      9.2  \n",
              "14           1                  2         2                 1      9.2  \n",
              "15           1                  2         3                 1      8.2  \n",
              "16           2                  2         2                 0      6.2  \n",
              "17           2                  1         3                 1      9.2  \n",
              "18           1                  2         3                 1      7.7  \n",
              "19           1                  1         1                 1      8.7  \n",
              "\n",
              "[20 rows x 35 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3ab3bae8-d239-4d7f-8d72-9ff4b5ae4dba\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ID</th>\n",
              "      <th>Q1.AI_knowledge</th>\n",
              "      <th>Q2.AI_sources</th>\n",
              "      <th>Q2#1.Internet</th>\n",
              "      <th>Q2#2.Books/Papers</th>\n",
              "      <th>Q2#3.Social_media</th>\n",
              "      <th>Q2#4.Discussions</th>\n",
              "      <th>Q2#5.NotInformed</th>\n",
              "      <th>Q3#1.AI_dehumanization</th>\n",
              "      <th>Q3#2.Job_replacement</th>\n",
              "      <th>...</th>\n",
              "      <th>Q7.Utility_grade</th>\n",
              "      <th>Q8.Advantage_teaching</th>\n",
              "      <th>Q9.Advantage_learning</th>\n",
              "      <th>Q10.Advantage_evaluation</th>\n",
              "      <th>Q11.Disadvantage_educational_process</th>\n",
              "      <th>Q12.Gender</th>\n",
              "      <th>Q13.Year_of_study</th>\n",
              "      <th>Q14.Major</th>\n",
              "      <th>Q15.Passed_exams</th>\n",
              "      <th>Q16.GPA</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>8</td>\n",
              "      <td>Internet;Books/Scientific papers (physical/onl...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>9</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>9.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>7</td>\n",
              "      <td>Internet;Social media</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>7.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>5</td>\n",
              "      <td>Internet;Books/Scientific papers (physical/onl...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>7.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>Internet;Social media</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>8.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>4</td>\n",
              "      <td>Internet</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>7.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>5</td>\n",
              "      <td>Internet;Discussions with family/friends</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>7.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>7</td>\n",
              "      <td>Books/Scientific papers (physical/online forma...</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>7.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>6</td>\n",
              "      <td>Internet</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>6.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>6</td>\n",
              "      <td>Internet;Books/Scientific papers (physical/onl...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>7.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>10</td>\n",
              "      <td>4</td>\n",
              "      <td>Internet</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>8.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>11</td>\n",
              "      <td>4</td>\n",
              "      <td>Internet;Discussions with family/friends</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>...</td>\n",
              "      <td>10</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>7.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>12</td>\n",
              "      <td>6</td>\n",
              "      <td>Internet</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>7.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>13</td>\n",
              "      <td>9</td>\n",
              "      <td>Internet;Books/Scientific papers (physical/onl...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>10</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>9.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>14</td>\n",
              "      <td>9</td>\n",
              "      <td>Books/Scientific papers (physical/online format)</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>9</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>9.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>15</td>\n",
              "      <td>7</td>\n",
              "      <td>Internet</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>10</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>9.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>16</td>\n",
              "      <td>6</td>\n",
              "      <td>Internet;Books/Scientific papers (physical/onl...</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>8.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>17</td>\n",
              "      <td>1</td>\n",
              "      <td>I don't inform myself about AI</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>6.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>18</td>\n",
              "      <td>8</td>\n",
              "      <td>Internet;Social media</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>5</td>\n",
              "      <td>...</td>\n",
              "      <td>8</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>9.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>19</td>\n",
              "      <td>7</td>\n",
              "      <td>Internet;Social media;Discussions with family/...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>7.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>20</td>\n",
              "      <td>6</td>\n",
              "      <td>Social media</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>...</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>8.7</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>20 rows × 35 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3ab3bae8-d239-4d7f-8d72-9ff4b5ae4dba')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-3ab3bae8-d239-4d7f-8d72-9ff4b5ae4dba button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-3ab3bae8-d239-4d7f-8d72-9ff4b5ae4dba');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-28f54d25-1794-4a70-b00c-953efeeb5b51\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-28f54d25-1794-4a70-b00c-953efeeb5b51')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-28f54d25-1794-4a70-b00c-953efeeb5b51 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ],
      "source": [
        "df.head(20)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "b94b5aab",
      "metadata": {
        "papermill": {
          "duration": 0.019727,
          "end_time": "2023-05-01T19:26:21.919715",
          "exception": false,
          "start_time": "2023-05-01T19:26:21.899988",
          "status": "completed"
        },
        "tags": [],
        "id": "b94b5aab"
      },
      "source": [
        "**Adding some additional imports:**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "id": "b4c820f4",
      "metadata": {
        "_cell_guid": "375802f0-25cb-432e-b598-893241b57652",
        "_uuid": "a64ed405-0aa1-41b2-9c93-b66e5e7ed075",
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:21.962939Z",
          "iopub.status.busy": "2023-05-01T19:26:21.961789Z",
          "iopub.status.idle": "2023-05-01T19:26:23.149319Z",
          "shell.execute_reply": "2023-05-01T19:26:23.147892Z"
        },
        "jupyter": {
          "outputs_hidden": false
        },
        "papermill": {
          "duration": 1.212584,
          "end_time": "2023-05-01T19:26:23.152274",
          "exception": false,
          "start_time": "2023-05-01T19:26:21.939690",
          "status": "completed"
        },
        "tags": [],
        "id": "b4c820f4"
      },
      "outputs": [],
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "sns.set()\n",
        "%matplotlib inline"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "7a9786ad",
      "metadata": {
        "papermill": {
          "duration": 0.019978,
          "end_time": "2023-05-01T19:26:23.192662",
          "exception": false,
          "start_time": "2023-05-01T19:26:23.172684",
          "status": "completed"
        },
        "tags": [],
        "id": "7a9786ad"
      },
      "source": [
        "**Missing values:**\n",
        "<br>\n",
        "we need to check for missing values as these can impact the ability to use certain operations"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "id": "07f19b67",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:23.235754Z",
          "iopub.status.busy": "2023-05-01T19:26:23.235324Z",
          "iopub.status.idle": "2023-05-01T19:26:23.246089Z",
          "shell.execute_reply": "2023-05-01T19:26:23.244878Z"
        },
        "papermill": {
          "duration": 0.035449,
          "end_time": "2023-05-01T19:26:23.248862",
          "exception": false,
          "start_time": "2023-05-01T19:26:23.213413",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "07f19b67",
        "outputId": "ce602eba-c146-4600-a235-7acb83375a5c"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ID                                      0\n",
              "Q1.AI_knowledge                         0\n",
              "Q2.AI_sources                           0\n",
              "Q2#1.Internet                           0\n",
              "Q2#2.Books/Papers                       0\n",
              "Q2#3.Social_media                       0\n",
              "Q2#4.Discussions                        0\n",
              "Q2#5.NotInformed                        0\n",
              "Q3#1.AI_dehumanization                  0\n",
              "Q3#2.Job_replacement                    0\n",
              "Q3#3.Problem_solving                    0\n",
              "Q3#4.AI_rulling_society                 0\n",
              "Q4#1.AI_costly                          0\n",
              "Q4#2.Economic_crisis                    0\n",
              "Q4#3.Economic_growth                    0\n",
              "Q4#4.Job_loss                           0\n",
              "Q5.Feelings                             0\n",
              "Q6.Domains                              0\n",
              "Q6#1.Education                          0\n",
              "Q6#2.Medicine                           0\n",
              "Q6#3.Agriculture                        0\n",
              "Q6#4.Constructions                      0\n",
              "Q6#5.Marketing                          0\n",
              "Q6#6.Administration                     0\n",
              "Q6#7.Art                                0\n",
              "Q7.Utility_grade                        0\n",
              "Q8.Advantage_teaching                   0\n",
              "Q9.Advantage_learning                   0\n",
              "Q10.Advantage_evaluation                0\n",
              "Q11.Disadvantage_educational_process    0\n",
              "Q12.Gender                              0\n",
              "Q13.Year_of_study                       0\n",
              "Q14.Major                               0\n",
              "Q15.Passed_exams                        0\n",
              "Q16.GPA                                 0\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ],
      "source": [
        "df.isnull().sum()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "65d4e2c1",
      "metadata": {
        "papermill": {
          "duration": 0.020007,
          "end_time": "2023-05-01T19:26:23.289583",
          "exception": false,
          "start_time": "2023-05-01T19:26:23.269576",
          "status": "completed"
        },
        "tags": [],
        "id": "65d4e2c1"
      },
      "source": [
        "**insight:**\n",
        "<br>\n",
        "wonderful! there do not appear to be any missing values in our dataset."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "a099e0e7",
      "metadata": {
        "papermill": {
          "duration": 0.020102,
          "end_time": "2023-05-01T19:26:23.330110",
          "exception": false,
          "start_time": "2023-05-01T19:26:23.310008",
          "status": "completed"
        },
        "tags": [],
        "id": "a099e0e7"
      },
      "source": [
        "<h3>Question 1</h3>\n",
        "<i>On a scale of 1 to 10, how informed do you think you are about the concept of artificial intelligence? (1-not informed at all, 10-extremely informed)</i>\n",
        "<br>\n",
        "<br>\n",
        "\n",
        "The first thing we would like to know is what is the **general distribution** of how informed people think they are. This can be done using a seaborn countplot - using the dataframe df and x is the name the Q1 column. I have used a red colour for the bars to ensure consistency across the graphs."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "id": "09ab9295",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:23.373478Z",
          "iopub.status.busy": "2023-05-01T19:26:23.372303Z",
          "iopub.status.idle": "2023-05-01T19:26:23.722672Z",
          "shell.execute_reply": "2023-05-01T19:26:23.721367Z"
        },
        "papermill": {
          "duration": 0.374961,
          "end_time": "2023-05-01T19:26:23.725428",
          "exception": false,
          "start_time": "2023-05-01T19:26:23.350467",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 532
        },
        "id": "09ab9295",
        "outputId": "cde91d95-d7d9-4d7c-85b7-4b17e0d5c113"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[Text(0.5, 0, 'AI knowledge rating'),\n",
              " Text(0, 0.5, 'Number of responses'),\n",
              " Text(0.5, 1.0, 'A countplot of AI knowledge ratings')]"
            ]
          },
          "metadata": {},
          "execution_count": 17
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "fig1 = sns.countplot(data=df,x='Q1.AI_knowledge',color='r')\n",
        "fig1.set(xlabel='AI knowledge rating',ylabel='Number of responses',title='A countplot of AI knowledge ratings')"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "81551073",
      "metadata": {
        "papermill": {
          "duration": 0.021418,
          "end_time": "2023-05-01T19:26:23.768014",
          "exception": false,
          "start_time": "2023-05-01T19:26:23.746596",
          "status": "completed"
        },
        "tags": [],
        "id": "81551073"
      },
      "source": [
        "**insight:**\n",
        "<br>\n",
        "The results of the first question seem to form a bell curve with most students having a confidence of 5 to 7 and ome outliers who have a confidence of 1,2,3 or 10. We can explore more about some of students that fall in these ranges in more detail later."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "ace2c705",
      "metadata": {
        "papermill": {
          "duration": 0.020571,
          "end_time": "2023-05-01T19:26:23.809648",
          "exception": false,
          "start_time": "2023-05-01T19:26:23.789077",
          "status": "completed"
        },
        "tags": [],
        "id": "ace2c705"
      },
      "source": [
        "<h3>Question 2</h3>\n",
        "<i>What sources do you use to learn about the concept of artificial intelligence?\n",
        "<li>Internet\n",
        "<li>Books/Scientific Papers\n",
        "<li>Social Media\n",
        "<li>Discussions\n",
        "<li>\"I don't inform myself about AI\"\n",
        "</i>\n",
        "<br>\n",
        "Some things that would be interesting to know would be what proportion of the students use each source (2i), is there any correlation between the sources used (2ii) and how is a student's ai knowledge rating related to their sources of information (2iii)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "bf2c743b",
      "metadata": {
        "papermill": {
          "duration": 0.021705,
          "end_time": "2023-05-01T19:26:23.852464",
          "exception": false,
          "start_time": "2023-05-01T19:26:23.830759",
          "status": "completed"
        },
        "tags": [],
        "id": "bf2c743b"
      },
      "source": [
        "<b>2i: what proportion of the students use each source</b>\n",
        "\n",
        "I used matplotlib to create a figure with 5 subplots containing 5 pie charts corresponding to each answer. I used a loop in order to reduce the amount of code needed to make the pie charts - a chart is created based off of the value counts in each column."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 18,
      "id": "1f91e0f1",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:23.897488Z",
          "iopub.status.busy": "2023-05-01T19:26:23.897067Z",
          "iopub.status.idle": "2023-05-01T19:26:24.244209Z",
          "shell.execute_reply": "2023-05-01T19:26:24.242498Z"
        },
        "papermill": {
          "duration": 0.374524,
          "end_time": "2023-05-01T19:26:24.248709",
          "exception": false,
          "start_time": "2023-05-01T19:26:23.874185",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 166
        },
        "id": "1f91e0f1",
        "outputId": "1abcb295-a59b-4b89-a102-4be3ab205328"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x800 with 5 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "fig, (ax1, ax2, ax3, ax4, ax5) = plt.subplots(nrows=1, ncols=5, figsize=(8, 8))\n",
        "axes = [ax1,ax2,ax3,ax4,ax5]\n",
        "columns = ['Q2#1.Internet','Q2#2.Books/Papers','Q2#3.Social_media','Q2#4.Discussions','Q2#5.NotInformed']\n",
        "for i in range(5):\n",
        "    axes[i].pie(df[columns[i]].value_counts()[[0,1]],colors='rg',startangle=90,labels=['no','yes'])\n",
        "    axes[i].set_title(columns[i][5:])\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "1599bd3d",
      "metadata": {
        "papermill": {
          "duration": 0.021382,
          "end_time": "2023-05-01T19:26:24.311598",
          "exception": false,
          "start_time": "2023-05-01T19:26:24.290216",
          "status": "completed"
        },
        "tags": [],
        "id": "1599bd3d"
      },
      "source": [
        "**insight:**\n",
        "<br>\n",
        "We can see visually that the internet is by far the most commonly used source of information. this makes sense as a internet contains a huge library of available of information. Very few students claimed to be uninformed so hopefully that is a positive step in the right direction."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "1633b6fb",
      "metadata": {
        "papermill": {
          "duration": 0.021403,
          "end_time": "2023-05-01T19:26:24.354523",
          "exception": false,
          "start_time": "2023-05-01T19:26:24.333120",
          "status": "completed"
        },
        "tags": [],
        "id": "1633b6fb"
      },
      "source": [
        "<b>2ii is there any correlation betweent the sources used?</b>\n",
        "\n",
        "In order to solve this question I used pandas to determine the correlation between the five columns."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 19,
      "id": "8972bf51",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:24.400142Z",
          "iopub.status.busy": "2023-05-01T19:26:24.399381Z",
          "iopub.status.idle": "2023-05-01T19:26:24.417040Z",
          "shell.execute_reply": "2023-05-01T19:26:24.415816Z"
        },
        "papermill": {
          "duration": 0.04352,
          "end_time": "2023-05-01T19:26:24.419798",
          "exception": false,
          "start_time": "2023-05-01T19:26:24.376278",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 226
        },
        "id": "8972bf51",
        "outputId": "b96cafc3-0dfb-470b-c481-5a9a100bc2b7"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                   Q2#1.Internet  Q2#2.Books/Papers  Q2#3.Social_media  \\\n",
              "Q2#1.Internet               1.00              -0.00               0.14   \n",
              "Q2#2.Books/Papers          -0.00               1.00               0.04   \n",
              "Q2#3.Social_media           0.14               0.04               1.00   \n",
              "Q2#4.Discussions            0.10               0.10               0.28   \n",
              "Q2#5.NotInformed           -0.55              -0.20              -0.24   \n",
              "\n",
              "                   Q2#4.Discussions  Q2#5.NotInformed  \n",
              "Q2#1.Internet                  0.10             -0.55  \n",
              "Q2#2.Books/Papers              0.10             -0.20  \n",
              "Q2#3.Social_media              0.28             -0.24  \n",
              "Q2#4.Discussions               1.00             -0.13  \n",
              "Q2#5.NotInformed              -0.13              1.00  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b85bb19f-7561-4bf2-9039-37f5a865f399\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Q2#1.Internet</th>\n",
              "      <th>Q2#2.Books/Papers</th>\n",
              "      <th>Q2#3.Social_media</th>\n",
              "      <th>Q2#4.Discussions</th>\n",
              "      <th>Q2#5.NotInformed</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Q2#1.Internet</th>\n",
              "      <td>1.00</td>\n",
              "      <td>-0.00</td>\n",
              "      <td>0.14</td>\n",
              "      <td>0.10</td>\n",
              "      <td>-0.55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Q2#2.Books/Papers</th>\n",
              "      <td>-0.00</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0.10</td>\n",
              "      <td>-0.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Q2#3.Social_media</th>\n",
              "      <td>0.14</td>\n",
              "      <td>0.04</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.28</td>\n",
              "      <td>-0.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Q2#4.Discussions</th>\n",
              "      <td>0.10</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0.28</td>\n",
              "      <td>1.00</td>\n",
              "      <td>-0.13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Q2#5.NotInformed</th>\n",
              "      <td>-0.55</td>\n",
              "      <td>-0.20</td>\n",
              "      <td>-0.24</td>\n",
              "      <td>-0.13</td>\n",
              "      <td>1.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b85bb19f-7561-4bf2-9039-37f5a865f399')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b85bb19f-7561-4bf2-9039-37f5a865f399 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b85bb19f-7561-4bf2-9039-37f5a865f399');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7b63f3df-7d8e-4a65-8071-c8caea70816e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7b63f3df-7d8e-4a65-8071-c8caea70816e')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7b63f3df-7d8e-4a65-8071-c8caea70816e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ],
      "source": [
        "df[['Q2#1.Internet','Q2#2.Books/Papers','Q2#3.Social_media','Q2#4.Discussions','Q2#5.NotInformed']].corr().round(2)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "38fe21d3",
      "metadata": {
        "papermill": {
          "duration": 0.021563,
          "end_time": "2023-05-01T19:26:24.463454",
          "exception": false,
          "start_time": "2023-05-01T19:26:24.441891",
          "status": "completed"
        },
        "tags": [],
        "id": "38fe21d3"
      },
      "source": [
        "**insight:**\n",
        "<br>\n",
        "The most clear relationship was between those that used the internet and those who described themselves as not informed with a notable inverse relationship of -0.55. Due to the columns being very imbalanced with small sample sizes this is probably not significant."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "853f562f",
      "metadata": {
        "papermill": {
          "duration": 0.022294,
          "end_time": "2023-05-01T19:26:24.507535",
          "exception": false,
          "start_time": "2023-05-01T19:26:24.485241",
          "status": "completed"
        },
        "tags": [],
        "id": "853f562f"
      },
      "source": [
        "<b>2iii how is a student's ai knowledge rating related to their sources of information?</b>\n",
        "\n",
        "In order to solve this question I compared the means for the first questions for each response to the subquestions. This used a loop and then restructuring the dataframe in order to improve readability. I also calculated the differences to see the overall net effect."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 20,
      "id": "2dfd886e",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:24.554045Z",
          "iopub.status.busy": "2023-05-01T19:26:24.553611Z",
          "iopub.status.idle": "2023-05-01T19:26:24.579553Z",
          "shell.execute_reply": "2023-05-01T19:26:24.578184Z"
        },
        "papermill": {
          "duration": 0.052541,
          "end_time": "2023-05-01T19:26:24.582104",
          "exception": false,
          "start_time": "2023-05-01T19:26:24.529563",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 237
        },
        "id": "2dfd886e",
        "outputId": "e1a96a2e-a2ee-461d-ed39-31fc38bde6bf"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                   No - MeanQ1  Yes - MeanQ1  Absolute Change\n",
              "Answer                                                       \n",
              "Q2#1.Internet             5.00          6.12             1.12\n",
              "Q2#2.Books/Papers         5.42          6.81             1.39\n",
              "Q2#3.Social_media         5.41          6.55             1.14\n",
              "Q2#4.Discussions          5.85          6.17             0.32\n",
              "Q2#5.NotInformed          6.13          2.83            -3.30"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a397fa7d-3c63-47e3-8e50-3978fa10406b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>No - MeanQ1</th>\n",
              "      <th>Yes - MeanQ1</th>\n",
              "      <th>Absolute Change</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Answer</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Q2#1.Internet</th>\n",
              "      <td>5.00</td>\n",
              "      <td>6.12</td>\n",
              "      <td>1.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Q2#2.Books/Papers</th>\n",
              "      <td>5.42</td>\n",
              "      <td>6.81</td>\n",
              "      <td>1.39</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Q2#3.Social_media</th>\n",
              "      <td>5.41</td>\n",
              "      <td>6.55</td>\n",
              "      <td>1.14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Q2#4.Discussions</th>\n",
              "      <td>5.85</td>\n",
              "      <td>6.17</td>\n",
              "      <td>0.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Q2#5.NotInformed</th>\n",
              "      <td>6.13</td>\n",
              "      <td>2.83</td>\n",
              "      <td>-3.30</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a397fa7d-3c63-47e3-8e50-3978fa10406b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a397fa7d-3c63-47e3-8e50-3978fa10406b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a397fa7d-3c63-47e3-8e50-3978fa10406b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7157db7c-83e0-4c8d-b48c-2d66ef32efb5\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7157db7c-83e0-4c8d-b48c-2d66ef32efb5')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7157db7c-83e0-4c8d-b48c-2d66ef32efb5 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ],
      "source": [
        "list = []\n",
        "for i in columns:\n",
        "    x1 = df[df[i]==0]['Q1.AI_knowledge'].mean().round(2)\n",
        "    x2 = df[df[i]==1]['Q1.AI_knowledge'].mean().round(2)\n",
        "    list.append([i,x1,x2,x2-x1])\n",
        "df2 = pd.DataFrame(list)\n",
        "df2.columns = ['Answer', 'No - MeanQ1', 'Yes - MeanQ1', 'Absolute Change']\n",
        "df2.set_index(['Answer'],inplace=True)\n",
        "df2.head(5)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "05dc859a",
      "metadata": {
        "papermill": {
          "duration": 0.021573,
          "end_time": "2023-05-01T19:26:24.625850",
          "exception": false,
          "start_time": "2023-05-01T19:26:24.604277",
          "status": "completed"
        },
        "tags": [],
        "id": "05dc859a"
      },
      "source": [
        "**insight:**\n",
        "<br>\n",
        "Any source of information (responses 1-4) improvea the students overall AI knowledge rating with books/papers having the largest effect whereas describing oneself as being not informed having the largest effect overall (-3.30 negatively) - this intuitively makes sense. Discussions has the least overall impact which is surprising however people tend to spend less time discussing that using other sources."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "e0f030dc",
      "metadata": {
        "papermill": {
          "duration": 0.021981,
          "end_time": "2023-05-01T19:26:24.669625",
          "exception": false,
          "start_time": "2023-05-01T19:26:24.647644",
          "status": "completed"
        },
        "tags": [],
        "id": "e0f030dc"
      },
      "source": [
        "<h3>Question 3 & 4: General Views</h3>\n",
        "Express your agreement or disagreement with the following statements:<i>\n",
        "    <br>Strongly Disagree(1), Partially Disagree(2), Neutral(3), Partially Agree(4), Fully Agree(5)\n",
        "<h4>Q3</h4>\n",
        "    <ol>\n",
        "\n",
        "<li>AI encourages dehumanization\n",
        "<li>Robots will replace people at work\n",
        "<li>AI helps to solve many problems in society (education, agriculture, medicine), managing time and dangerous situations more efficiently\n",
        "<li>AI will rule society\n",
        "</ol>\n",
        "<h4>Q4</h4>\n",
        "    <ol>\n",
        "\n",
        "<li>Machinery using AI is very expensive and resource intensive to build and maintain\n",
        "<li>AI will lead to a global economic crisis\n",
        "<li>AI will help global economic growth\n",
        "<li>AI leads to job losses\n",
        "\n",
        "</ol>\n",
        "</i>\n",
        "<br>\n",
        "\n",
        "Some questions I thought were worth exploring included are:\n",
        "    <li>what are the general perceptions for each question (3&4i)\n",
        "    <li>are there are questions that are particularly divisive (3&4ii)\n",
        "    <li>what questions have the most similar responses (3&4iii)\n",
        "    <li>what are the thoughts of people with high AI knowledge ratings (3&4iv)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "459816cf",
      "metadata": {
        "papermill": {
          "duration": 0.022293,
          "end_time": "2023-05-01T19:26:24.713615",
          "exception": false,
          "start_time": "2023-05-01T19:26:24.691322",
          "status": "completed"
        },
        "tags": [],
        "id": "459816cf"
      },
      "source": [
        "**before moving on I created a list of the column names in order to save writing them out multiple times, as well as list of the possible responses**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 21,
      "id": "c5828575",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:24.762505Z",
          "iopub.status.busy": "2023-05-01T19:26:24.761535Z",
          "iopub.status.idle": "2023-05-01T19:26:24.768564Z",
          "shell.execute_reply": "2023-05-01T19:26:24.767477Z"
        },
        "papermill": {
          "duration": 0.034812,
          "end_time": "2023-05-01T19:26:24.771372",
          "exception": false,
          "start_time": "2023-05-01T19:26:24.736560",
          "status": "completed"
        },
        "tags": [],
        "id": "c5828575"
      },
      "outputs": [],
      "source": [
        "columns2 = ['Q3#1.AI_dehumanization','Q3#2.Job_replacement','Q3#3.Problem_solving','Q3#4.AI_rulling_society',\n",
        "            'Q4#1.AI_costly','Q4#2.Economic_crisis','Q4#3.Economic_growth','Q4#4.Job_loss']\n",
        "columns2_natural = ['AI dehumanization','Job replacement','Problem solving','AI ruling society',\n",
        "                   'AI costly','Economic crisis','Economic growth','Job loss']\n",
        "columns3 = ['Strongly Disagree', 'Partially Disagree', 'Neutral', 'Partially Agree', 'Strongly Agree']\n",
        "columns3i = [' ',' '] + columns3"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "ab719666",
      "metadata": {
        "papermill": {
          "duration": 0.025848,
          "end_time": "2023-05-01T19:26:24.821115",
          "exception": false,
          "start_time": "2023-05-01T19:26:24.795267",
          "status": "completed"
        },
        "tags": [],
        "id": "ab719666"
      },
      "source": [
        "**3&4i What are the general perceptions for each question?**\n",
        "\n",
        "In order to answer this question I created a violinplot for every question in order to see the overall distribution visually."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 22,
      "id": "824742fd",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:24.870490Z",
          "iopub.status.busy": "2023-05-01T19:26:24.869610Z",
          "iopub.status.idle": "2023-05-01T19:26:25.215834Z",
          "shell.execute_reply": "2023-05-01T19:26:25.214630Z"
        },
        "papermill": {
          "duration": 0.373459,
          "end_time": "2023-05-01T19:26:25.218678",
          "exception": false,
          "start_time": "2023-05-01T19:26:24.845219",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 640
        },
        "id": "824742fd",
        "outputId": "ed51584a-8140-4731-c756-d0a1279ca686"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-22-712b0ee3e113>:2: UserWarning: FixedFormatter should only be used together with FixedLocator\n",
            "  vplot.set(xticklabels=columns2_natural,yticklabels=columns3i,title='violin plot of questions 3 & 4 statements versus responses')\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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gcWLF2P//v14/fXXcerUKaxevdrv+djtdtxyyy0YMmQIHnjgAezevRv/+c9/0LVrV1x//fXtfj8vLw//7//9P8yfPx9XXnklPv/8c9x999146623MH78eK/fW79+PR588EEMHjwY9957LyoqKvD+++9j3759+OKLLxAXF4drr70WpaWl2LVrF5577jmf9mflypVYtWoVxo0bh+uuuw5nzpzBJ598ggMHDuCTTz6BwWDAQw89hC+++ALfffcdVqxYgaioqDbF686dO7Fs2TL06dMH9913H6qqqvDggw8iPT3dpzm1xokTJ3DdddchLS0Nf/vb38Rr4o477sDKlStx0UUXAQBWrVqF119/HfPmzcOQIUNQX1+PgwcP4tChQxg/frzfx+jEiRO44YYbEB0djVtvvRV6vR7r1q3DwoUL8eGHH2Lo0KFun3/yyScRFxeHO++8E4WFhXjvvffwxBNP4OWXXwYg3FBuueUWJCYmYsmSJaLb+7vvvvP5WFRVVYHjOBQVFYnX8NixY9v9XmRkJGbOnIkNGzbgmmuuwYABA3we05P9+/fjiy++wMcffwyGYXz+3q5du3Dvvfdi7NixuP/++wEAp0+fxr59+3DTTTfhggsuwMKFC/HBBx/g73//O3r16gUA6N27NwBgw4YNiIqKwuLFixEVFYU9e/bg1VdfRX19Pf75z38CAP7+97+jrq4OxcXFoniPjo4GAHAch6VLl+L333/HNddcg969e+P48eN47733kJeXh9dee81tvr/99hu2bdsm/rbfeOMN/P3vf8ett96Kjz/+GNdffz1qamrw1ltv4aGHHsL7778vfnf37t3429/+hkGDBuHOO+8EwzBYv349brrpJnz88ccYMmSI21j33HMPMjMzce+99+Lw4cP47LPPkJSUhH/84x8AgOeeew6PPPIIhgwZgmuuuQYA0K1bNwDAv/71L2zZsgULFixA7969UV1djd9//x2nTp3CwIEDWz0X/qytvv7+CI8//jiSkpJwxx13oLGxMeA5euPTTz/Fk08+iRkzZuDGG29Ec3Mzjh07hr/++guXXnppu99/7bXXYDAYcMstt8BiscBgMPh8vnzdj5qaGixZsgQzZ87E7NmzsWnTJqxYsQIGgwFXX301AMBsNmPhwoU4e/YsbrjhBmRmZmLz5s1Yvnw5amtrcdNNN7nN++uvv0ZDQwOuvfZaMAyDt956C8uWLcPWrVthMBgAAMuWLcPJkyexYMECZGRkoLKyErt27cL58+fF8JMvvvgCy5cvx4QJE3D//fejqakJn3zyCa6//nps2LBB/Jwv2/IbnkLRGPfeey8/duxY3mazie+Vlpby/fr141etWiW+9+qrr/JZWVni6yNHjvBZWVn8ww8/7La9Z555hs/KyuJ3794tvrdgwQJ+wYIF4utz587xWVlZ/Oeffy6+989//pPPyspyG5Pnef6KK67gr7zyynb3Y8qUKXxWVha/ZcsW8b26ujp+/Pjx/BVXXCG+t2fPHj4rK4vfs2cPz/M8b7FY+LFjx/Jz5szhzWaz+LkffviBz8rK4l955RXxvccff9ztGLRFRUUFP3DgQP7mm2/m7Xa7+P6HH37IZ2Vl8f/973/F98ixraioaHe7l19+OT9+/Hi+trZWfG/nzp18VlYWP2XKFK/7SWjt2N900038nDlz+ObmZvE9juP4a6+9lr/44ovF9y677DJ+yZIlbc6vrWOUlZXFv/rqq+Lr22+/nR84cCB/9uxZ8b2SkhJ+2LBh/A033CC+9/nnn/NZWVn8okWLeI7jxPf/93//l+/fv794LL777js+KyuL379/f5tzbItBgwbxWVlZfFZWFj9q1Cj+/fff9+l79fX1/KJFi/iBAwfy48aN48+cORPQ+BzH8VdffTV/77338jzvPF9vvfVWu9998skn+eHDh7v9lj3ZtGlTq9cFz/N8U1NTi/ceffRRfujQoW7XxpIlS9yuNcIXX3zB9+vXj9+7d6/b+5988gmflZXF//777+J7WVlZ/KBBg/hz586J761du5bPysrix48fz9fV1Ynvv/jii3xWVpb4WY7j+Isvvpi/+eab3a6HpqYmfurUqfzixYvF98hv68EHH3Sb0x133MGPGjXK7b2cnBz+n//8Z4v9GjFiBP/444+3eL89fF1bff39kd/Bdddd1+Ic+zLHKVOmtLp/nuvz0qVL+dmzZ/u+ow7ImjNt2jS3a8mf8+XLfixYsIDPysri//Of/4jvNTc385dffjk/duxY3mKx8DzP8++++y6flZXFf/nll+LnLBYLf+211/I5OTniNUZ+Y6NGjeKrq6vFz27dupXPysrit23bxvM8z9fU1LT7W6yvr+dHjhzJP/LII27vl5WV8SNGjBDf92VbgUDd5RTN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aGpqajN2htCvXz9ceeWVWLduHWpra3HBBRfgwIED2LBhA6ZPny7eeJWkR48eePjhh3HgwAEkJyfj888/R0VFBZ5++mmv3zEYDLj//vvx4IMPYsGCBZg9e7ZYwigjI8OtqwlZvJ588klMmDABOp2uVasTIFjqbrvtNqxatQq33norpk6dijNnzuDjjz8W67UFwr333ovbbrsN119/Pa666ipUV1fjww8/RN++fd1u4rGxsbjkkkvw4YcfgmEYdO3aFdu3b28RFwcIZUOuv/56XHrppbjmmmvQtWtXlJeX488//0RxcTG++uorAMDs2bMxatQoDBw4EAkJCThw4IBYbiSQY3TPPffg559/xvXXX4/rr78eOp0O69atg8ViEUvL+MOGDRvwySefYPr06ejWrRsaGhrw6aefIiYmps24xMbGRkyePBkzZ85E3759ERkZiePHj2P9+vWIjY3F7bff3ua4/fr1E0sDXX311Zg9ezbi4uLw22+/YePGjRg5ciR+//13PProo226rQcOHNgiZpMI8D59+rTbieaRRx5BTU0NxowZg7S0NBQVFeHDDz9E//79RW9D//79odPp8Oabb6Kurg5GoxFjxozBsGHDEB8fj+XLl2PhwoVgGAZffvllq+7kgQMHYuPGjXj66acxePBgREVFYerUqbj88suxadMm/Otf/8Ivv/yC4cOHw2634/Tp09i8eTPeeustDB48uM198AWWZfHkk0/ib3/7G+bMmYO5c+ciLS0NJSUl+OWXXxATE4M1a9b4vd2BAwdi9+7deOedd5CamorMzEz07NkTkyZNwowZM9CvXz9ERUXh559/xoEDB1qtOemJL2urr78/bzQ0NPg0x3nz5mHLli249dZbMXPmTJw9exa5ubkt3PG33HILUlJSMHz4cCQnJ+P06dP48MMPMWnSJL8f/ADfz5ev+wEID9xvvvkmCgsL0aNHD2zcuBFHjhzB//zP/4jlhq699lqsW7cOy5cvx6FDh5CRkYEtW7Zg3759eOihh/zel7y8PCxatAiXXHIJ+vTpA51Oh61bt6K8vFxc42JiYrBixQo88MADmDt3LmbNmoWkpCQUFRVhx44dGD58OB577DGfthUIVGRSNMusWbPw2WefgWGYdl3lhCeffBKZmZnYsGEDtm7dipSUFNx222248847ZZ5t6/To0QOPPvoonnvu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\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "vplot = sns.violinplot(data=df[columns2],color='r',inner=None)\n",
        "vplot.set(xticklabels=columns2_natural,yticklabels=columns3i,title='violin plot of questions 3 & 4 statements versus responses')\n",
        "for item in vplot.get_xticklabels():\n",
        "    item.set_rotation(90)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "41259b32",
      "metadata": {
        "papermill": {
          "duration": 0.022944,
          "end_time": "2023-05-01T19:26:25.265582",
          "exception": false,
          "start_time": "2023-05-01T19:26:25.242638",
          "status": "completed"
        },
        "tags": [],
        "id": "41259b32"
      },
      "source": [
        "**insight:**\n",
        "Most questions had a mixture of responses however some questions stood out such as most people believe that AI machinery is resource intensive and costly to maintain and AI will improve economic growth. Almost all students agreed with the statement \"AI helps to solve many problems in society (education, agriculture, medicine), managing time and dangerous situations more efficiently\"."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "25c6e702",
      "metadata": {
        "papermill": {
          "duration": 0.023226,
          "end_time": "2023-05-01T19:26:25.312437",
          "exception": false,
          "start_time": "2023-05-01T19:26:25.289211",
          "status": "completed"
        },
        "tags": [],
        "id": "25c6e702"
      },
      "source": [
        "**3&4ii: are there are questions that are particularly divisive?**\n",
        "\n",
        "We should expect a divisive question to have a more spread out distribution therefore using standard deviation is likely to be a reasonable indicator."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 23,
      "id": "bc9effd4",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:25.362261Z",
          "iopub.status.busy": "2023-05-01T19:26:25.361000Z",
          "iopub.status.idle": "2023-05-01T19:26:25.378236Z",
          "shell.execute_reply": "2023-05-01T19:26:25.377002Z"
        },
        "papermill": {
          "duration": 0.044559,
          "end_time": "2023-05-01T19:26:25.380889",
          "exception": false,
          "start_time": "2023-05-01T19:26:25.336330",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 331
        },
        "id": "bc9effd4",
        "outputId": "85a23799-e267-4b8b-9262-7dbebe94476b"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                   Standard Deviation\n",
              "Statement                            \n",
              "Job replacement                  1.21\n",
              "AI ruling society                1.20\n",
              "AI dehumanization                1.17\n",
              "Job loss                         1.07\n",
              "Economic crisis                  1.06\n",
              "Problem solving                  1.01\n",
              "AI costly                        0.92\n",
              "Economic growth                  0.87"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0dce6f3c-ae19-40bf-888d-e572bec6121c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Standard Deviation</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Statement</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Job replacement</th>\n",
              "      <td>1.21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AI ruling society</th>\n",
              "      <td>1.20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AI dehumanization</th>\n",
              "      <td>1.17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Job loss</th>\n",
              "      <td>1.07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Economic crisis</th>\n",
              "      <td>1.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Problem solving</th>\n",
              "      <td>1.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AI costly</th>\n",
              "      <td>0.92</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Economic growth</th>\n",
              "      <td>0.87</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0dce6f3c-ae19-40bf-888d-e572bec6121c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0dce6f3c-ae19-40bf-888d-e572bec6121c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0dce6f3c-ae19-40bf-888d-e572bec6121c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-97afc6d6-ce49-475f-92cd-1cb93f0f688d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-97afc6d6-ce49-475f-92cd-1cb93f0f688d')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-97afc6d6-ce49-475f-92cd-1cb93f0f688d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ],
      "source": [
        "list2 = []\n",
        "for i,j in enumerate(columns2):\n",
        "    list2.append([columns2_natural[i],df[j].std().round(2)])\n",
        "df3 = pd.DataFrame(list2)\n",
        "df3.columns = ['Statement', 'Standard Deviation']\n",
        "df3.set_index(['Statement'],inplace=True)\n",
        "df3.sort_values(by=['Standard Deviation'],ascending=False)\n",
        ""
      ]
    },
    {
      "cell_type": "markdown",
      "id": "99308cbc",
      "metadata": {
        "papermill": {
          "duration": 0.023209,
          "end_time": "2023-05-01T19:26:25.427732",
          "exception": false,
          "start_time": "2023-05-01T19:26:25.404523",
          "status": "completed"
        },
        "tags": [],
        "id": "99308cbc"
      },
      "source": [
        "**insight:**\n",
        "\n",
        "There were no significant differences in the standard deviations of the answers which is expected an most answers seem to have a similar distribution with different mean values. This implies there are no highly divisive questions."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "b56c6259",
      "metadata": {
        "papermill": {
          "duration": 0.023243,
          "end_time": "2023-05-01T19:26:25.474572",
          "exception": false,
          "start_time": "2023-05-01T19:26:25.451329",
          "status": "completed"
        },
        "tags": [],
        "id": "b56c6259"
      },
      "source": [
        "**3&4iii: what questions have the most similar responses?**\n",
        "\n",
        "It can be difficult to interpret large numbers of correlations, therefore a clustermap was used in order to visualise the correlations more easily."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 24,
      "id": "549573cf",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:25.523951Z",
          "iopub.status.busy": "2023-05-01T19:26:25.523505Z",
          "iopub.status.idle": "2023-05-01T19:26:26.594715Z",
          "shell.execute_reply": "2023-05-01T19:26:26.593437Z"
        },
        "papermill": {
          "duration": 1.099933,
          "end_time": "2023-05-01T19:26:26.598399",
          "exception": false,
          "start_time": "2023-05-01T19:26:25.498466",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 764
        },
        "id": "549573cf",
        "outputId": "c4f2ca25-1913-4016-8eb0-a19b8cac1a8f"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 0.98, 'Clustermap of statement correlations for Q3&4')"
            ]
          },
          "metadata": {},
          "execution_count": 24
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x1000 with 4 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAA9UAAAPbCAYAAABSQKhvAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAEAAElEQVR4nOzddVhUWR8H8C9ItyLY7TKCEoKYWKAgYost5tqx1hprrO7qGq+6KhjY3S0qBjYitoAItgIWHdIw7x+zjI4zwDCCiH4/z+Ozy7n33HvumTvxu6eUhEKhEERERERERERUYMrFXQAiIiIiIiKikopBNREREREREZGCGFQTERERERERKYhBNREREREREZGCGFQTERERERERKYhBNREREREREZGCGFQTERERERERKYhBNREREREREZGCGFQTERERERERKYhBdQG8evUKc+bMQefOnWFmZoYOHTrIlU8oFGL9+vVo1aoVLCws0KtXL9y/f79oC0tERERERERFjkF1ATx58gSXL19GtWrVUKtWLbnzbdiwAatWrcKgQYPg6ekJIyMjDBkyBGFhYUVYWiIiIiIiIipqSkKhUFjchSgpsrOzoawseg4xffp0BAUFwcvLK888aWlpaNq0Kfr164dJkyYBANLT09GuXTu0aNECc+fOLepiExERERERURFhS3UB5ATUBXH37l0kJSXB2dlZnKampoa2bdviypUrhVk8IiIiIiIi+sZUirsA35qDg0Oe2318fAr1fM+fPwcA1KxZUyK9Vq1a2LZtG1JTU6GhoVGo5yQiIiIiIqJvQ/6g+uGhIizGjyshIQFqampQV1eXSNfT04NQKER8fDyDaiIiIiIiohJK7qBamJVVlOX4Zgq7JZroZxMeHg4HBwd07doVixYtKu7iUBG5du0aPDw88PTpUyQmJsLBwQFr1qwp7mIR5UkgEKBhw4bYsWNHkZ3D398fAwYMwNixYzFu3LgiO09R8vLywsaNG/Hq1SskJydjwIABmDlzZnEXi4ioxPrpun9/a3p6ekhPT0daWppEa3VCQgKUlJSgr69fjKUjEnn27Bl2794Nf39/vH37FmlpaTAwMICZmRnatm2Lzp07Q01NrdjK5+7uDg8PD2zfvh2NGjUqtnL8LMLDwzF69Gjo6emhe/fu0NHRkRrC8jUKO/Bxc3PDzZs3ERoaWijHK4lYB4Xn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ERERKYhjqomIiIiIiIgUJH9Qnc2gmoiIiIiIiOhzysVdACIiIiIiIqKSSv6W6vT0oiwHERERERERUYnDlmoiIiIiIiIiBRWgpZpLahERERERERF9ji3VRERERERERAriklpERERERERECipAUC0synIQERERERERlTgFCKqzi7IcRERERERERCUOg2oiIiIiIiIiBckfVGez+zcRERERERHR5zimmoiIiIiIiEhBBQiqi7IYRERERERERCUPW6qJiIiIiIiIFCR3UJ3NecqIiIiIiIiIJLD7NxEREREREZGCGFQTERERERERKYjdv4mIiIiIiIgUpFzcBSAiIiIiIiIqqeRuqc7KUCrKchARERERERGVOGypJiIiIiIiIlJQAVqqi7IYRERERERERCUPW6qJiIiIiIiIFCR3S3Umx1QTERERERERSWBLNREREREREZGCCrBONVuqiYiIiIiIiD4nd1AtZFBNREREREREJKEALdVFWQwiIiIiIiKikofdv4mIiIiIiIgUxKCaiIiIiIiISEFyB9VZDKqJiIiIiIiIJLClmoiIiIiIiEhBXKeaiIiIiIiISEFyt1RnZrGlmoiIiIiIiOhzcgfVBDx79gzz58/HvXv3oK2tjc6dO2PChAlQU1PLM5+9vT0iIiKk0gMCAqCurl5UxSUiIiIiIqIiJndQnZH1c/cUj4+Px8CBA1G9enW4u7vj/fv3WLRoEVJTUzFnzpx88zs5OWHIkCESafkF40RERERERPR9Y0u1nPbu3YuPHz/Cw8MDBgYGAICsrCzMmzcPI0aMQLly5fLMX7ZsWVhZWRV9QYmIiIiIiOibkbv5OUuo9EP8U9SVK1fQpEkTcUANAM7OzsjOzoavr6/CxyUiIiIiIqKSS/4ltb4iIP2eODg45Lndx8dHZvrz58/RvXt3iTQ9PT0YGRnh+fPn+Z73xIkT2L9/P1RVVdGgQQNMmTIFAoFA/oITERERERHRd0fuoPprWnl/BAkJCdDT05NK19fXR3x8fJ557e3tYWFhgYoVKyIsLAzr1q1D3759cfToUVSpUqWoikxERERERERFrABBdVEW49vJrSW6KM2aNUv8/w0aNECzZs3g7OyMTZs2Ye7cud+8PERERERERFQ4frru34rS09NDYmKiVHp8fDz09fULdCxjY2PY2Njg4cOHhVU8IiIiIiIiKgbs/i2nmjVrSo2dTkxMRGRkJGrWrFlMpSIiIiIiIqLiVIDZv3+Mf4pq0aIFrl+/joSEBHGat7c3lJWV0axZswId6/3797hz5w7Mzc0VLxAREREREREVO/lbqvFzt1T37t0bO3bswJgxYzBixAi8f/8eS5YsQe/evSXWqB44cCDevHmDc+fOAQC8vLxw8eJFtGzZEsbGxggLC8P69etRqlQpDB48uLguh4iIiIiIiArBTzdRmaL09fWxbds2/P333xgzZgy0tbXh6uqKiRMnSuyXnZ2NrKws8d+VK1fGhw8f8M8//yAxMRG6urpo3Lgxxo8fz5m/iYiIiIiISjgloVAoV7i8w6ptUZflm3C7f664i0BEREREREQ/iAJ0/yYiIiIiIiKiz3FMNREREREREZGCCjCm+icfVE1ERERERET0BXb/JiIiIiIiIlKQ3OtUExEREREREZEkuVuq04uyFEREREREREQlEFuqiYiIiIiIiBRUgJZqTlRGRERERERE9Dm2VBMREREREREpSP6Wai6pRURERERERCSBLdVERERERERECirAOtVsqSYiIiIiIiL6HINqIiIiIiIiIgUVIKgmIiIiIiIios/JH1RzojIiIiIiIiIiCez+TURERERERKQgzv5NREREREREpCC5W6ozhNlFWQ4iIiIiIiKiEoct1UREREREREQKkrulOh1sqSYiIiIiIiL6HFuqiYiIiIiIiBQkf0s1x1QTERERERERSWBLNREREREREZGC5G6pzhZynWoiIiIiIiKiz8kdVGeBQTURERERERHR5xhUExERERERESmI3b+JiIiIiIiIFMSWaiIiIiIiIiIFyR9Us6WaiIiIiIiISIL83b/ZUk1EREREREQkgS3VRERERERERAriRGVERERERERECuJEZUREREREREQKKkBLdXZRloOIiIiIiIioxOFEZUREREREREQKUi7uAhARERERERGVVHK3VGew+zcRERERERGRBLZUExERERERESlI7pbqTC6pRURERERERCSBLdVERERERERECipASzXHVBMRERERERF9ji3VRERERERERAqSf51qjqkmIiIiIiIikiB/UA0G1URERERERESfY1BNREREREREpKACdP8uymIQERERERERlTxsqSYiIiIiIiJSEINqIiIiIiIiIgXJHVRz8m8iIiIiIiIiSVynmoiIiIiIiEhBcrdUZ7H7NxEREREREZEEtlQTERERERERKYgt1UREREREREQKYks1ERERERERkYLYUk1ERERERESkILZUF8CzZ88wePBgWFlZoVmzZliyZAnS09PzzScUCrF+/Xq0atUKFhYW6NWrF+7fv1/0BSYiIiIiIqIiJXdQLfxB/ikqPj4eAwcOREZGBtzd3TFx4kTs378fixYtyjfvhg0bsGrVKgwaNAienp4wMjLCkCFDEBYW9hUlIiIiIiIiouImd/fvn73z9969e/Hx40d4eHjAwMAAAJCVlYV58+ZhxIgRKFeunMx8aWlp8PT0xJAhQzBo0CAAgI2NDdq1a4dNmzZh7ty53+YCiIiIiIiIqNCxpVpOV65cQZMmTcQBNQA4OzsjOzsbvr6+uea7e/cukpKS4OzsLE5TU1ND27ZtceXKla8oERERERERERW3n66l2sHBIc/tPj4+MtOfP3+O7t27S6Tp6enByMgIz58/z/V4Odtq1qwpkV6rVi1s27YNqamp0NDQkKfoRERERERE9J3hRGVySkhIgJ6enlS6vr4+4uPj88ynpqYGdXV1iXQ9PT0IhcI88xIREREREdH3Te6WakCp6ErxDeXWEk1ERERERERUUD9dUK0oPT09JCYmSqXHx8dDX18/z3zp6elIS0uTaK1OSEiAkpJSnnmJiIiIiIjo+1aA7t9KP8g/xdSsWVNq7HRiYiIiIyOlxkt/mQ8AXrx4IZH+/PlzVKxYkeOpiYiIiIiISjD5g+rijoWLN6ZGixYtcP36dSQkJIjTvL29oaysjGbNmuWaz9raGjo6Ojh9+rQ4LSMjA2fPnkWLFi0ULxAREREREREVuwJ0//655zTr3bs3duzYgTFjxmDEiBF4//49lixZgt69e0usUT1w4EC8efMG586dAwCoq6tjxIgRcHd3R5kyZWBiYoI9e/YgLi4OQ4cOLa7LISIiIiIiokIgd1Ct9JOPqdbX18e2bdvw999/Y8yYMdDW1oarqysmTpwosV92djaysrIk0oYNGwahUIjNmzcjJiYGpqam2LRpE6pUqfItL4GIiIiIiIgKmZJQKJRrCeoaNUyKuizfxIsXj4u7CERERERERPSD+Ln7dBMRERERERF9hQJ0/y5VlOUgIiIiIiIiKnHYUk1ERERERESkIPlbqpXZUk1ERERERET0ObZUExER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RESkIAbVRERERERERApiUE1ERERERESkIAbVRERERERERApiUE1ERERERESkIAbVRERERERERApiUE1ERERERESkIAbVRERERERERApiUE1ERERERESkIAbVRERERERERApiUE1ERERERESkIAbVRERERERERApiUE1ERERERESkIAbVRERERERERApiUE1ERERERESkIAbVRERERERERApiUE1ERERERESkIAbVRERERERERApiUE1ERERERESkIAbVRERERERERApiUE1ERERERESkIAbVRERERERERApSKe4CEH0PlFVV0WDMQPzi0gbqejqIefIctzy2IuLG3QIdp/26RajcxAYP9x6D70IPcbp2OSMIujihaotG0K9aCcKsbMQ8fYl7G3Yhwv9eYV9OifExJQ2bjl3Fg8dhCHwajvikFCwc2x3d7G2Ku2jFSldXB1N+H4M2bVpAQ0MDgYHBWLLYHcHBj/PNa25uiq5dXWBhaQYTk9pQVVWBaZ2m+eaztrbArt3rAABNGjsjLi7+q6+jOOnoaGHMuJ5o2dIaGhrqCA5+jlUr9+Jx6Ks88ykpKcG5fTO0amUDE0FV6Onp4M2bSJw/54/du7yRnp4hsb+f/1aZx1mz+gB2bD9ZWJdTLL7Vffgo5LrM9GXL1mLjhh1fdQ3fip6eLqbPmA4nJ0doamriwYMHmD//HzwMeihX/lq1a2HO7FloYNsAGRkZuHDhIub/vQAxMTGf9qlVEz169kCL5s1RtVpVJCcnIyjoIf5dvgKBgYFSx+zYsQNGjByOX2r/gqSPSTh/3geLFi5GbGxsoV13UdPV1cHvU8ejbdtWonsw4CEWLVqB4ODQfPOaW5ihW9eOsLCsC4HgF6iqqkBgYiu1n7q6OubM+R0WlvVQoUI5KCsrIywsHIcOnsDu3QeQmZlVFJf2zbAOib4NBtVEAFr9/TtqtmmOwF2HEf86AiadHOHssQAnhk3B+3vy/Siq7mCHcpZmsre1bgqrwb3w8uJ1PD5+DsqlSuGXjm3gsn4JLs1ZisfHzhTm5ZQYsYnJWL3/AiqWNYCgenncDHpR3EUqdkpKSljnuRQCQW1s3rwbcbFx6NOnG7ZtXw3X7oPx6lV4nvlbtGyK7q4d8fjxU4SHR6BGjWpynXPmrEn4+DEZ2tpahXUpxUZJSQnLlk9E7V+qYNfO04iPT0K37vZYs3Y6Bg2ci/Cw97nm1dBQw+w5vyIw8CmOHL6E2NgEmJvXwq/DuqKBrRnGjl4slcffPwinT/lKpOUXvH/vvvV96Ot7E8eOnpZIe/Qo/+D9e6CkpITNWzbB1NQU6z03ICY2Fm5u/bB372507NAZL1++zDN/+fLlsX//XiQmJuJ/S5ZCS1sbw4f/ijoCATp37oqMDNGDnF69e6FXr544fdobO3bshK6eLvr27YMjRw9h4IDB8PX9dA/2798P8xf8jWvXfPH3/AWoUL48Bg8ZBAtzc3Tp0hVpaelFWSWFQklJCevXr4Cgzi/YtGkHYmPj0bevK3bsXIduXQfg1auwPPO3bNkMrj0643HoE4SHRaBGTdn3oIaGOmr/UhNXLvsiIuItsrOzUd/aAjP+mAgLy7qYMnl2UVzeN8E6JPp2lIRCobC4C0GUn/WWbYvs2Eb1BOi6ywM3lnkiYPtBAEApNVW4HtqAlJg4HB84Id9jlFJTRY+jmxB69AxsxwySaqkuXasakqNjkRaXIE5TVlVF9/3roKqlgd1O/Qr9ur40fPfIIj9HQaVnZCI+KQVGpXUR+DQcrlPXfLct1abdl32T87RrZ49/V8zHb7/NxNkzFwEApUsb4LT3Xly9egO/T5mbZ35Dw9JISvqItLR0zJo9Cf36uebbUt2rVxf8NmE4Thw/gwEDexVZS7WBvkmhH1MWBwdbzP9nDP6Y4YGLF26Lzm2gi30HFuGGXwD+nOOZa14VlVIwNa2BwMCnEulDhnbCsOHdMH7sEty6FSxO9/PfioMHzmPZ0p1FczFfiIv/NoHmt7wPH4Vcx65dBzH/7+WFfRkypaS8K9Tjubi0x+o1Hhg1agxOnxI9GChTpgwuXvLBpUuX8dv4CXnm/3v+X3B17Q4H+7Z48+YNAKBZs2bYtXsHZkz/A3v27AUA1KtXD8+fP0dycrI4r4GBAc77nMWLFy/Rw7UnAEBVVRW379xEyKMQ9OrVR7yvvb09Nm/ZiD//nIttW7crfL3q6oYK5y0IZ+c2WLFyIcaPm4YzZy4AEN2DZ84ewpUr1/MN1AwNy/x3D6Zh9pzf0b9/T5mtrLmZNXsK3Nx6oVnTdoiKiv6qaykuP3Idhj6+pVA+d3d3eHh4yNw2efJkDB8+/GuK9V3y9/fHgAEDcPDgQZibmxd3cQqdu7s7mjVrBmtra4l0gUCAqVOnYujQod+kHBxTTT+9mm2aIzszC48OnRKnZaVnIPSIN8pb1YV2OaN8j2E5uBeUlJQRsO2AzO2xz15JBNQAkJ2RgbBrN6FT3hiqWppfdxEllJqqCoxK6xZ3Mb4rjk6tERkZjXNnL4nTYmPj4O19Afb2zaGqqppn/ujo2AK1Qunr6+K3CcPhvmojEhKTFC32d6W1vS2io+Nx6eIdcVpcXCIu+NxE8xbWUFXNvZNWZmaWVEANAJcviYaCVKteUWY+dXVVqKnl/dqUJN/6PgQAdXU1qKmpKVLcYuXc3hmRHyLhfdpbnBYTE4OTXifRtm2bfK+pXbt28PG5IA6oAcDX1xfPnj2HSwcXcVpQUJBEQA0AcXFxuHXrNmrXriVOMxGYQF9fHye8JIcfXLhwAUlJSejYsYNC1/mtOTnZIzIyGmfPXhSnxcbG4fTp83BwaCnHPRiDtLQ0hc8fEfEWAKCnp6PwMYob61A2DQ0N7Nu3T+pf586di7toRaJu3brYt28fatWqlf/OJZCHhwfu3Sv+oZQMqumnZ1inNuJfhSPjo+SPlQ9Bof9tz/tDSLu8EawG98LNlRuRVcAfkZqGpZGRkoLMVMW/tOjHYmZqgkfBofiyE1FgQDC0tDRRvUaVQj3f+PHDERUZg337jhbqcYuTiaAqQkNfStVh8MMX0NRUR9Wq5Qt8zDKG+gCA+PhEqW3tXexw4ZInLl/dgN17F8DRsbFiBf+OfOv7sEuX9rh77wIeBFzCCa9dcOlQdL2TClvdunUR9PChVF3dfxAALS0t1KhRI9e85cqVg5FRWQQGSI+JfvDgAerWlT2k6HNGRmURE/NpnLT6f0F8Wmqq1L6pqamoW7culJSU8j1ucTM1EyA4OETGPfgQWlqaqFGjaqGeT1VVBaVL66N8+XJo07YVhgzpj/DwN/kOdfiesQ5lU1ZWhpWVldS/cuXKFXfRioSOjg6srKygpVU8w7vS09ORnZ1dLOf+lhhU009Py6gMkqNipNKT/+uqpG2Ud1e3JpNHIirkGZ55XyrQefWqVEQNBzu8OH8Nwp/gw4bkU9bIEJGR0t3kctKMjfPvOSEvE5Na6NmrMxYtXvVDfeEZGhogOkq6+3pUdBwAoGxZgwIfs39/ZyQlJcPvumTwE/DgCTzXHcK0qauwZNE2ZGdlY97fI9G1W2tFiv7d+Jb34d27AVi5Yj3GjpmOuX8uQXZ2NpYunYfevbsW2jmKkrGxET58+CCVnpNWrpxxHnmNJfb9Mn/p0qXzbOm2tbWFtbU1vLy8xGkvXrxEdnY2bBpIDqOpWbMGypYtC01NTejr6+d9Ud8BI6OyiPwQJZX+IVKUVpj3IAC0dWyNG/7ncfmKF1av/h/ev/+AUSMnISur5E6yxTpUXHZ2NrZs2QJnZ2fUq1cPzZo1w/jx45GY+OnB6q1bt9C7d29YWFigUaNGmDFjBuLi4sTbw8PDIRAIcOzYMfz111+wtbWFnZ0dFi9ejMzMTInzyXuso0ePYs6cOWjQoAGaNGmCLVu2AABOnjwJJycnWFtbY+zYsUhI+NQ70t/fHwKBQGJCQ3muT5a9e/eidevWsLS0xODBgxEcHAyBQIDDhw+L97G3t8dff/2FDRs2oHXr1rCwsEBcXByys7OxZs0a2Nvbo169emjXrh327t0rzvf27VsIBAL4+fmJ0/7++28IBAJcunRJnLZs2TK4uIh68QgEAgDAkiVLIBAIIBAI4O/vL3Gd7u7uaNq0qbhev+zxU1g4URn99FTU1ZH1xYy+AMStzqXUc/9BU8HWEjXa2OFo/3EFOmcpDXW0WTobmWlpuLlyU8EKTD80DQ11qRmmAYi70mqoqxfauWbOmoirV2/guu/NQjvm90BdXU1mHaanZYi3F8TAgR3QsFE9LFm8DUlJkl/GI4YvkPj7xIkr2LptLkaOcsWpk9eQliZdjpLgW96H/fpKzvdw+LAXDh7aggkTR+DIkZPf/aRaGhoaSE+XLmNOt1kNDY088wLIJ7+6zO2GhoZYuepfhIWFwXPdenF6bGwsTnqdRPfu3fD06VOc8T6L8uXLY968P5Geng41NbU8y/S9yO0eTP/vflDXKLx7EAD8b9zBoEFjoKergyZNbCGoYwJNzZI9NOtHrkMHB4c8t/v4+OS5/cugFgBUVD6FRX///Tf27duHgQMHolmzZvj48SMuXbqE5ORk6OrqIigoCIMHD0ajRo2wcuVKREVFYdmyZXj69Cn27t2LUqVKiY+1YsUKODg4YMWKFbh37x7c3d1RtWpV9OkjmvOgoMdydHTEypUrcf78eSxatAgxMTG4efMmfv/9dyQlJWH+/Pn43//+h7///jvX68/v+nKr0z///BM9evSAk5MTHj16hAkTJsjc9+zZs6hWrRpmzpwJZWVlaGlpYcmSJdi+fTtGjRqF+vXr49KlS/jzzz+RmZmJ/v37o0KFCqhUqRJu3bqFJk2aAABu3rwJdXV13Lp1C61atQIgegDRoEEDAMC+ffvQq1cvuLm5oUMH0dCW2rVri8uxa9cu2NjYYNGiRXj58iWWLFkCQ0NDTJkyJde6URSDavrpZaaloZSMsZA5wXRuXbqVSimj2bQxeOJ1HpEP5Z88SElZGW0Wz0TpmlVxesxMJMtoDaIfn6qqCvT19STSYmLikJqaJnNsbk4gmPoV49s+5+zsACsrc3Tu1L9QjlccVFRKSY3Vi4tLQFpausw6VFMXpRUkSHNo0xDDR3bD8WOXceTwxXz3z8zMwsGDPpg2fRAEdaoj4METuc9VHIr7PpQlIyMTu3YdxLx501C3bh3cvRtQZOcqCFVVVRgYSLbwRkfHIDU1VWZrsvp/Dx5SZXTDzpGzLe/80nWtqamJTZs3QkdbB66uPaVaXv74YxY0NDQwa9ZMzJo1EwBw+PARvHr9Gs7O7ZCc/DGvS/2mRPegZL3GxMTmeg+qqed0by/cezA6OgZ+10UPGM+cuYARIwdhyxYPODp2/+4nKmMdFkxycjLq1q0rlb5r1y40aNAAL168wJ49ezBx4kSMGDFCvN3JyUn8/+vWrYORkRHWrVsnHpteoUIFDB06FJcvX4a9vb14XwsLC8yaNQuAaBJCf39/nDlzRhxUF+RYVlZW+OOPPwAAjRs3xtmzZ7Fz505cuHABpUuXBgCEhobi4MGDuQbV8lyfLGvXrkXjxo0xf/58AEDz5s2RmZmJlStXSu2bkZGBDRs2iLucx8TEYOfOnRg6dCjGjRM1RNnZ2SE2NharV69Gnz59UKpUKdja2uLWLdEkdPHx8Xjy5An69esnTktNTUVQUBD69+8vro+c+sr5/88ZGRlh2TLRRLMtWrRAcHAwzpw5w6CaqCgkR8ZA27isVLpWWVG374+5BL0mHdtCv3plXP17BXQqSo7DUdXShE7FckiJiUPWF19aLf6ciKotGuHCjEV4c/N+4VwElThW9c2xfftqiTQHh26IioyGkYwhBzlpHz5EFsr5p/w+BmfOXEB6RgYqVhKNMdbTFQWoFSqUg6qaqsxug98Tc4tfsGbtdIm0rl2mIDo6DoZlpbu3ljU0AABERcXJdXzbhnUx589huO4bgCWLt8ldrvfvRcNJ9PS05c5TXIr7PszNu7ei7tBfBvzFycbGGnv37ZFIs2vWHB8+RIq7cX8uJ+39e+mu3Tlyun3nlj82NlaqlVpVVRWenmthWqcOBgwYiMePpR/qJiYmYtiwEahYsSIqV66EiIgIRES8waHDBxAVFYWEhLy7eH5L9etbYMdOyRn57Vt3QmRkFIxkfDcbG4nSivoePON9AZMmjYGDQwvs23ekSM/1tX7GOsyvJTovGhoa2LlTesWGmjVrAgBu3LgBoVAIV1fXXI9x+/ZtdOjQQWKyNzs7O+jp6eHOnTsSgbCdnZ1E3lq1auHGjRsKHatZs2bi/y9VqhSqVKkCJSUlcUANANWrV0dCQgI+fvwIbW3p7yF5ru9LWVlZePToEaZOnSqR7uDgIDOobtSokcQY7oCAAGRkZKBdu3YS+zk7O8PLywsvX75ErVq10KBBA8yfPx/p6em4ffs2ypYtix49emDv3r1ITk7GgwcPkJGRAVtb+Wahb9pUctWJWrVq4eTJk7ns/XUYVNNPLzr0GSraWkFVW0tisjJj8zqi7SHPZObTKW+MUqqq6Lxd+sPEpJMjTDo54syEP/Hq4nVxeqOJwyDo0g7XF6/BM+/8W73oxxUa8hRDBo+XSIuKjMGjkCewsbGEkpKSxOQyFpZ1kZycgpcv8l5XVF4VK5ZHxYrl0bGj9JPpw0e24tGjx+jWdVChnKuoPH3yGuPHLpFIi4mOx5PHYbC0MpGqQ7N6NZGSkobXr/NfUsmsbk0sWjwOIY9eYtbM1cjKkn/MeaWKonGKcbHfT+CSm+K+D3NTuYpolvXY2LgiPU9BBAc/Qr++bhJpkZGRCA4ORkNbW6m6srKyRHJyMl68eJHrMd+/f4+oqCiYW0gvc2NpaYng4EcSaUpKSli+fCmaNmuKMWPGwd8/76Ebb968Ec8qrqeni3r16sHb+0y+1/othYQ8waBBYyTSIiOjEfLoMWwa1JdxD9ZDcnIKXrx4XaTlyukarav7fc1cLQvrsGCUlZXzXFoqLi4OKioqMDTMfU6dhIQEmdsNDQ0RHy85p8eX3alVVVUlHpZ97bG+nIAsJzhPS0uTGVTLc31fiomJQWZmJsqUKSNVRlm+TM+5jrJlJR/y5PydM368YcOGSE1NRWBgIG7fvg1bW1uYmJhAS0sL9+7dw927d1GlShW5J5XT05N8MPtl3RcmBtX003t+/iosB/WEaff24nWqlVVVIejshPcBj/DxvehJrnZ5I6hoaCD+pejH5FPvS4gKlQ64nVbMw+sr/nh0+BQ+BIaI0y0G9oDloJ64t2E3gnZ/30+9qeglJCTCz++2VPrZMxfRrp092jq2Eq8PbGCgDyen1rh00RcZGZ/Gx1WpUgkAEBYWUeDzjx0zXSqtffs2aO/SBtOm/oV3ebSufS8SE5Ml1ozOceHCLdg72KJVaxvxOtX6+jqwt7fFtWv3kZHxaSxdpUqiADgi4lOLTbXqFbBs+US8fRuFKZP/zXVctIGBLuLiJANnLS0N9OrtiNjYBISEvPzaSyxyxX0fli5tIBU4a2lrYcCAXoiJicXDhyGyMxaDhIQE+Pr6SqWfPnUaLi7t0c65nXid6tKlS8PFpT18zvtI/ICrWlU02/Lr15+CGe/TZ9DdtRsqVKiAt29FSxA1bdYUtWrVxOZNmyXONe+vuejYqSNmTP8DZwoYHE+dOhUqKirYtHFz/jt/QwkJieIuw5/zPnMB7ZzbwNGx9WdrLOujXTsHXLx4tRDvQX3ExkpPbNijh2h5paCgR1Lbvjesw8JlYGCAzMxMREdH5xo06uvrIzpauidjdHR0gScCLMxjyUOe6/tSmTJloKKigpgYyYl9ZZUbgNQKAwYGBuL9Pw+Io6KiJLZXq1YNxsbGuH37Nm7duoWuXbtCWVkZNjY2uHnzJu7duyceT/29YVBNP73IwBA8O3MZDccPhWYZA8SHvYFJR0foViyHy3OXifdrPX8aKtpaYr2laKmX+Jdh4gD7S4lv3km0UFe3b4bGk4Yj7lU4Yl+8Rm0XyQk2IvzuICUmrvAvrgTYecoPCR9T8CFGFJxcvB2Cd9GiL2e39k2hq/39T6hTmM6cuYj794Pwzz9/oHat6oiNjUefPt1QqlQpuHtslNh3y9ZVAIA2Dt3FaRUrlkenTqLuVfXqinpbjBw5CADw5s07HD8uWkvXx+eK1LnrmP4CALhyxQ9xcdI/kEqKixduITDwKWbOGooaNSoiLi4J3brbo1QpZWxcL/lAy91jGgCgW1fR+CotLQ2sWDkFurra2LXzNJo2s5TYPyL8A4KCRA/Turs6oEVLa/heu49376JRtqw+OnRogXLly2De3A3IzCx5M97m+Fb3Yd9+3eHg0ByXLvri7dv3MDIyRLfuHVChQjlMm/qXxAOQ79WpU6dx9+5d/O9/i/FL7dqIiY2Fm1s/KCsr499/V0jsu3u3qMupnV0Lcdrq1WvQ3sUZe/buwpYtW6GtpY3hI4bh0aMQHDhwULzfkCGDMWCAG+7cuYOU1BR06Sq5pu4Z77NISUkBAIwaNRImAhPcv38fWZlZcHRsixYtW+B//1uKgIDvY4x6fs54++DevQAsXDgHtWvXRGxsHPr0dUWpUspwX7VeYt+t29YAABzsP9VJxYrl0blzewBAvXqmAIBRo4YAAN68eYtjx0QPQDp1ao/efbrh/PnLCAuLgLa2FuzsGsPOrjEu+FzBjRvSD51KCtahYho3bgwlJSUcOnQIw4cPl7mPjY0NfHx8MH36dPEEZ76+vkhISICNjY3MPLkpzGPJQ57r+1KpUqVgamoKHx8fDBw4UJx+/vx5ufKbm5tDVVUV3t7eMDP7tFTg6dOnYWhoiOrVq4vTGjRogEuXLuHRo0dYuHAhANFKB97e3nj8+DE6deokcWxVVdWvWk+9sDCoJgJwadZiJI0ZhF86tIGani5injyH9/jZeHdXeu1QRRiaiMbpGFSrDPt/pFsITwyd/NMG1ZuPXUVEZJz477M3HuLsjYcAgE4t6/90QXV2djZGDJ+M338fg/5uPaCuro6goEeY8cd8vJSjq16lyhXw2wTJL8mcv2/evCsOZn5k2dlCTJ64HGPH9UKPnm2hrq6GR8EvMP+vjfl2/dbT10H58qIn92PG9pTaftLrmjioDgh4AnOL2ujYqQX09XWQkpKG4ODnWDB/E+7cKVktM1/6VvfhvbsBqF/fHK6uHaFvoI+UlBQEBj7CzD/+gb//ncK/sCKQnZ2NQQOH4I+ZMzBo8EBoaGgg4EEApkyeiufPc+/6nePt27fo1bMPZs+eiWnTpiIjIwMXLlzEgvn/SLRym5mJghobGxuZP7TtmjVHeLiolTEkNBROTo5o08YBpUqVQkhICEaPGoNT/7WklwTZ2dkYPmwCpk4bD7cBvaCuro7AwGDMmD4PL168yjd/5coVMWHiKIm0nL/9/e+IA8I7d+6jfn1zuLg4omzZMsjMzMKLF6/wzz/LsXPH/sK/sG+IdShbdnY27t+/L5VuaGiIKlWqoEaNGujduzdWrlyJ+Ph4NGnSBKmpqbh06RLGjRuHcuXKYeTIkejduzdGjBgBNzc38YzdFhYWaNmyZYHKU5jHkoc81yfLqFGjMHr0aMyaNQvt2rVDcHAwjh49CkDUpT4vZcqUQf/+/bFp0yaoqanBysoKly9fhpeXF2bPni0xw3mDBg3w119/oXTp0uKZvG1tbbFkyRLx/3+uZs2a8PHxQYMGDaCpqYkaNWpAR+fbDzlQEn65IjzRdyindZgUN3z3yPx3olyZdl+W/06UJwN9k+IuQokXFy//SgMkW0pK/mPqKXfq6vKPwyQqKqGPbymUz93dHR4eHjK3ubq6YsEC0TKJ2dnZ2Lx5Mw4cOICIiAgYGBjA1tYWf//9tzhgu3nzJpYvX46HDx9CS0sL9vb2mDZtmrgrc3h4uHgir88n6FqwYAF8fHxw4cIFcZqix3Jzc4OWlhY8PT9NVHf48GHMmDEDfn5+KFOmDPz9/TFgwAAcPHhQPJZcnuuTZc+ePfD09ERMTAwsLS0xcuRIDBkyBKtXr0abNm0AiNapbtWqFebMmSORNzs7G2vXrsXBgwcRGRmJSpUqYfDgwejdu7fEfk+ePEGHDh3Qpk0brF4tmkgzMzMTtra20NbWxrVr1yT2v337Nv755x88e/YMqamp2L59Oxo1agSBQICpU6di6NCh4n23bt2KhQsXIjQ0NNdrVBSDaioRGFR/PQbVX4dB9ddjUP31GFR/PQbVX4dBNX0PFA2qqXAdOHAAs2bNgo+PDypXrlzcxSlW7P5NREREREREuYqLi4OHhwcaN24MbW1tBAYGYt26dXBwcPjpA2qAQTURERERERHlQUVFBWFhYfDy8kJiYiJKly6Nzp07Y8qUKcVdtO8Cg2oiIiIiIiLKlY6OjsTYbZKU91RtRERERERERJQrBtVERERERERECmJQTURERERERKQgBtVERERERERECmJQTURERERERKQgBtVERERERERECmJQTURERERERKQgBtVERERERERECmJQTURERERERKQgBtVERERERERECmJQTURERERERKQgBtVERERERERECmJQTURERERERKQgBtVERERERERECmJQTURERERERKQgBtVERERERERECmJQTURERERERKQgBtVERERERERECmJQTURERERERKQgBtVERERERERECmJQTURERERERKQgBtVERERERERECmJQTURERERERKQgBtVERERERERECmJQTURERERERKQgBtVERERERERECmJQTURERERERKQgBtVERERERERECmJQTURERERERKQgJaFQKCzuQhDlp2YNQXEXocRTVzcs7iKUaI8OTS7uIpR4Tl3+LO4ilHgfszKLuwglnrKSUnEXoUR7n5lS3EUo8ZpolyvuIpR4W4P9i7sIRBLYUk1ERERERESkIAbVRERERERERApiUE1ERERERESkIAbVRERERERERApiUE1ERERERESkIAbVRERERERERApiUE1ERERERESkIAbVRERERERERApiUE1ERERERESkIAbVRERERERERApiUE1ERERERESkIAbVRERERERERApiUE1ERERERESkIAbVRERERERERApiUE1ERERERESkIAbVRERERERERApiUE1ERERERESkIAbVRERERERERApiUE1ERERERESkIAbVRERERERERApiUE1ERERERESkIAbVRERERERERApiUE1ERERERESkIAbVRERERERERApiUE1ERERERESkIAbVRERERERERApiUE1ERERERESkIAbVRERERERERApiUE1ERERERESkIAbVRERERERERApiUE1ERERERESkIAbVRERERERERApiUE1ERERERESkIJXiLgBRcdHV1cX0Gb/D0bEtNDU18OBBIP5ZsAgPHwbLlb9WrZqYNfsPNGhgjYyMDFy8eBkL5i9ETEys1L5Vq1bBpEm/oWmzptDR0ca7t+9w8tRpLFu6QrxPr9490KVLJ9SqVRO6unr48OED/G/4Y+XK1YiIiCisyy5yuro6mPL7GLRp0wIaGhoIDAzGksXuCA5+nG9ec3NTdO3qAgtLM5iY1IaqqgpM6zTNN5+1tQV27V4HAGjS2BlxcfFffR0lwceUNGw6dhUPHoch8Gk44pNSsHBsd3SztynuohULVTVVDPhtLBw6d4SOvh5ehD7Gtn/dcdfXL898lWtUh0ufnqhjaYHadU2hpq6OAa0c8T7ijYxzqKHb4AFw6NIR5SpVRFJ8AoLv3cfOVWvw6umzorq0b0ZVTRW/ThwPpy6doauvh2choVi/fCVuX7ueZ74qNWqgS79eMLO0hEk9M6irq8O1uQPeyfjsOnDFBxUqV5JKP7p7L5bOmltYl1JsVNVUMXTCeDh26SSuw43LV+G2b351WB2d+/aGmZUFfqkrqsOeLRzwTsZ9CACa2loYOHY0Wjs7wdDYGPGxsXh47z4WTJmOtNTUori0Qqeq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iIiIiIiISEYMqomIiIiIiIhkxKCaiIiIiIiISEYMqomIiIiIiIhkxKCaiIiIiIiISEaKJV0BooJQVTUp6SqUeRrqVUq6CmWaa+ffS7oKZd6lfxeUdBXKvB7dlpR0Fco8JTn2JxSGuUr5kq5CmVdHUa2kq0BERYyfLEREREREREQyYlBNREREREREJCMG1UREREREREQyYlBNREREREREJCMG1UREREREREQyYlBNREREREREJCMG1UREREREREQyYlBNREREREREJCMG1UREREREREQyYlBNREREREREJCMG1UREREREREQyYlBNREREREREJCMG1UREREREREQyYlBNREREREREJCMG1UREREREREQyYlBNREREREREJCMG1UREREREREQyYlBNREREREREJCMG1UREREREREQyYlBNREREREREJCMG1UREREREREQyYlBNREREREREJCMG1UREREREREQyYlBNREREREREJCMG1UREREREREQyYlBNREREREREJCMG1UREREREREQyYlBNREREREREJCMG1UREREREREQyYlBNREREREREJCMG1UREREREREQyYlBNREREREREJCPFkq4AUWmjoaGGKVNHwdnZCSoqyvDy8sPKFX/D1zcg37KWVrXRuXNrWFnVQa1a1SEQKMLSorlEvk6dXbF48axczzNzxmKcO3elUPdRUtTVVTF2fE80bVoXKirK8PF5jb/WH8ZL/6A8y8nJyaFN28Zo1swetcwqQ1NTHe/eReHK5Xv45+BFpKdniOW/c2+P1PNs3nQM+/edK6rb+WEESgIMmDgOzp06QF1LE2/8X2Lv2g14fOtOnuUqVquKdn16oraNNWpY1IGSsjIGNHPB+7B3Uq6hhK6DB8C5cwcYVjDBh4RE+Dx5igN/bUZQ4KviurVS7WNKGnaevoFnL0PwIjAUCR9SsHRcN3RtYV/SVSsRigIBek0YhV86tYO6pgaC/ANxeP1mPL99L89y9Vs1R+M2LjC1Moe2nh5iIiLw6NpNHN+8HclJH8TyDpw1BeYO9jCoYAyBsjKi3oXj9gV3nN21H6nJKcV5ez+EokCA7hNGwqljW6hpaiDYPxDH/vobXrfv51muXqvmaNimFapbmkNLTxcxEe/x9NpNnPp7h0QbrrtyGvoVTCTO4XH4BHYtWFak9/OjKQoE6DB+OBw7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5CVXkabvU0exbC2mWRpNfHY5/0xSbNiwARs3bpR6rHv37qJVq7OysrBr1y4cO3YMYWFh0NbWhoODA/7880+o56z9cP/+faxZswbe3t5QVVVFixYtMHPmTGhrawMQ7tvs7OyM9evXo3Xr1qLrLF68GB4eHvD09BSlyXqu/v37Q1VVFVu3flnl/uTJk5g9ezbu3LkDHR0d3Lt3DwMGDMDx48dFc8kLcn/SPH78GOvWrcPz588hLy+PmjVrYtKkSWjYsGGudfy2nunp6Vi4cCEePnyI8PBwqKiowNLSEhMnToS1tbXo32nXrl148kT4MHLHjh24cOECgoKC8OnTJ1SrVg1DhgxB+/btc//H/sEYVFOZwKC68BhUFw6D6sJjUF14DKoLj0F14TCoLjwG1YUna1BNVFz4yUJEREREREQkIwbVRERERERERDJiUE1EREREREQkIwbVRERERERERDJiUE1EREREREQkIwbVRERERERERDJiUE1EREREREQkIwbVRERERERERDJiUE1EREREREQkIwbVRERERERERDJiUE1EREREREQkIwbVRERERERERDJiUE1EREREREQkIwbVRERERERERDJiUE1EREREREQkIwbVRERERERERDJiUE1EREREREQkIwbVRERERERERDJiUE1EREREREQkIwbVRERERERERDJiUE1EREREREQkIwbVRERERERERDJiUE1EREREREQkIwbVRERERERERDJiUE1EREREREQkIwbVRERERERERDJiUE1EREREREQkIwbVRERERERERDJiUE1EREREREQkIwbVRERERERERDJiUE1EREREREQkIwbVRERERERERDJiUE1EREREREQkI8WSrgBRQSgJNEq6CmVefMLLkq5CmabwKbOkq1Dm9ei2pKSrUOYdOzGnpKtQ5t0dvbakq1CmJaYKSroKZZ68XEZJV4GIihh7qomIiIiIiIhkxKCaiIiIiIiISEYMqomIiIiIiIhkxKCaiIiIiIiISEYMqomIiIiIiIhkxKCaiIiIiIiISEYMqomIiIiIiIhkxKCaiIiIiIiISEYMqomIiIiIiIhkxKCaiIiIiIiISEYMqomIiIiIiIhkxKCaiIiIiIiISEYMqomIiIiIiIhkxKCaiIiIiIiISEYMqomIiIiIiIhkxKCaiIiIiIiISEYMqomIiIiIiIhkxKCaiIiIiIiISEYMqomIiIiIiIhkxKCaiIiIiIiISEYMqomIiIiIiIhkxKCaiIiIiIiISEYMqomIiIiIiIhkxKCaiIiIiIiISEYMqomIiIiIiIhkxKCaiIiIiIiISEYMqomIiIiIiIhkxKCaiIiIiIiISEYMqomIiIiIiIhkxKCaiIiIiIiISEYMqomIiIiIiIhkxKCaiIiIiIiISEaKJV0BorJAXUMNkyYNQvPmDaBSThleXi+xdvUu+Pm9zrOcnJwc2ndojhYtGsKsdnVoaWkgLOw9Ll28gf37TiE9PeMH3cGPo6GhjmnTx6Jly1+goqKCFy98sGL5Bvj4vMy3rJVVHXTp0g7WNuaoVasGBAJF1KndSGpeX7/bUtNXr/4bO7bvL9Q9lASBkgDDJk+Aa+dO0NDSxCs/f2xbsx4Pb0q/z88qVauGzn17wdzGBrUszaGsrIzuTZwRERYmkffYfx4wrlhBIv3ffw5j1bw/iupWSoyiQIBeE0bhl07toK6pgSD/QBxevxnPb9/Ls1z9Vs3RuI0LTK3Moa2nh5iICDy6dhPHN29HctIHsbwDZ02BuYM9DCoYQ6CsjKh34bh9wR1nd+1HanJKcd5eqfUxJQ07T9/As5cheBEYioQPKVg6rhu6trAv6aqVCDmBAJWGDoOeiysUNTSQ/OoVQnZsQ8LDh3mWqzh4CCoOHiKRnpWWhvutnMXSGvx3U+o5grduwbuDB2SvfCkmJxCgxsjBMG7TCgINDXwIfI2ALTsRe/9RnuVMhw+E6fBBEumf0tLh0cS1mGpbsuQEApiOGAzjNi5Q1NDAh8BXeLU1/7aqPmwQqufSVld/cRFLq9C1I3Tq1YWWRR2oGBnindtF+Py5rChvg6hMYVBNlA85OTn8tWE+atWqin17TyE+PhE9erbFth1L0PfXyQgJDs+1rIqKMhYsnITnz/xw4vhFxMYmwNq6NkaN7oP6jtYYOXzeD7yT4icnJ4ctW1fBzKwGdu36B/Fx8ejTpyv27tuE7t0GIygoNM/yvzRthG7dO+Dly0CEhoahWrUqeea/des+Tv97QSzN1zf/4L00mrtyGZq1dsHR3fsQ+jYIbbp1waqdWzGh70A8f/g413KWdW3RfWB/vA18haDAV6hlYZ7ndV56++Dwjt1iaSFv3hbFLZS4scv+QAOXlji/7x+EBwWjWZcOmL31LywYOBJ+j5/mWm7kwnmIi4zCjTMXEBUegSq1aqB1356w+6UxZnbti/S0NFHeGlYW8Hv0BFdPnUFGWjqq1TFD5+GDYN3QEfP7DUN2dvYPuNPSJS4pGZuOesJETxtmVY1w3+tNSVepRJnOngudZs0QcewoUkNDod+mDcxWrILvxAlIevE83/KvV61EVsqXBzTZWVlS88U/uI/oixfF0j4GBBSu8qWY5fyZMHRuiuBDx/ExJAwV2rui7rpleDh6MuKfeeVb3mfZGnxKzr9dfwYW82fBoEVTBB8+jpSQUBi3aw3btcvxaMxkJDx7kW9532Vr8EnsNfhJIk/V/r9CQa0cEr39oKSnW6T1JyqLGFQT5aNlq0awta2D6dOWweOKsNfQ3f0m/j29BaNG/4q5s1fnWjYjIxODBs7A82d+orRTJ93x7t17jB7TF/UdbXD/3rNiv4cfxdW1OerWtcbEiXPhfukqAODCBU9cuHgY48YPw/Rpf+RZ/vChk9ixfT/S0tIx77cp+QbVb98G4+zZS0VV/RJTx9oKLTu0w6YlK3Boxy4AwMWT/2LfxbMYPXM6Rvfok2vZm1c80dq2PlI+fkSfYUPyDaqj3kfC/fTZIq1/aVDDygJO7Vpj34p1OLtLOFLh+r/nsObsUfSbPgHz+kj2AH62euIM+HzTg/PK2xfjly+EU4c28Dz+ryj9t75DJcpHhIRi4MzJqGFtgYACfLn/2RiU18DNnbOhX14DLwJD0X3G5pKuUolRq1MHei1bImjzJoQfPgQAiLp0ETZ79qHy6NHwHjM633PEXr+GzISEfPOlhoQg+rJ7oetcFmia14axqzP81/+NoINHAQDh5y+h0aHdqDV+JO4PG5/vOd57XEdGQmJxV7XEaZrXhpGLM17+9TeCDx4BAISfd0eDf3aj5riReDh8XL7niPS8jox8XoOPRk9EasR7AECzqxfyzFuabNiwAbt27cKTJ08KXKZ///5QVVXF1q1bi7FmsmvRogWaNWuG+fPnl3RVSkxoaChOnTqFnj17wtDQsETqwDnVRPlwbtkY0dFx8PS4I0qLj0vEZfebaNbMEQJB7s+mMjMzxQLqz6563gUAVKtWsegrXIJcXJsjKioGl92vidLi4uJx8aInWrRoAoFAkGf5mJg4pKWlf9c1lZWVoKSkJEt1S41mbVyRmZmJ04ePiNLS09PhduwErOztYGBslGvZpIQEpHz8+F3XUxQIoFKunMz1LY0auDrjU2Ymrhw5KUrLSE+Hx4nTMLOzga5R7h+y3wbUAHD/ivChUEXTavleOyrsHQBATUPje6v9U1ASKEK//P/nvX9Lt2kzZGdmIvLMaVFadno6Is+5QcPSCkoGBgU4ixwUVFULdD05JSXIlfH3v4IwdG6KrMxPCP3XTZSWlZ6BsDPnoW1tCWUD/fxPIicHBbWCtWtZZtBC2FZh/355eJqVno53Z899R1sh37b6HFATlQZhYWHYuHEjIiMjS6wODKqJ8lG7dnX4+b2SGNbp5RWAcuVUUKWK5BzV/OjqlQcAxMcnFUkdSwvzOrXg6+Mv0VYvnvtAVbUcqlarVKTX69y5LR4/8cSz59dw1u0g2rVvVaTn/1FqWdRByJu3SP4gHhz7PhMOFa1Zp06RXcu+oSOueD/BFe8nOPafB3oM6l9k5y5J1eqYIfxtsMQDhsDnwp7jqnVqfdf5tHOGMybGxUsck1dQgIa2Nsob6MG6cQP0njgGyR8+IPCFt2yVp5+Gas1aSAkNwafkZLH0D76+wuM1auZ7DrsjR+Fw0R0OF91hOu83CMqXl5pPv3Ub1He/AscrnrDetx+6Lcvm+19BaNaqgeTgEHz6KN6uCT5+ouP5aXLqHzhfPYcW187DcsEcKOlIb9eyTqNWTSSHSGkrb7+c4/m3VeOTh9Dc8zyaXb0Aiz/m/rRtVRJSU1NLugpUTDj8mygfenrl8fiR5Jfl6OhYAIC+vg4CA4O+65wDB3VFUtJH3LqV96IhZY2evi4ePnwqkR4VFQMAMDDQR8DLvBd3K6jHj5/j4gVPhIa+g4GBHn7t2w2rVi2Ahro6Dh8+VSTX+FF09fURExUlkR4TKUzTMyxI71b+Xvn54/nDRwh+/QZa5bXRplsXTJw/F3qGBvh7ee7TGMoCbX09xEVFS6TH56SVL0jvzFc6DxuET5mZuHvpisQxU8s6WHJkr+j3sNdvsXzMFHz4PxhaSnlT0tVFRkyMRPrnNCU9vVzLZiYlIeLEcSR5eyM7Ix0a1jYw7NIV6nXM4TV8qFignvTiOWKuXkVa+DsIdPVg1LUras7/HYpqanh/+t8iv6+Spqyni7SYWIn0tGhhuyrr596uGYkfEHz0JOJf+CArPQPlba1QqUdnaFnUxt2BoySCz7JOWU8X6dGSr8H0mAK0VVISQo6eRPwLb2RnZEDb1hoVu3eGpkVt3B808qdrKwCIj4/H8uXL4enpiZSUFJibm2Pq1KlwcHCQyPvvv/+KekNtbGywYMECVK9ePddzh4aGwtnZGUuXLsXjx49x+fJlGBgY4OzZs0hPT8fGjRtx9uxZREVFoVKlShgzZgw6dOggKj9r1ix4eXlh+vTpWLlyJYKCglCzZk3Mnz8ftra2uV73yZMn2Lp1K7y8vPDhwwdUqVIFgwcPRufOncXyJSYmYv369bh8+TJiY2NhYGCAdu3aYerUqaI8165dw6ZNm+Dv7w9VVVW4urpi5syZUM0ZTXPv3j0MGDAAO3bswPHjx/Hff/9BS0sLU6dORYcOHbBv3z7s2rULycnJaNWqFX7//Xex0YURERFYtWoVbty4gZSUFFhZWWH27NmwtLQU5fk8vN3U1BQ7duxAYmIiHB0dsWjRIujo6IjqAADdu3cXlfP398+1jYoDg2qifCgrKyE9Q3KV7vQ0YZqyyvcNvRsytAcaNLDFksV/40PS9w3bLe1UVJSlrmj+eUi3irJykV2r76+jxH4/edINx0/sxqTJI3Hq1LnvHkZekpRVVJCRLlnfzwtkKakUTbvNGjFG7Pdzx05i9e7t6DVkEI7vPYCoMjycTynXNhSmKX3Ha8+pfWs49+iMf7fvQURQiMTx0MA3WDh4NJTLlYOZnTWsGzlCpYDDdennJq+sjCwpnxdZOa9NeeXcPy8ijh8T+z32+nV88PVFzfm/w7BLV7FVvb3Hiv8tR50/B6sdO1FpxEhEXjiPbCl/C2WZvLKSqA2/lpWWf7sGHzkh9nvk1f+Q4OMH6z/noVK3Tni771DRVraEySsrSX8Nitoq9/fCEGlt5e0Lqz9/Q8VunRG075+irWwhODs753ncw8Mj33N8+vQJw4cPR0hICKZNmwY9PT3s378fgwcPxuHDh8UCO29vbwQHB4sCznXr1mHYsGG4ePFivlPQ1qxZg6ZNm2L16tXIylkgb+LEiXj8+DHGjh0LU1NTXL9+HdOnT4empiaaNm0qKhsVFYUFCxZg/Pjx0NTUxPbt2zF06FC4u7tDV1f6AnHv3r1D3bp10adPHygpKeHx48eYN28esrOz0aVLFwDCKWYDBw5EWFgYxo4di1q1aiEiIgKPHn3p7Ll48SImT56Mrl27Yvz48YiKisLq1auRmJiItWvXil3zjz/+QJcuXdCzZ08cPXoUM2bMgJ+fHwICArBgwQKEhIRg2bJlqFSpEkaNEn5/S0hIwK+//gpVVVX89ttv0NDQwP79+zFw4ECJ+/P09ERQUBDmz5+PuLg4LF26FH/++SfWrl0LCwsLzJ8/HwsXLsTSpUvzfNBRnBhUE+VQVFSElpa6WFpcXCLS0tKhJGUusJKyMC0tteBfXlxcnDBmbF+cOumO48fKzsIe3xIIFKGlpSmWFhsbj9TUNCgpSbaVcs4XntSvVlEuahkZmTh48DgWLJgJC4vaePw4/1V2S4u01FQIpHwofw4E01OLr92O7NoLx6ZNYOdYv0wvYJaeaxsK09IL+NqrbW+L0Yt+w9Mbt3FonfQFt1I+fsSLO/cBAA89ryPIPwAzN63GjK59EeT/866+TPnLSkuDvJTPC/mc12bWdz7si7lyGVXGjoWWfb08t8rKzsxExMmTqD5tOtTNahdolfGyJCstXdSGX/scTH9vu0Zc8oDZxNHQrW//0wXVWWnp0l+Dorb6vs+T9+4eqDVxDHQc7EtVUF0Url27hufPn2PHjh1o0qQJAMDJyQkuLi7YunUrNmzYIMobExODAwcOoGrVqgAAc3NztG7dGidPnkTv3r3zvE7t2rWxePFi0e93796Fp6cndu7cCScnJwBA48aNERUVhQ0bNogF1fHx8Vi3bh0aNmwIAKhfvz6aNm2KPXv2iPUof61du3ai/8/OzoaDgwPev3+PI0eOiILqf//9Fz4+Pjh8+DDs7OxE+T8fz87OxooVK9C2bVuxuuvr62PEiBEYM2YMatb8Mp2ldevWGDdOuAietbU1Ll++jHPnzuHy5cui9XTu37+PixcvioLqvXv3IjExEceOHRMF0A0bNoSrqyt27tyJGTNmiN3H33//LXqAERYWhq1btyIrKwvq6uqoUUM4raFmzZqwsrLK89+juDCoJsphY1sb23csEUtr13YYoqPjoKcvOZ9IT08HABAVJTkkTRrHBrZYuGgybt54iCWLy/bquLZ2Vti3b5NYmrNzV0RHxUBfX/LJ6ee0yEjJIc5FKSJcuEDFtwF/aRcTFQU9KatV6uYMWY5+X3wLb0SGC7eE09TWLrZr/AjxUdHQkTJMXjtnqGNcAV57VcxqYubmtQgOeIXVE2cg65PkNjLS3HP3xPjlC9G4nSuD6v9z6TExUJIyvFaQ84UxPVpyikK+54yMhKJm/gvBpUcKR5oUJG9ZkxYdI3XYsnLO2gdpUqZ+5Cf1fSQEP2tbGUi2lZLuz9VWBemJzs/Dhw+hrq4uCqgBQCAQoFWrVnBzcxPLW7NmTVFADQBVqlRB7dq18ezZs3yD6mbNmon9fuvWLWhra6NBgwbIzMwUpTdq1Ah//PEHPn36BAUFBQCAhoaGKKD+/HujRo3w7FnuO8ckJCRgw4YN8PDwwPv37/Ep57NM+6vP+Tt37sDU1FQsoP7amzdvEBYWhjlz5ojVsX79+pCXl4eXl5dYUN24cWOxOuro6KBevXpiC9RWrVoV9+7dE2sHR0dHaGlpia4hLy8PBwcHvHghvvWbg4OD2IgAU1NTZGRkICYmBvr63ze9q7gwqCbK8dL/DUaN/E0sLSY6Dv7+b2BnZw45OTmxBbisrGohJSUVQUFh+Z7b0rIWVq+ZDR+fQMycsQKfPpXt/TH9/QIxZPAEsbToqFj4+gXA3t5Goq2sbSyQnJyCt28kh9IWpYqVTAAIVxwvSwJ8/GDXwBGq6mpii5WZ29oIj+csclQcTCoLF4+Ljy3Yw6HS6q3fS1g41kM5NTWxxcpq2giH773NZ/9yw0oVMXf7RiTGxmLpiAlI/Wo/2/wIlJQgr6AAVXX1/DPTTy05MABadnZQUFUVmwOtbm4uOv69lI2M8TEg79cvACibCN//MuLjv/sapV3Sy0CUt7eDgpqq2LxeLQvhIo6JLwO/+5zljI1kKlfaJQXk3VZJMrZV0suf74FhYmKi1CHUenp6SPhmSzFp+XR1dRElZT0Uafm+FhcXh/j4eFhYWEjNHxUVBSMj4a4fOjo6Us/36tWrXK83a9YsPHnyBGPHjkWNGjWgrq6OQ4cO4cKFLyMk4+PjYZDHbgRxcXEAgLFjx0o9Hp7zQP4zjW92v1BSUoKmpngHh0AgQPpX0zji4uLw9OlTqe1QuXJlsd+/PdfnADutGEdAfi8G1UQ5kpI+St0z2uPyLbRq1RgtnBuK9qnW1tZAy1aN8d/1+8jI+PIEr2JF4ZtgaGiEKK1atYpYv2E+3r2LxMTxC8vUXN/cJCYm4c6dhxLp7peuonXrFmjl0ky0T7W2thZcXZvj2tVbyPhqnlelSsJV00NC8n8o8a3y5bUlAmdVNVUMGNALsbFx8PaW3MasNLt24RJ+HTEUnXr3Eu1TLVASoG33LvB+8hSR4cLXk6GJMZRVVBD8+s13X0NDSwsfk5JE87kAQEFREf1GDUd6Wjoe37mXR+nS784lD3QcOgAte3UV7VOtKBCgeZeOePn0BWJy5ovrGRtBSUUF7968FZXV1tPFvJ2bkJ2dhUXDxkld8RsAVDXUkZaSik9fPbUHgBY9OgMAXnn5FPl9UdkSe+0aTPr8CoOOnUT7VMsJBNBv2xZJ3t5Iz9nuRcnAEPIqykgNDhaVVdTSRmZCvNj5DDt3gaB8ecR/1bsjLZ98uXIw7t4TGfFx+PiDF+f5Ed57/oeq/XujYuf2on2q5QQCmLRvjfgXPkjLGYmiYmgAeRVlJH+1FoJAWwsZ8eIBUqVunaCkUx7ROdM4fiaRntdRtV9vVOjcQbRPtZxAAJMObZDg9aWtlA0NoKCiguSgL69BaW1VMaetYn7CttLS0kKMlIUFo6OjoaWlJZYmLV9MTAxq166d73Xk5OQkrqujo4Nt27ZJzf91IB0r5YF3Xr2zaWlpuHbtGmbNmoX+/b/s7vHPP+JD97W1tfNcyOtzr/b8+fNhbW0tcTyvgLygtLS00KRJE0ycOFHiWFncKpVBNVE+rly5jefP/PDHggmoXr0S4uMT0aNnW8jLy2PL3+JzsbZs+xMA0L7tcACAqmo5bNy8AJqaati39ySaNBFfTTI0NBzPn/88X4AuXbqKp0+9sGTJHNQwrYq4uAT06dMVCgoK2LBxh1je3Xv+AgC0dO4mSjMxMULHjq0BAJYWwg+qUaMGAQDevYvAmTMXAQC/9u0GZ+cmuHb1FsLD30NfXxddu7WHsbEhZs5YKPagoyzwefYcnucuYOT0ydDW1UFYUDBad+0M4woVsGzmPFG+eauWw65BfThV//Ihrqahju4D+gEArOzrAgC6DeiLD4mJSEpMwsn9BwEATi1bYODYUbh28RLCQ8Kgoa2FVh3bw9SsFrasXINYGYalliaBz71w+8Jl/Dp5HLR0yiMiOARNO7eHfgUT/D1voSjfuOULYFG/HnrUthelzd2+AUaVK+Lf7XtQu64tate1FR1LiInF89vCgMaifj0MmTsdd92vIPxtCBQFAtSpZ4v6rVog8IU3bpw9/8Put7Q5cP4OEj+mIDJWuE3g1Yd+iIgRfjnv37YRNNRUSrJ6P8wHXx/EeHqi0oiREGhrIzUsDPqtW0PZyBivly8T5asxdx407exw9xcnUZrdseOI8fRA8uvXyE5Ph4aVNXSdnfHx5Uuxfa+NunZFeacmiLt9C+nv30OgqwuDtu2gZGiIwMV/IjuzbL3/FUSCty8irlxDzbHDoaRTHskhYTBp54pyJkbwWbxSlM/yj9nQsbeFe/3morRfzhxGxOWr+PDqDbLS0qFtawWjVs2R6B+A0JNldx2J3CR6++L9lauoMWY4lMprIyU0DMZtXaFibASfRStE+Sx/n4Py9ra44thMlOZ0+gjeX7mKD4GvkZWeDm0bKxi2aoEk/wCEnhJvKz2nhtCoKZzHKq+oAPUa1VFtsDCIi7pxCx8Ci2anj+Jkb2+PnTt34ubNm6K5zZmZmbhy5Qrs7e3F8gYEBCAoKAhVqlQBAAQFBcHPzw+9evX67us2atQIO3bsgEAgyDcoT0pKwp07d0RDwJOSknD79m307dtXav709HRkZWWJDbv+8OEDPD09Jepw/vx5PHv2DDY2NhLnqV69OoyMjBASEpLrtQqrUaNGOHPmDExNTUWricvq8/2WZM81g2qifGRlZWH8uAWYNHkwevfpABUVJXh7B+D3+evzHfqtpa0BY2Ph08SJkwZJHD9zxuOnCqqzsrIwcsRUTJ8+Fv3694CysjK8vHwxe84ivH0TnG/5ChWNMXHSCLG0z7/fv/9YFFQ/efwcdnZW6N69A7S0tZCSkoIXL3wxd84S3LtXNrcpWzR1JoZNmQjXLh2hoaWFV37+mDFsNJ49kBwR8DUNTS0MnzpJLK3P8CEAgPDQMFFQ/dr/Jd4GvoJLp47Q1tFBZkYGAnx98dvYibh64VKx3NOPtnHmfPSeOBq/dGwHNS0NBPsHYNnoSfB9+CTPclXrmAEAOg8fJHHM+/5DUVAd/DIQXvcfol6LZiivrwc5OSAiOBTHN2/HmZ37kFnGHuYUpV2nbyAsKl70u/tdb7jfFW5F2LGp3f9NUA0AgUsWodL7YdBzdYWiugaSX7+C/8wZSMpjDiQARF92h4alFXSaNoO8khLS3kfg3aF/ELZvr9jiUkkvnkPd0hIG7dtDUVMLWamp+ODrg1fLlyLx8ePivr0S4/XHEtQYOQQmbVpBUUMDHwJf4cmUOYh7kveibOEXr0Db2hKGzX+BvLISUsLf4+3+w3i9+8B3L9pVVngvWIrqEe9h3MZF1FZPp8xG/NO82yri4hVoWVvAoPkvkFdSQmrEewTtP4w3e/ZLtJVB86Ywad9a9Ltm7VrQrF0LAJAaGVUmgupmzZrB2toa06dPx9SpU0Wrf0dGRuKvv/4Sy6urq4tRo0ZhwgTh1Lf169fD0NAQXbt2/e7rNm7cGM2bN8ewYcMwbNgwmJmZISUlBYGBgQgKChJbGExbWxtz587FhAkToKGhge3btyM7OxsDBw6Uem4NDQ1YWVlh+/bt0NHRgaKiIrZt2wZ1dXWxXu9OnTrhn3/+wYgRIzBu3DjUrFkT79+/x8OHD/Hnn39CTk4Os2bNwrRp05CcnIxmzZqhXLlyePfuHa5fv47JkyejWrVq333vXxs0aBDOnj2Lfv36YcCAATAxMUFsbCyePXsGQ0NDDBo0qMDnqlq1KhQUFHDixAkoKipCQUHhhy9YJpf99cRHolKqrm3Hkq5CmZeSWrZ7IkuabnrZnnNcGhgrqZV0Fcq8YyfmlHQVyry7o9fmn4lylZgqubI0fR95OX71LqyW967JVG7lypU4fvy4aMGsuLg4rFixAp6enkhOToaFhQWmTJmC+vXri8r0798fqqqqcHFxwaZNmxAVFSXap9rU1DTXa33ep3r9+vVo3bq12LH09HRs27YNZ8+eRVhYGDQ0NFCzZk107dpVtJ/0532qp02bhhUrViA4OBg1a9bEb7/9hrp164rO9Xkf5/nz5wOAaOupZ8+eQVtbG/3790dycjJ27dqFJ0++PGROSEjA2rVrceXKFcTHx8PIyAjt2rXD5MmTRXlu3bqFLVu2wMvLCwBQoUIFNGnSBGPGjIGGhoZoj+jjx4+LBbHf1gkANmzYIFGHqKgorFu3DtevX0d8fDx0dXVhY2ODQYMGie5R2rmuXLmCsWPHwsPDAxUrVgQAHD58GDt27EB4eDgyMzN/+D7VDKqpTGBQXXgMqguHQXXhMaguPAbVhcegunAYVBceg+rCkzWoHjduHN69e4eTJ08WbYWKweeg+tuVyKl04vBvIiIiIiL6afn6+uL+/fu4du0axo8fX9LVoZ8Qg2oiIiIiIvppzZkzBwkJCRg8eDCGDh1a0tWhnxCDaiIiIiIi+mmdOnWqpKvw3ZYtW5Z/Jio15Eu6AkRERERERERlFYNqIiIiIiIiIhkxqCYiIiIiIiKSEYNqIiIiIiIiIhkxqCYiIiIiIiKSEYNqIiIiIiIiIhkxqCYiIiIiIiKSEYNqIiIiIiIiIhkxqCYiIiIiIiKSEYNqIiIiIiIiIhkxqCYiIiIiIiKSEYNqIiIiIiIiIhkxqCYiIiIiIiKSEYNqIiIiIiIiIhkxqCYiIiIiIiKSEYNqIiIiIiIiIhkxqCYiIiIiIiKSEYNqIiIiIiIiIhkxqCYiIiIiIiKSEYNqIiIiIiIiIhkxqCYiIiIiIiKSEYNqIiIiIiIiIhkxqCYiIiIiIiKSEYNqIiIiIiIiIhkxqCYiIiIiIiKSEYNqIiIiIiIiIhkxqCYiIiIiIiKSEYNqIiIiIiIiIhkxqCYiIiIiIiKSEYNqIiIiIiIiIhkplnQFiAriU1ZGSVehzEtJiSjpKpRp8orKJV2FMk9Jjs9xC+vu6LUlXYUyr8Hfk0u6CmXanr5bSroKZZ7Pp/SSrkKZ17KkK0D0DX7DISIiIiIiIpIRg2oiIiIiIiIiGTGoJiIiIiIiIpIRg2oiIiIiIiIiGTGoJiIiIiIiIpIRg2oiIiIiIiIiGTGoJiIiIiIiIpIRg2oiIiIiIiIiGTGoJiIiIiIiIpIRg2oiIiIiIiIiGTGoJiIiIiIiIpIRg2oiIiIiIiIiGTGoJiIiIiIiIpIRg2oiIiIiIiIiGTGoJiIiIiIiIpIRg2oiIiIiIiIiGTGoJiIiIiIiIpIRg2oiIiIiIiIiGTGoJiIiIiIiIpIRg2oiIiIiIiIiGTGoJiIiIiIiIpIRg2oiIiIiIiIiGTGoJiIiIiIiIpIRg2oiIiIiIiIiGTGoJiIiIiIiIpIRg2oiIiIiIiIiGTGoJiIiIiIiIpIRg2oiIiIiIiIiGTGoJiIiIiIiIpIRg2oiIiIiIiIiGTGoJiIiIiIiIpIRg2oiIiIiIiIiGSmWdAWIShsNDTVMmjwULVo0QrlyyvB64Y9Vq7fDz/dVvmUtLWuhY6dWsLIyQ82a1SAQKMLGuo3UvDo62pg0aTCa/FIfqqrl8OZNCHbuOILLl28W9S0VG01NDcyaPQuuri4oV64cnj17hkWLlsDby7tA5U1rmGL+b/NQz6EeMjIy4Ol5FYv+XIzY2NgveUyro0fPHvilSRNUrlIZycnJ8PLyxto16/DixQuJc3bo0B4jR41AzRo18eHjB1y54oFlS5cjLi6uyO67OAiUBBg6aQJcOneEhpYmXvn5Y8eav/Dw1u08y1WqVhWdfu0Nc1tr1LQwh7KyMnr+4oyIsHdS85dTU8XAcWPQvI0rdA0MkBAXB+8nT7F42iykpaYWx639MIoCAbpPGAmnjm2hpqmBYP9AHPvrb3jdvp9nuXqtmqNhm1aobmkOLT1dxES8x9NrN3Hq7x1ITvoglnfdldPQr2AicQ6Pwyewa8GyIr2fkiAnEKDS0GHQc3GFooYGkl+9QsiObUh4+DDPchUHD0HFwUMk0rPS0nC/lbNYWoP/pL/HBW/dgncHD8he+TLqY0oadp6+gWcvQ/AiMBQJH1KwdFw3dG1hX9JVKxHyAgHsxgyEabuWUNJUR1zAazzetAfhdx9/13lctiyDSQN7+B4+jXvLNorSFZSV4DhrHPStakPN0AByCvJICnmHgNOX4Hf0DLIzPxX1Lf1wCgIBXMYNgX17F5TT1ED4y1e4tHEnAu7k/Xds0aIJGvTsCOOa1aGqrYkPcfEIfuaDy3/vwfvAN6J8qlqacOjSFnWaNYJBtSpQUFRA5Jtg3Nx/DM8uXS3u2yMqlRhUE31FTk4OGzYugJlZdezZcxzxcYno1as9du5cgT69xyM4WHqg8plTEwd07eqKly/fICwsAlWrVpSaT01NFXv2roKubnn8c/BfREfHwcX1F6xaPRezZi3HhfPXiuHuipacnBx27d6JOnXqYNvW7YiNi0P//n1x+PA/6NC+E96+fZtneSMjIxw9ehhJSUlYuWIVVNXUMGLEMNQ2M0OnTl2QkZEBAOjVuxd69eqJCxcuYv/+A9DQ1MCvv/bBqX9PYOCAwbh165bonP369cWixX/i5s1b+HPRYhgbGWHwkEGwtrJC585dkJaWXpxNUiizVyxFs9YuOLZnH0LfBqFNty5YsXMLJvYdhBePcv8yaVHXFt0G9kNQ4CsEBb5CLQvzXPOqqavjr0P7oG9khLOHjyIsKBjaOjqwdrCHQEmpzAfVI5f+jvouzri47xAigkLwS5f2mL5lPRYPGoWXj5/lWm7YgjmIi4zCzbMXEBMegUo1a6BV3x6w+aUR5nbrj4y0NLH8b338cX7PQbG08LdBxXJPP5rp7LnQadYMEceOIjU0FPpt2sBsxSr4TpyApBfP8y3/etVKZKWkiH7PzsqSmi/+wX1EX7wolvYxIKBwlS+j4pKSsemoJ0z0tGFW1Qj3vd7kX+gn5rRwOqq2bAKff04iMTgMNTq6oNWGxbg4fBoinxbsgW3lFk7Qt5b+XqigrIzyplURevM+Prx7D2RlQ9/GHPWnjYK+VW38N3tpUd5Oiei1aDasWjXFzQPHEB0cBvtOrTFk03JsHToJb59IPoz+zLhWdaQkJuHmweP4GJcADT0dOHRpi/H/bMGmfmMQ/lLYuVDFxgKuE4bB78ZdeGzbh6xPn2DVsin6rvoDBqZVcXnz7h91q0Slhlx2dnZ2SVeCKD+59fYWNReXJli5ag6mTl2MKzk9xuXLa+HM2e24efMhZs9akWd5HR1tfPyYjLS0dMyePRq9+3SUWveBg7phypRhGD5sFu7fF37Zl5OTw4EDa2FopI/WrgORmZlZpPeWkOBfpOdr164tNm3eiNGjx+LC+QsAAB0dHVy95oFr165j4oRJeZb/c9FCdO/eDc4tWuHdO+HDisaNG+PgP/sxe9YcHDp0GABgaWmJ169fIzk5WVRWW1sbVzzc8ebNW/To3hMAIBAI8PDRffj5+qFXrz6ivC1atMCu3Tvw++9/YO+efTLfb2VFZZnL5qeOtRW2njqKzUtX4PAO4ZcRJSUl7Ll4BvExsRjT49dcy2poaSEzMwMpH5PRe9hgjJk9I9ee6skL5qNlh7YY1rEbwkPDiu1+clNJSb3Yzl3dyhx/Ht2LgyvW4/xuYW+nQEkJy84cRmJsHBb8OjTXsnUc6sL3gfiDC6dObTF62QJs/20Rrh0/LUpfd+U0QgNeYdXoKcVzI/kYr198r0O1OnVgtXU7gjZvQvjhQwAAOSUl2OzZh4z4OHiPGZ1r2c891Q87tENmQkKe12nw301EnDyBt+vWFmn9C6rB35NL5Lq5Sc/IRMKHFOiX18CLwFB0n7G5VPdU7+m7pdjOrWdphvYHNuLBmq3w3nccAKCgJECn49uRGheP8wMn5XsOBSUBOp/aiYB/L6Hu2EESPdW5cZw5FnX6dMYR555IiSnekU0+n4rvAW8ly9oYf2gr3FZtxn97jwAAFJWUMOXUbnyIjcfm/mO/63zquuUx9/JxPDh1Dif/XAMAKF/BCNlZ2YgPfy+Wd/j2NahqZ4k/mnRERkrxPqRd8eJ6oc/RsWNH+Pv74+DBg6hXr57YsdDQUDg7O2P9+vVo3bp1oa+VmxYtWqBZs2aYP38+AGDWrFnw8vKCm5tbsV2zJNy7dw8DBgzA8ePHYWVl9V3lnjx5glGjRhVj7YoG51QTfaVlKydER8fC48qX3s+4uAS4X7qB5s0bQiAQ5Fk+Nja+QL2hdetaIjY2XhRQA0B2djYuud+Avr4O6tUr+BtOSWnTtg2iIqNw8cKX3qbY2FicczuHVq1aQklJKc/yrVu3hoeHpyigBoBbt27h1avXaNe+nSjNy8tLLKAGgPj4eDx48BA1apiK0mqZ1YKWlhbOup0Ty+vp6YkPHz6gQ4f2Mt3nj9C0jSsyMzNx5vBRUVp6ejrOHT0By7p2MDA2yrVsUkICUj4m53r8M3UNDbTt3gVnDx9DeGgYFAUCCJTyfj2XJY6uzviUmYmrR0+J0jLS03H9xBnUsrOGjpFhrmW/DagB4OHlawCACtWrSS2jIFCEcjmVwlW6lNFt2gzZmZmIPPPlIUJ2ejoiz7lBw9IKSgYGBTiLHBRUVQt0PTklJcjl8z7x/0BJoAj98holXY1SoUrLJsjK/ISXJ86L0j6lZyDg34swsLGAqqF+vuewHNQLcnLy8N537Luu/eGdMEBU0ii+h38/glWrZviUmYl7x8+K0jLT0/Hg5HlUtbWEVgHa8GsfYuKQnpoKla/aJS4sQiKgBgDvqzchUFaGbkXJKTKlTUBAAPz9hZ0NZ8+ezSf3jzNmzBisWrWqpKtR5CwsLHDkyBGYmprmn/kr9+/fx9atW4upVkWLQTXRV2rXNoWv7yt8O4DDy8sf5cqpoErVCkVyHSWBAKmpaRLpqTnDb83NaxTJdYqThYUFvLy9Jdrq6bPnUFVVRbVq0oMRADA0NIS+vh5ePJcchvbs2TNY5DGE+TN9fT3Exn7pTVDO+XIubQhzamoqLCwsICcnl+95S0JN8zoIffMWyR8+iqX75rRPjTq1C30Nq3r2UFZRQWhQMBZuXAd3r8e47P0Um44eLJLzl7QqdcwQ8TYYKR/F2/DVC+Fw0Sq1a33X+bT0dQEASXHxEsfMHR2w+/EN7Hp8A+uunIZr/96yVbqUUa1ZCymhIfj0zUOsD76+wuM1auZ7DrsjR+Fw0R0OF91hOu83CMqXl5pPv3Ub1He/AscrnrDetx+6LVsV/gaozNOtXQOJQaHI+OZBYbSXMPjRMcv7C7makT6sBvfCo/U78CmfB9zyiopQ1taEqqE+KjdvDIsB3fHhXQQSQ378KJ6iZFKnJqKDQpH2TRuGeAn/jk1q5/93rKKhDrXyWjCqWR3dF8xAOQ11BN7Lf067hq4OAOCjlPfN0ubs2bOQl5eHo6MjLl68KJpyVljp6enIymXaS0FUrlwZtWuX/c/kb6mrq8PW1haqBXzoWhYxqCb6ir6+DqKjYiXSo6KEwZuBvk6RXOft21AYGurB2Fi856duXUvhdQz0iuQ6xcnAQB+RkZES6Z/TDA1z79UyyOnxyq18+fLl8+zpdnBwQN26dcWGR7158xZZWVmwryc+ZLJ69WrQ09NDuXLloKWllfdNlRBdA33EREVJpMdECtP08mjLgqpYtQoAYMS0yTAwNsKSabOw9vc/YVK5EtYd2A1d/e/rvShttPX1EBcVI5EeHxUNACj/nX9THYYNEPb2uHuIpQf7B+Lkpm1YP3Emts1diJjwCAyYMxW9p46TvfKlhJKuLjJiJNvwc5qSXu5tmJmUhIgTx/F61Uq8/G0uIs+5QbeFM8w3bpbouU568RwhO7bj5dzZeL1qJZCVhZrzf4dhp85Fej9U9pTT00FytORncHK08DWomvOwKzcOU0chxv8V3ly6lu+1qjg7oc+1E+h56R+0WPsHkiOjcWXCb8j+JHtAVBpo6ukgUcp74ec0TYO82xAAxh3cjN//O4MpJ3fDxrU5rmzdiwcnz+VZppymBup3a4fXj54hScq/YWmSnZ0NNzc3NGjQAIMHD0Z8fDxu3Lgh07latGiBhQsXYvv27WjevDmsra0RHx+PWbNmoX178RFyiYmJMDMzw8mTJ3M937flTp48CTMzM/j4+GDYsGGwtbWFi4sL/v33X4l72rhxIxo3bgw7OztMmDABt2/fhpmZGe7du5fnPWzbtg2tWrWClZUVGjRogEGDBiEkJER0PD4+HrNnz4ajoyOsra3Ru3dvPHjwQOI8165dQ+/evWFjYwMHBwf0798fPj4+AITDuM3MzMQWmM3OzsbOnTvh6uoKS0tLODs7Y8+ePaLjGzZswMaNG5GcnAwzMzOYmZmhf//+8Pf3h5mZmdiaOgDw6dMnNGnSBCtW5D1Vs7hwoTKirygrKyFdytPK9PT0nONFM5/x5MmL6NGzLVaumo2VK7YhJiYeLq5N0KJFI+F1VEr/kEgVFRVRu3wtLWdRJxWV3IfGfj6Wd3llqcd1dXWx/q+1CAkJwdYt20TpcXFxOOd2Dt26dUVgYCAuXXSHkZERFiz4Henp6VBSUsqzTiVJWVkZGelSXnc5baGsXPh6l1PLCWyyszG5/xCk5PRGBvj4YsuJw+jS/1fsWLO+0NcpKUrKysjMkHy9pOf0Vil9x799o3auaN69M87u2Iv3QSFix9aMnSr2+/WTZzFj219oM7Av3A8cRex7yQdFZYW8sjKypLz/ZeX8Hcor5/6+FHFcfKht7PXr+ODrKwyWu3QVW9Xbe+wYsbxR58/BasdOVBoxEpEXziNbyt89/X9QyOU1+LnXWTGPz0ajejao4uwEt/7jC3St8AdPcWnkDChpqMO4vh10zKpDUK6cbBUvRQQqyvgkpQ0zc/6uBAX4HnP0t+VQUVOFTkUT1OvcBgJlZcgpyOe6MrqcnBz6LP8N5TTUcXrJj/kccXZ2zvO4h4dHrsceP36MsLAwjB07Fk5OTtDW1oabmxtatGghU13c3d1RpUoVzJ07F/Ly8sXSGztt2jT07NkTgwcPxtGjRzFr1ixYWVmJhlPv378fGzduxLBhw9CgQQPcvXsX8+bNy/e8//77L9avX48JEybA1tYWSUlJePToET7mjPr69OkThg8fjpCQEEybNg16enrYv38/Bg8ejMOHD8PSUtgZdP78eUyZMgXOzs5YvXo1BAIBHj9+jPfv38PcXProw8WLF+PYsWMYNWoUbGxs8PjxY6xatQrKysro06cPevTogYiICLi5uWHv3r0AhD3eNWrUgI2NDU6cOIHGjRuLznfjxg1ERkaiW7duhWprWTGopv9LioqK0NISn8MWF5eAtLR0KEmZN/251zQtTXLItiwCAt5i1qwVmDdvHPbtFy78ERUVi5UrtmLeb+ORnFx6VmEWCATQ1hbv4Y2JiUVqaqrU3uTPDx5S81hJ+vOxvMtLtnW5cuWwc9cOqKupo3v3nhJzrefMmQcVFRXMmzcX8+bNBQCcPHkKQcHBaNOmNZKTP0qcszRIS0uTOr9ZKact0tIK/3pIz2nzW55XRQE1APg8fYZ3wSGwrGtb6GuUpPS0NCgKJF9PSjmBYHoBVzY3s7fF8EXz8OzGHRxd93eBylzY+w9smjREnfr2uHX2QsErXcpkpaVBXsr7n3zO32nWd66eH3PlMqqMHQst+3p5bpWVnZmJiJMnUX3adKib1S7QKuP0c/qUy2tQIefvODNV+mtQTkEejjPH4tW5K4jxflmga6XGxiP83hMAQNCVG7Aa2gcuW5bhZMdBxb5QWXHKSE2DgpQ2VMz5O/52NwNpgp99WWX92UUPTDstXOTz3Grp74md5kxEbSdHHJ69WLRCeGnm5uYGZWVluLi4QCAQwNXVFWfOnMHHjx+hpqb23efLyMjA9u3bi3Voc9++fdG3b18AgJ2dHa5fv45Lly5hzJgx+PTpE7Zt24auXbti2rRpAAAnJyfExcXh+PHjeZ73+fPnMDMzw8iRI0VpLVu2FP3/tWvX8Pz5c+zYsQNNmjQRndvFxQVbt27Fhg0bkJ2djeXLl6Nx48bYtGmTqGzTpk1zvW5wcDAOHDiABQsWoFevXgCARo0aITU1FZs2bUKvXr1gZGQEIyMjyMvLw9bWVqx8jx498OeffyIhIUE0CvHEiROws7P77nnbRYVBNf1fsrWtg527xIeHtGk9EFFRsdCTMsRbX184LzBSytBwWV25fBPXrt6FmVl1yCvIw9cnEA4O1gCAoKDQIrtOYdnb18XhI4fE0pwaN0FkZJRoGPfXPqe9z6PH7vOw79zKx8XFSfRSCwQCbN36N+rUro0BAwbi5UvJL05JSUkYPnwkTExMULFiBYSFhSEs7B1OnDyG6OhoJCYm5X/DJSAmMgr6UoZ46xoIh2RHF0Hv5+dzxEVLDguMi4mFuqZmoa9RkuKjoqFjIDmEXVtfOGQ5LjI633NUNquJqZtWIyTgNdZPmomsTwXbrzY2Qrhgj7pW2W7D9JgYKOlLDvEW6AqHi6ZH59+GEueMjISiZv6LcKVHCtuwIHnp55USHQtVKa9BVT3hazBZyrBmADBt3wqaVSvi9qJ1UDcRX5RQoFYO6iaGSImNxycpD2s/C7r8H+zHD0GlZo3w8kTeQ51Ls8ToWGhJme6imTN0PjFSehvmJiXxAwLvP4Fdu1ZSg+qWowaiUe8uOL92Cx67uctWaRnk1ROdl8zMTFy8eBFNmzaFhobw/aZDhw44cuQILl++jM6dO3/3OR0dHYt9rrCTk5Po/1VVVWFiYoKIiAgAQEREBKKioiR62p2dnfMNqs3NzfHPP/9g6dKlaNWqFWxsbMQW5X348CHU1dVFATUg/D7WqlUr0RS8169fIyIiAjNnzizw/dy+fRsA4OLiIrbbTaNGjbB9+3aEh4ejQoXc1zFq164dli5dCjc3N/Tt2xexsbG4evUq/vjjjwLXoagxqKb/S/7+bzBi+GyxtOjoOPj7v0bdusIFrb5egMvSqjZSUlIR9LZoFzDJzMyE91dP1R0b2AIA7t19WqTXKQwfH1/0/bW/WFpUVBR8fHxQ38FBoq1sbW2QnJyMN29y32v1/fv3iI6OhpW15CrnNjY28PHxFUuTk5PDmjWr0KhxI4wdOx737t3Ps87v3r0TrSquqakBS0tLXLx4Kd97LSmBvr6wa1AfqupqYouVmdtY5xz3K/Q1/L2EPQ96UlbB1jPUR/Crsr03bpDvS5jXt0c5NTWxxcpMrS2Ex/3y7r0yqFQBM7b/hYTYOKwcORFpySl55v+2LAAkxpbd3i0ASA4MgJadHRRUVcUWK1PPGbqXHPj9+0grGxnjY0D+PYfKJsLVgjPi47/7GvTziPV/BaN6thCoqYotVqZnVVt0XBp1YwMoCARot1dy6HGNDi6o0cEFnpN/R/DV27leW0FFODJISeP7eypLk3C/AJg62EJZTVVssbJKVsK/43d+3/93LFBWhoq6ZLs07N0ZLmOH4Mb+o7i265CUkqXPrVu3EBsbi+bNmyMxMREAUKtWLejr68PNzU2moFpXN/956oX1+QHAZwKBQNT5EJWzJouOjninUEHq1bVrV3z8+BFHjx7Fnj17oKGhgc6dO2PatGlQUVFBYmKi1PPo6ekhIWf7xPic921pHSW5iYuLQ3Z2Nho0aCD1eH5BtaqqKtq3b4/jx4+jb9++OHPmDAQCAdq0+TFb8ErDhcro/1JS0gfcu/dU7Cc9PQNXLt+Enp4OnFt+maOhra0JFxcnXL92T2x1yIoVjVGxonGR1alyZRP06NEO16/fQ1BQ6Vl9NDExEbdu3RL7SUtLx4XzF6BvoI/Wbb7s31i+fHm0a9cWHlc8xHqaK1eujMqVK4ud9+KFS3B2bgFj4y9t2KhxI5iaVsf5c+fF8i5Y+Ac6dOyA3+bNx6XvDI5nzJgBRUVF7Nyx67vK/UjXLrhDUVERHXv3FKUJlARo270rvJ88Q2S48Gm0gbExKueyxVN+Qt68RYCPL5xatoBWeW1RuoNTIxiamODBrdy/bJYF9909oKCoiOY9u4jSFAUCNO3aAYHPXoh6k3WNDWFcrYpYWS09XczasRHZWVlYPmy81BW/AUBNSxNy8uIfmwqKCugwbCAy0tPhc/9R0d7UDxZ77RrkFBVh0LGTKE1OIIB+27ZI8vZGes4IEyUDQ6h88/esqKUtcT7Dzl0gKF8e8V8tkiMtn3y5cjDu3hMZ8XH4mLPFDf1/env5BuQVFVCrW1tRmrxAgJqdXBH13BfJ74XBg5qRPrSqVhLleXPxGjwn/y7xAwAhN+7Bc/LviHohfDiprC19REmtLsIv49EFHD5eWj2/fB0Kiopw7N5BlKYgEMChcxsEPfNGQk4bahsZQL+a+N+xmo62xPnKmxihhmNdhPqI/23auDZHp1kT8NjNHWdXbJIoV1p93j5r9uzZcHBwgIODA+rXr4+oqCjcuXMHMVIWa8yPtJ1FlJSUJFYU/xyEFjX9nIVGY2PFR1MW5F7k5eUxcOBAnDt3Dv/99x/GjBmDQ4cOYefOnQAALS0tqeeJjo4WDbvW1tYGIH3x2dxoaWlBTk4Ohw4dwvHjxyV+CrICeo8ePeDj4wM/Pz+cPHkSbdq0kWn4flFhTzXRVy5fvolnz3yxcOFkmFavjLj4BPTq1R7y8grY/Pd+sbzbti8FALRtM0iUZmxsgPbthcNvzC2EW/gMHy7cbic8PBJubp6ivCdPbcXlyzcQER4JkwpG6NmzHRISkrDozw3FeYtF5vz5C3j8+DFWrlyOmjVqIDYuDv3794W8vDzWrl0nlveff4TzKZ2cfhGlbdq0GW3btcGhwwexe/ceqKmqYcTI4fD19cOxY1+GKw0ZMhgDBvTHo0ePkJKags5dOomd+9JFd6SkCHsVR48ehVpmtfD06VN8yvwEF5dW+KXpL1i5chWePy+98zR9nz2H57kLGDFtMrR1dREWFITWXTvDqIIJls/6stDI3FXLYNegPn4xrSNKU1NXR7eB/QAAlvZ2AICuA/riQ2ISPiQm4uT+f0R5Ny5ehtV7d2LjkYM4c+go1DXU0XPIIAS/foPTBw//oLstHq+ee+PuhcvoNXkstHTLIyIoFL90bgc9ExNsn7dIlG/UsgUwr2+PvnUcRGkzt/0Fw8oVcXbHXpjZ28LM3lZ0LCEmBl63hSMj7Jv/gk6jhuC+uyeiQsOgrqWFRu1dUalWDRxZswkJUobWlyUffH0Q4+mJSiNGQqCtjdSwMOi3bg1lI2O8Xr5MlK/G3HnQtLPD3V++DEe0O3YcMZ4eSH79Gtnp6dCwsoauszM+vnwptu+1UdeuKO/UBHG3byH9/XsIdHVh0LYdlAwNEbj4T2R/NQzw/8mB83eQ+DEFkbHCKSpXH/ohIkb4Bbx/20bQUCudiywWtWgvP7xxvw778UOhoqONpJB3MO3gAnVjQ9z6Y7UoX5NFM2FUzwZ7bIVbsSW8DUHC2xCp5/wQFiHWQ23azhlm3dsj+OptJIWFQ6CqCpNG9VChoT2Cr91BxIOnxXqPxS3khS+eXbqKNhNHQF2nPGJCwmDf0RXlTYxw7Pflony9lsyBqYMdZlh9mfc65eRuBN57jHd+gUhJTIJe5Ypw6NoWCoqKuLD2y17BlSxro9eSOUiOT0Tgvceway++JV7QUy/EhoYX/81+p5SUFHh4eKBly5YYMGCA2LHo6GhMmTIF58+fR//+/XM5Q8EZGRkhIiJCbJ72t6tVFxUjIyPo6+uL7u2zK1eufNd5DA0NMWTIELi5ueH169cAAHt7e+zcuRM3b94UDUHPzMzElStXYG8v3G2levXqMDIywsmTJ9G2bdtcz/+1hg0bAhD2cue1QNzXPfLfsrKyQp06dbBo0SL4+/vj999/L/C9FgcG1URfycrKwtgx8zFl6lD0+bUjVFSU4eX1Er/NW1Ogod8VKhhi3PiBYmmff3/w4LlYUP3y5Wt06tQKurrlER+XAHf3G/h7837ExhbPk8yilpWVhUEDh2DO3NkYNHggVFRU8PzZc0ybOgOvX+c/lDg8PBy9evbBb7/NxcyZM5CRkQFPz6tYvGiJ2BuoubkwgLS3txe9gX/NqXEThIYK/238/P3h6uqCli2doaCgAD8/P4wZPRbnz5f+xaOWTJuF91MmwLVzR6hraeK1nz9mDh+NZw8e5llOQ0sTw6ZMFEvrPWwIACA8NEwsqH5y9z6mDx6BoZMnYMS0SUhNScWNKx7YsmyV2OJlZdWWWX+g+4QINO7YFmqaGgjxD8Sq0ZPh9/BJnuWq1BE+AOswbKDEMZ/7j0RBdfDLQIS9egOnDq2hoVMemRkZCPJ9ifWTZuH+Jdnm95U2gUsWodL7YdBzdYWiugaSX7+C/8wZSHr2LM9y0ZfdoWFpBZ2mzSCvpIS09xF4d+gfhO3bi6yvFkZKevEc6paWMGjfHoqaWshKTcUHXx+8Wr4UiY/z3wf3Z7Xr9A2ERcWLfne/6w33u8IpGx2b2v3fBNUAcHPecnwcOwim7VpCWVMDsQGvcWXCb3j/+EX+hQvg/RNv6NtYoFrr5iinWx5Znz4h4W0I7q/6G76H/i2Sa5S0I3OWIH7cENTt4IJymuoIf/kau8fNwptHeT9cvnvkNGr/0hBmjetDWVUVH2LjEHD7ITx3HEBEwGtRPgPTqlBUUoK6rhJ6/jlL8vrzlpbKoNrDwwPJycno378/HB0dJY7v2LEDbm5uRRJUu7i44K+//sKcOXPQs2dPBAQE5Du/WVYKCgoYMWIElixZAj09PTg6OuLevXu4c+cOAGFvdG7mz58PTU1N2NraQlNTE48fP4afnx/69OkDAGjWrBmsra0xffp0TJ06VbT6d2RkJP766y8Awp76mTNnYsqUKRg/fjw6deoEJSUlPH36FFZWVmjevLnEdatVq4a+fftixowZGDp0KGxsbJCRkYG3b9/i3r172Lx5MwDA1NQUmZmZ2Lt3L+zs7KCuro7q1auLztOjRw8sXLgQ1apVk/od8UeSy/56MiRRKWVjXXJzJH4WCQkcVlkYlRWLZju1/2eVlNRLugpl3nh9vg4Lq8Hfk0u6CmXanr5bSroKZZ7PJ24bV1grXlz/7jKjRo2Cv78/PD09pQ7Z3rt3L5YsWYLLly9DXl4ezs7OWL9+PVq3bi3lbEItWrRAs2bNMH/+fIlj//77LzZv3oz379/D3t4eM2bMQKdOnbB06VJ07dpVavlZs2bBy8tLtAjYyZMnMXv2bNy5c0dsznSnTp1Qp04dLFsmHEWUnZ2NTZs24Z9//kFycjIaNmyIDh06YPLkyTh9+nSuw6lPnTqFo0eP4vXr10hJSUGlSpXQu3dvsQcLcXFxWLFiBTw9PZGcnAwLCwtMmTIF9evXFzuXp6cntmzZAj8/PygrK8Pc3ByzZs1CnTp1cO/ePQwYMADHjx+HlZWVqM4HDx7EkSNH8ObNG6ipqaFatWpo3bo1Bg0aBEDYK7548WK4u7sjJiYGDg4O2L//y8jRyMhINGnSBNOmTcPw4cNz/Xf6ERhUU5nAoLrwGFQXDoPqwmNQXXgMqguPQXXhMKguPAbVhSdLUP3/Zt26ddi9ezfu3bsHFZWfc7TL8ePH8fvvv+PatWuiueUlhcO/iYiIiIiIyqhXr17hzJkzsLOzg0AgwP3797Fz50706dPnpwyoQ0NDERQUhM2bN6NNmzYlHlADDKqJiIiIiIjKLBUVFTx58gSHDh3Cx48fYWhoiKFDh2L8+PElXbVisXHjRri5ucHOzg6zZknO6y8JDKqJiIiIwBezjwAAjndJREFUiIjKqAoVKmDfvn0lXY0fZtmyZaL55KUF96kmIiIiIiIikhGDaiIiIiIiIiIZMagmIiIiIiIikhGDaiIiIiIiIiIZMagmIiIiIiIikhGDaiIiIiIiIiIZMagmIiIiIiIikhGDaiIiIiIiIiIZMagmIiIiIiIikhGDaiIiIiIiIiIZMagmIiIiIiIikhGDaiIiIiIiIiIZMagmIiIiIiIikhGDaiIiIiIiIiIZMagmIiIiIiIikhGDaiIiIiIiIiIZMagmIiIiIiIikhGDaiIiIiIiIiIZMagmIiIiIiIikhGDaiIiIiIiIiIZMagmIiIiIiIikhGDaiIiIiIiIiIZMagmIiIiIiIikhGDaiIiIiIiIiIZMagmIiIiIiIikhGDaiIiIiIiIiIZMagmIiIiIiIikhGDaiIiIiIiIiIZMagmIiIiIiIikpFiSVeAqCD0dO1LugplXmpqdElXoUx7nxZV0lUo88xVypd0Fcq8xFRBSVehzNvTd0tJV6FMG3RwVElXocy7O3ptSVeBiIoYe6qJiIiIiIiIZMSgmoiIiIiIiEhGDKqJiIiIiIiIZMSgmoiIiIiIiEhGDKqJiIiIiIiIZMSgmoiIiIiIiEhGDKqJiIiIiIiIZMSgmoiIiIiIiEhGDKqJiIiIiIiIZMSgmoiIiIiIiEhGDKqJiIiIiIiIZMSgmoiIiIiIiEhGDKqJiIiIiIiIZMSgmoiIiIiIiEhGDKqJiIiIiIiIZMSgmoiIiIiIiEhGDKqJiIiIiIiIZMSgmoiIiIiIiEhGDKqJiIiIiIiIZMSgmoiIiIiIiEhGDKqJiIiIiIiIZMSgmoiIiIiIiEhGDKqJiIiIiIiIZMSgmoiIiIiIiEhGDKqJiIiIiIiIZMSgmoiIiIiIiEhGDKqJiIiIiIiIZMSgmoiIiIiIiEhGDKqJiIiIiIiIZMSgmoiIiIiIiEhGDKqJiIiIiIiIZMSgmoiIiIiIiEhGDKqJiIiIiIiIZKRY0hUgKm3U1FQwYpQrnJzMoawsgL9fKLb8fQEBAeH5lm3brh5atrJB5Ur6UFNXQUxMEp49fYN9ez3x/n28WN4OHevDzq46atepCENDbVy6+Bgrlp8sprv6cTQ01DF9xgS0atUMKioqePHcG8uWrYOPj3++Za2szdG1SwdY21jAzKwmBAJFmNVykMinrKyM+fOnw9rGEsbGhpCXl0dISChOHD+Lf/45hszMT8Vxa0VGoKSEiVOmoFPXLtDU0oK/rx/WrVqF2zdv5lvWwNAQc+b/hsZNfoG8vBzu3bmLJQsXIjQkRCyff9BbqeVXLVuO7X//Lfq9pasrevftC7PaZtDW1kZsbCyePnmCjWvXIeDly0Ld54+mKBCgw/jhcOzgClVNTYS9DMSZv7bB986DPMvZtmyKeq2dUcWyDrT0dBEb8R4vrt/G+S27kZL0QSyvsmo5dJwwAnVbNYe6jjaiQ97h6sFj+O/IqeK8tRIlJxCgxsjBMG7TCgINDXwIfI2ALTsRe/9RnuVMhw+E6fBBEumf0tLh0cS1mGpb8uQFAtiNGQjTdi2hpKmOuIDXeLxpD8LvPv6u87hsWQaTBvbwPXwa95ZtFKUrKCvBcdY46FvVhpqhAeQU5JEU8g4Bpy/B7+gZZJfy97/i8DElDTtP38CzlyF4ERiKhA8pWDquG7q2sC/pqpUIOYEAlYYOg56LKxQ1NJD86hVCdmxDwsOHeZarOHgIKg4eIpGelZaG+62ccy2nYWUNi02bAQAPO7RDZkJC4W6AqAxiUE30FTk5OSxZ1h+mpkY4cvgmEhOT0bFTfaxeOxSjR/6NsLCYPMvXqGmMiPA43Lnlh6QPKTAyKo927euhQUMzjBi2ETExSaK8vfs0gWo5Zfj5hUJXV6O4b+2HkJOTw7Zt62BWuyZ27tyPuLgE/Pprd+w/sAVduwxAUFBInuWbNm2M7j064aV/AEJDwlCtehWp+VRUlFGjZnX8d/0WwsLCkZWVBbu61pg9ZzKsbSwwbepvxXF7RWbZqlVwbdsG+3btwts3b9GlR3ds27MbA3v3waM8vvSoqqpi3+FD0NDQwNZNm5CRmYlBQ4fgwNEj6NymLeLj48Xy3/zvP5w+Kf6gxsfLW+x3MzMzJCYkYN+u3YiLi4Wevj669eyJY2dOo1eXrvD39S2y+y5uA5fMQ91WzeGx/wgig0PRsFNbjPt7NdYMGYdXj5/nWq7fHzMRHxmN+26XEBv+HhVqmqLZr91g2aQhlvQYhIy0dACAnLw8Jmxbi8oWtXH90ElEBoXAvLEjfp0/HaqaGri4fd+PutUfynL+TBg6N0XwoeP4GBKGCu1dUXfdMjwcPRnxz7zyLe+zbA0+JaeIfs/OyirO6pY4p4XTUbVlE/j8cxKJwWGo0dEFrTYsxsXh0xD51Dv/EwCo3MIJ+tbmUo8pKCujvGlVhN68jw/v3gNZ2dC3MUf9aaOgb1Ub/81eWpS3UybEJSVj01FPmOhpw6yqEe57vSnpKpUo09lzodOsGSL+195dR0WV92EAf4ZGUkrEwqYUFVFBVlQUu9tdu3ONtYPVXbvX1rX1tV0DFRRQVkVsEbsVEKVLYqj3D3R0doZUuIw8n3P2HLkx88zdgZnv/dXhQ0gODoZxmzaouXQ5Hv06HvGB2f8t/Ozl8mXISMrj76xIBPNfJyA9MRHKpUp9j/hEColFNdFXmjhbw8amEua57ce//2Z9+bl4IRC79kzEgEHNsfDPwzme/9fqUzLbrlx5hE2bR6Ola10c2P+vZPvECdsQ9qn12v1M8S4C86p1axfUs7PF+HHT4OnpAwA4e+Y8PM8dxbjxw3Mtdvf/7yi2btmNlJQUzJk7JduiOjY2Dr16St9NP3DgGOLjE9CvXy8sXrQaERE53wARSi1bW7Tv1BFLFizA9i1bAQDHjx2D+zlP/DZzBvp07ZbtuX379UPlKlXQvUNHBN7L+mJ06eJFnDrniUHDhmHVsmVSx79+9Qon/zmeY571f/0ls+3wgYPw9b+Kvr/8ArdZs/L5CoVhXssS9m1b4uiytTi/cz8AwP/EWcw9sRddJ43Bsl9GZHvulomz8PTGHaltbx4+xqBFc9GgfStcOZr1e123hTOq1q2N3bMXwO+f0wCAfw/+g+GrFqDtyEG4cvQU4qOiC+kVCkPXygJlW7ngyZqNeLPvEAAg9IwnHPfvQI1xI3B96LhcH+ODty9SY+MKO2qxYGRTE1XaNMONlZvxYPcRAMCLU+fR6chW1J84DGcGTMj1MZTVVGE/eTgCdxxEvTEDZfaL4+Jxuv94qW1PjrgjNeEjLPt0xo3lm5AU+WO9D3NjUloHl7fNgHFpHQQ+D0b3qRuEjiQYLUtLGLVogTcb1iP0QNbfwnBPD9ju3I2Ko0bhwehRuT5GlO/FPLc2m3ToCDUTE4SddkfZHj2/KXtR69ixI548eYJ9+/ahfv36UvuCg4Ph4uKCNWvWoHXr1vl6XC8vL4wZMwbe3t4oX758ns+bPn067t+/D3d393w9X3G2du1abN++HXfu3Mn94HzYuXMnKleuDGdnZ6ntzZs3R9OmTTF37tzv+nx5wTHVRF9p4myNqKh4XLr0ULItNjYRvhfvw9HREqqqyvl+zA/vs77caGtrSG0P+0938B9Bq1bNER4eiXPnLki2RUfH4OxZL7i4OENVVTXH8yMjo5CSklLg5w8Jyeqir6urXeDHKGyt27ZBWloaDv5vv2SbOCUFRw4eQj07O5iWLZvtua3atsG9u3clBTUAvHzxAlev+KFN+3Zyz1FXV4eaunq+MkZGRCA5KQk6urr5Ok9I9VybIT0tDZcOn5BsSxOLceXoKVStWwulTU2yPfe/BTUA3PXKugFmWsVcsq2aXR0AwI2zXlLH3jzrBTUNddg2/+kbXkHxVMbFGRlp6Qg+/uVLXoY4FSEnz0C/tg3UTYxzfxCRCMpaJaMFq1KLn5CRlo6nR89ItqWLU/HsuAdMbK1Rqkzu18tmYC+IREp4sDvnm7j/lfDuAwBATaf4/v0rLGqqKjAu/WP0+PpWhs5NkZmWhrCTX/4WZorFCDvtDh2bWlAzyf5v4ReiPLU6K+vooMLQYQjevg3pCQm5Hl+cPHv2DE+eZA1LO3VKtkGEvo8ePXpg165d3/1xd+/eDV9fX5nt69atw+DBskMYigKLaqKvVKtWFs+evkNmZqbU9sePg6GpqYby5Y3y9Di6uprQ19dCjRpmmDK1KwDgzu0X3z1vcWNpVRMPHz6WuX6B9x6gVClNVK5c8bs+n6qqCkqX1oOpaRm0aNkUgwf/guDgd3jzJvi7Ps/3ZGltjdevXuHjf76A3Au4m7XfSn6XT5FIhJoWlrgfGCizLzDgLiqZm0NLS0tqe5fu3XH38SMEPn2C017n0b5Tx2xz6ejqorSBAWrUrIkFS5dAR1cXV69cyeerE04FixoIexOE5I+JUttfB2bdICtvUT1fj6dnZAAASIiOkWxTUVNFeloa0lPTpI4VJyUDACpa1cxv7GJPt0Y1JL4NQvp/rmvsw8eS/bn56Z//weXCaTS/eAY282ZCzaB0oWQtDgwtqiHuTTBS/3O9Iu5nfXk3qFk1x/O1TI1Ra1Av3FrzN9I/DTvIjpKKCtT1dVGqjDEqNmsM6/7dkfDuPeKCQr7tRZBCK1W9BpKCg5CeKP0eTPg0lKdUtdz/FtY9eAj2Hudg73EOVWfPgWpp+b+zFYYOQ2pUFD58VcArilOnTkFJSQkNGzaEh4cHUlNThY70QzI1NUXt2rWL7PmsrKzy1Tvge2JRTfQVQ0MdREXJ3m39PBba0Chvd8IPHp6Ko//MwMbNo2FtUxFr/3LHrVs/flFtbGyE8LAIme1h4VnbTPLSqpUPLV2bwf+aF3z/dcf69cvw4UMYRo2chPT04jtRj7GJCcLDwmS2f95mUqaM3PP09fWhrqGe53Nv37yJ1cuWY8yw4XCbOQvp6elY8ddf6PPLL3If/9A//8D/zm2cOueJNu3aYcNff+HIwYP5fn1C0TU2Qmy4bJf/uE/DAPSN83ZD7DPXIb8gPS0Nd77qdfHh9Vsoq6igsq211LHV7GyzniMPrZCKRt3IECmRUTLbUz5dV/UcrmtqXALeHjqGh4tX4u40N4ScOA3Tls1gv2XND9tyrWlkgMQI2euV+Ol6lTI2zPF8+8kjEfnkBV55Xsz1uSq5OKHPxaPo6fk/NF/1OxLDIuA1fg4y03/sMeuUMzVDQ6RGyv4t/LxNzSj739m0+Hi8P3oEL5cvw9M5sxB22h2GzV1gtW6DTMt1qSpVUaZDR7xZvxZQsHkSMjMz4e7ujkaNGmHQoEGIiYnBpUuXCvRYqampWLBgARo0aAA7OzvMnDkTHz9+lDlOLBZj5cqVaNasGWxsbNCmTZtsW8ivXbuGzp07o06dOujevTvu3/8yd0VwcDBq1qwJDw8PqXMWLFiA5s2bS34+duwYatasicDAQAwePBi2trZo1aoV/Pz8kJGRgVWrVsHR0RGOjo5YsWIFMr76f/jixQtMnDgRzs7OsLW1Rdu2bbF9+3apYz7nOHHiBObPnw97e3s4OTlhyZIlSEv7cuN57dq1qFu3ruTnfv36oWbNmjL/9evXDwCQmJiI+fPno1WrVrC1tUXz5s0xd+5cxMd/mZOoefPmCAkJwb59+yTnH/s0f0zz5s0xf/58qWtz7tw5dOrUCbVq1YKTkxMWLVok1Svy2rVrqFmzJq5cuYLJkyejbt26aNasGbZu3Sr3/092OKaa6CtqaqoQ/6cVCgDE4qxt6mo5d1/+bMa03VBTU0HFSsZo0aIONDTUvmvO4kpDQx1isezdXvGnFhd1jfx1Q87NNf9bGDhwDHR1tOHgYI+aFjWgqan5XZ/je9PQ0IBYLNsClZKcItkvj/qn7WI5rVefPxzUvzq3T7fuUsccPXQIR91PYeLUKTh2+LBMN/sZU6ZAW1sbFSpWRNce3aGuoQFlZWWpD8fiTE1dHWlyruvnScZU8/Hes2/XEk7dO8Jz216Evf3S6+HG6XNoN3IQ+v8xEwf+XIGwN0GwbNwQzr2zeqOo5rObvSJQUldDhpzrmvHpuiqpZ/+37e3Bo1I/h134F7EPH6P2H7NRoVsnvN69P5szFZeyujoy5LR4fW51Vsnhs8C0vi0quTjBvV/u49QBIPTGXXiOmAo1HW2UbVAXBjWrQLWY//2jwqeUzXvw8+9xTr+z749IDzmI8vVFwqNHqD7XDWW6dMW7fXsl+8x/nYCYa9cQeyPn1RUKi4tL9rORA4C3t3e2+27fvo2QkBCMGTMGTk5O0NfXh7u7u1RRmlcrV67E/v37MW7cOFhZWeH06dNYsWKFzHG//vorbt++jTFjxqBq1arw9fXFlClToKurKzUuODw8HH/++SeGDx8OHR0drFixAmPHjsX58+dzHUInz7Rp09C7d28MGjQIW7ZswdixY9GlSxckJCRgyZIlCAgIwNq1a1GjRg106NABABAWFobKlSujQ4cO0NLSwqNHj7B27VokJiZi7NixUo+/evVquLi4YPXq1bhz5w7Wrl2LihUrok+fPnLzuLm5IeGrnnofPnzAb7/9hsqVKwMAkpOTkZ6ejokTJ8LAwAChoaHYtGkTRo8ejT179gDI6uI9fPhw1KtXT9LVu2JF+T0hvb29MX78eLRr1w6TJ0/Gy5cvsWrVKoSGhuKv/8wp4+bmhk6dOmH9+vXw8vLC8uXLUbNmTTRp0iRP15pFNZVIKirK0NGR/vIRG/sRYnEq1FRlfy3U1LK2pcgpGOW5ezdr5tHr15/hypXH2LZ9HJKSUnDi+LVvTF48qKqqQE9PT2pbVFQ0kpNToCbnxoPapw/xz4Xj9xIZGYWrftcBAJ6ePhgxciB27FgHV9duxXaisuTkZKipyX6p+XzDITk5We55KZ+2q8n5QqT+qZhLyeZcIOtu+r5duzF/0ULY1KolM8v43dtflvs5ffIkznz6QrJ0wcKcXk6xIU5JgYqc66r66Xql5vG9V62eLfrNn4kHl/1xYs1mqX1xEVHYMHYaBi2ei1//XgMASIpPwIGFKzFo0VykfDXD9Y8iI0UMJTnX9fMX84xcuij/13tPb9T8dRQMG9j9kEV1ekoKlOR88VX+dL3SkuVfL5GyEhpOG4MXp70Q+SBvS9klR8Ug9FrWfABvvC6h1pA+cN20GMc6DixxE5XRFxnZvAc//x7n93c20us8Ko0ZAz27+pKi2rB5c2jb2ODegP7fHlgA7u7uUFdXh6urK1RVVdGqVSucPHkSHz9+lBlGlZOYmBj873//w7BhwzBiRNZkmD/99BN++eUXfPjwQXKcv78/fHx8sG3bNjg5OQEAGjdujPDwcKxdu1aqqI6NjcXevXtRvXpWN31NTU30798fAQEBMpOp5cUvv/yCvn37AgDKlCmDDh064P79+zj4qSfaTz/9BB8fH3h4eEiKagcHBzg4OADIatW3s7NDcnIy9u7dK1NU165dG7Nnz5a8pmvXrsHT0zPborpatS9DhlJSUvDHH3+gSpUqmDFjBgDAwMAA8+bNkxyTlpaG8uXLo2/fvnj16hUqV64MKysrqKmpwcjICHXq1Mnx9a9btw516tSR3Oho0qQJNDU1MXfuXDx58gQ1a34ZtuXq6opx48ZJrsHFixfh6enJopooJ9bWFbFy9RCpbX17L0dkZDwMDGQnefm85FVkRLzMvtyEvovC82ehaNHC9ocpquvWrY09e6ULjubNOiI8PALGJrJdy0w+dRENCwsv1FyeHj6YNGkMXFya4GAxXTc4PCwMZUxNZbYbf5o8JuyrD+KvxcTEICU5RXJcfs79LDT0HQBAT18/x+Pi4uLgf9UPHTp3VpiiOi48Qm73a12jrO62MeGywxL+q1zNahi1bgnePX+JLRNnIUPOMILnt+5idqvuKFejKtQ1NRD85Dn0Pr+/37z9xldR/KRERMrt4q3+6bqm5OG6/lfyhzCo6v6Yk0olRUShlJzrVerT9UqUM0QBAKq2bwld8/Lw+3M1tM2kh4CoamlC26wMkqJikJ7DzaE35/+F3bjBqNDUEU+Pnv6GV0GKTBwZCTU570FVw6z3oDgi/7+z4rAwqHz1O1tx1BhEXbyAzLRUqH/6PFPWzvrupGZiApGKitwu6N9TTi3ROUlLS4OHhwecnZ2ho5P1mjp06ICDBw/i/Pnz6Ny5c54f6+nTp0hOTkbLli2ltru6uuLGVy34V65cgb6+Pho1aiTV+8vR0RG///470tPToaycNRGuiYmJpKAGvhShH3L5fM9O48aNJf82NzcHADRq1EjqmMqVK+PVqy/L0KWkpGDz5s04deoUQkNDpcab//fGw+ebBJ9VrVoV/v7+eco2a9YsBAcH4+jRo1K9DI8fP46dO3fizZs3SPxqboDXr19LWrTz4uPHj3j06BGmTZsmtb1t27aYO3cubt26JVVUf/1aRCIRqlativfv3+f5+VhUU4n04kUopkzeIbUtKioBL56/R63alSASiaQm27KwLI+kJDGCg/P/YQQAauoqclvAFdXjx88wcOAYqW3h4ZF4/Ogp7OrXlbl+tW1tkJiYhFevCrfo+Nzaq1OMZ799/PAhGjo4QEtbW2qyMttPd1sfPXwo97zMzEw8ffIYNrVqyeyrXacO3r55I3cc19cqfOoeFRUlO+bzvzTUNSRfOBRB0ONnqNGgHjS0SklNVla5dtb45+DHz3I836hCOYzfvBLxUdFYN3Jyjq3OmRkZUo9n6WAPAHh0Nfs1xhVV/NPnKG1XF8papaQmK9OztgQAxD19nu/H1CxrWqDzFEHUkxcwrV8HqlqlpCYrM6plIdkvj3ZZEyirqqLdrjUy+6p1cEW1Dq7wmeiGtxf8sn1u5U9//9R08t7SRj+exOfPoFe3LpRLlZKarEz70ySYic9z/lsoj7ppWXx89qUHhXqZMlBv6Qqjlq4yx9betgMfnz1D4JBBBUhf+K5cuYKoqCg0a9YMcXFZS/3VqFEDxsbGcHd3z1dRHR6e1VBgaCg9V4LRf8atR0dHIyYmBtbW0vNxfP04pp9uTuj+Z9WNz12+C7oyytef4597ycl7jq+HpS1btgyHDx/GmDFjYGNjAx0dHXh7e2Pjxo1ISUmRKqr/+z3hv4+Vna1bt+LMmTPYtm2b1MRi58+fx7Rp09CrVy9MnDgR+vr6CA8Px5gxY/J9DeLj45GZmSnz/0dHRwdqamqI/c+ycfJey9djuXPz43zLJ8qHhIRk3JYzG/e//96Hc1Mb/PSTlWSdal3dUnB2toH/1cdITf3SclXWLGt24NB3WQWKkpISSpVSQ0KCdBfcmhblUKVKGXh738OPIi4uXtLt+msenj5o3aYFXF2bSdapLl1aD61bu+DChUtSdzsrVCgHAAgqwEy1pUvrITpadg3NHj06AQDu33+U78csKh5nzmLIiBHo1bePZJ1qVTU1dO3RA3dv38H70KxlwcqamUFTUxMvX3x5n3qeOYvfZkyHTa1aklnAK1epgkaOjpLHAoDSBgaI/k/hrKWlhQGDByMqMhIPvppB3MDQEFH/aVEoV748HBo74v49xXnP3j53Aa6Df8ZPPTpJ1qlWUVWFY5d2eBlwH9HvsyZzK122DNQ0NPDh1RvJubpGBvh1y2pkZmRi7fCJUjN+50a7tD5ch/yC4CfP8PiqMGMLC9MHn39h3q83ynduL1mnWqSqCrP2rRET+BApn3qfaJQxgZKGOhLfBEnOVdXXQ2qM9O9phW6doGZQGhFXZf9+/Ahen78EmwE9UaNbW8k61UqqqqjeqRXC7z1C4oes66VlagwVDQ3Evs66Xq88LsotuJuvmoegS9fw7NgZhAdmzbiurq+LlBjZdb9rdGkDAIjIY/dx+jFFXbwIsz59YdKxk2SdapGqKozbtkX8gwcQf5rYUs2kDJQ01JH89svNbhU9faTFxkg9XpnOXaBaujRirn3pafdk5gyZ5zV0cYGRSws8//MPiMNlJ9QsLj5PDjZjxgxJl+PPoqOjERkZKVOEZcfYOKt3VGRkJMp8NVFoxH96A+jp6cHAwABbtmyR+zgGBgZ5zv95uNd/Zyv/fIPge/Dw8ECvXr0wfPhwyTZ5y1cVlK+vL1auXIlp06ZJupl//dyWlpZSk41dv16wzwsdHR2IRCKZhoT4+HiIxWKZYYzfikU10Vf+9X2Ahw/eYsq0rqhkboLY2I/o2KkhlJRE2LnTR+rY5Suy7sL+3CdrnIamphoOHJqCixfu4/XrD0hOTkXlymXQqnU9fExIwd7dF6XOd3CoiSpVs9YkVlZWRpUqpvj5l6YAgKt+j/DyZcG6+gjJ08Mbd+7cw6JFc1GtWhVER8egT9/uUFZWwtq/pD9Mdu7aAABwad5Jss3MzBSdOrUFANjYZLWEjRqVNQnFu3ehOHHiLACgY8e26N2nK7y8fBEUFAItrVJwcmoEJ6dG8PH+F/7+xbfF8N7duzjr7o5JU6fC0NAQb16/QZfu3VCufHnMmvqli9KSlSvR0KERalYyl2z735496NGnNzbv2I7tW7ciLTUNA4cOQWREBLZ/NUvlz/37o4WrKy54e+FdyDuYmJiga8+eMCtnhqkTJ0p9GJ/y9MBVPz88fvAQsbGxMK9sjm69ekFFVRUrliwpkmvyPbwOfIhbHt7oPGEUdAxLI+xtCBw6tYGhWVnsnrNIctyghXNQo0E9jLR2lGwbt3kljCuWg+e2vahazxZV69lK9sVHRuHRV8XypJ3r8TLgPsLfBkPXyBA/9egI9VKlsH70bzJLyf0IYh88wnuvi6g+ZhjUDEojMSgEZu1aQdPMFA8XLJMcZ/P7DBjY1cG5Bs0k25qcPID35y8g4cUrZKSIoV+nFkxbNkPck2cIPvZjrgsbcf8xXp3zhd24IdAw0Ed80DtU7eAK7bJlcOX3L5MX/fTnNJjWt8XOOlndRmNfB0kK7P9KCHkv1UJdtZ0LanZvj7cX/BAfEgrVUqVg5lgf5Rzs8PbiVby/cbdQX2NxtffMVcR9TEJYVFbL0oWbj/E+MuumTr+2jtDRkj8J5I8m4dFDRPr4oMLwEVDV10dySAiMW7eGumlZvFyyWHJctVmzoVu3LvybfOnyWvfwEUT6eCPx5UtkisXQqVUbhi4u+Pj0qdS619GXZWfK1vrUZTnmmj/SYmVvehcHSUlJ8Pb2RosWLdC/v/R48IiICEyaNAlnzpyRzESdmxo1akBDQwPnz5+H1VfLYZ47d07qOEdHR/z9999QVVWFhYXFN70GQ0NDqKqq4sVXN9zFYrFUd/NvlZKSIjUpWnp6Ok6f/j5DSl6+fInJkyejQ4cOGDhwoMz+5ORkmQnZ5M2SrqqqmmvLtZaWFiwtLeHh4SH1XGfPZn2XtLOzy/8LyAGLaqKvZGRkYsb03RgxsjW6dG0ENTVVPHkSgqWLjyI4KOeu3ykpqThz+hbq1K2Mn5pYQ11dBZGR8bjgcw9791zEhw8xUsf/1MQarVrXk/xcvYYZqtcwAwBEhMcqZFGdkZGB4cMmYOq08ejXvxfU1dURGPgQM6bPw6uvWgazU768GSZMHCW17fPP167dkhTVt27dRd26tdCunSuMjAyQlpaOV6/eYOHCldi759D3f2Hf2dRJkzFhcgg6du0KPV09PHn8CCMHD8HNXO7Gfvz4Ef169cbMuXMwauxYKCkp4Zq/PxbN/0OqZfr2zZuoa1cP3Xv3hr6+PpKSknDvbgBmTZ0Cf7+rUo+5f+8+NG3eDD85O0NLSwtRkZG48u8lbF6/Hk+fPCmU119Ydsz4Ax3HvUfDDq1RSlcHIU9fYP2YKXh+626O51WwqAEAaDVEdrmxp9dvSxXVbx8+gZ1rc+iXMUJSQiIeX72Ok2u3IiL43Xd9LcXJ/d8XotqIwTBr0xIqOjpIeP4CdybNRPSdnHsyhHp4Qb+2Dco0awIldTUkhX7A6z0H8HLHXmQUsCujIrg8ewk+jhmIqu1aQF1XB1HPXsJr/Bx8uC27xnxBfLjzAMa21qjcuhk0DUsjIz0dsa+DcH35Rjzaf/y7PIci2n7iEkLCYyQ/n/N/gHP+WT3OOjrXLTFFNQA8X/gnKnwYCqNWraCirYPEly/wZNpUxAcE5HhexPlz0LGpBQPnplBSU0PKh/d4t/9/CNm964f4nfX29kZiYiL69euHhg0byuz/+++/4e7unueiWl9fH71798bWrVuhoaEhmf377VvpoW6NGzdGs2bNMHToUAwdOhQ1a9ZEUlISnj9/jjdv3mDBggV5fg1KSkpo2bIl9u3bh0qVKqF06dLYu3cvMjMzIRKJ8vw4OXF0dMThw4dRrVo1lC5dGv/73//y1KU7L0aNGgUNDQ1069YNd+/elWzX1tZGtWrV4OjoiPnz52P9+vWoW7cufH19cfXqVZnHqVKlCvz9/XHlyhXo6uqifPnyKC1nPfWxY8dizJgx+O2339CxY0e8evUKq1atQqtWraTGU38Poswf8dY6/XBcms0WOoLCCw7xFDqCYksp3EnWSoJm2mZCR1B4XbV+vGW7ito7MdsTvsXAfSOFjqDw/EetEjqCwmv07+V8nzNy5Eg8efIEPj4+cgvQXbt2YeHChTh//jyUlJTg4uKCNWvWoHXr1tk+plgsxtKlS3HixAlkZGSgZcuWcHBwwNSpU+Ht7S0ZLywWi7FlyxacOnUKISEh0NHRQfXq1dG1a1fJOO7p06fj/v37cHd3lzx+XFwc7O3tsWjRInTtmrV8Y1RUFObMmQN/f39oaWlhyJAhCA4Ohre3N3x8snpVHjt2DDNmzMDVq1elupfXrFkTU6dOxZAhXybr/e/zRkREwM3NDVevXoWmpia6dOmCSpUqYfbs2ZLHCw4Olnt9FixYIJVj7dq12L59O+7cuSN5fnkaNGiAPXv2ID09HcuXL8fx48eRkpICJycnDBkyBD179pR6rmfPnuH333/Ho0eP8PHjR8n1ad68OZo2bYq5c+dKHtvT0xPr16/Hy5cvoa+vj7Zt22Ly5MmSrvTXrl1D//79ceTIEdT6at6a0aNHIz4+XrKUV25YVJNCYFH97VhUfyMW1d+MRfW3Y1H97VhUfxsW1d+ORfW3K0hRTVSYlIQOQERERERERKSoWFQTERERERERFRCLaiIiIiIiIqICYlFNREREREREVEAsqomIiIiIiIgKiEU1ERERERERUQGxqCYiIiIiIiIqIBbVRERERERERAXEopqIiIiIiIiogFhUExERERERERUQi2oiIiIiIiKiAmJRTURERERERFRALKqJiIiIiIiICohFNREREREREVEBsagmIiIiIiIiKiAW1UREREREREQFxKKaiIiIiIiIqIBYVBMREREREREVEItqIiIiIiIiogJiUU1ERERERERUQCyqiYiIiIiIiAqIRTURERERERFRAbGoJiIiIiIiIiogFtVEREREREREBcSimoiIiIiIiKiAWFQTERERERERFRCLaiIiIiIiIqICYlFNREREREREVEAsqomIiIiIiIgKiEU1ERERERERUQGxqCYiIiIiIiIqIBbVRERERERERAWkInQAorxITAwWOgKVcA5aZYSOoPAsVbSEjqDwlESpQkdQeA/TxUJHUGj+o1YJHUHhNdo4UegIRPSdsaWaiIiIiIiIqIBYVBMREREREREVEItqIiIiIiIiogJiUU1ERERERERUQCyqiYiIiIiIiAqIRTURERERERFRAbGoJiIiIiIiIiogFtVEREREREREBcSimoiIiIiIiKiAWFQTERERERERFRCLaiIiIiIiIqICYlFNREREREREVEAsqomIiIiIiIgKiEU1ERERERERUQGxqCYiIiIiIiIqIBbVRERERERERAXEopqIiIiIiIiogFhUExERERERERUQi2oiIiIiIiKiAmJRTURERERERFRALKqJiIiIiIiICohFNREREREREVEBsagmIiIiIiIiKiAW1UREREREREQFxKKaiIiIiIiIqIBYVBMREREREREVEItqIiIiIiIiogJiUU1ERERERERUQCyqiYiIiIiIiAqIRTURERERERFRAbGoJiIiIiIiIiogFtVEREREREREBaQidACi4kZbuxTGjOsJZ+d60NBQx8OHL/HXmgN4+uRNjueJRCK0adsYTZvaoUbNitDV1ca7d+HwOn8N/9vnAbE4Ver4q9d2yn2cDesPY8/u09/r5RQ5HR1tTJk6Hi1bNoWGhgYC7z3A4sWr8fDhk1zPrVXbCl27dEBtW2vUrFkdqqoqqFnDXuY4dXV1zJ07BbVtbVC2bBkoKSkhKCgYR4+cwv/+dxhpaemF8dIKlYqqKrqMGw7Hjm2gpauDoKfPcWzNZjy4ej3H8+xaNEWDNi1Q2cYKekaGiHr/AQG+l3Fy43YkxifIHK9RqhQ6jhoM+1Yu0DcxQkJ0DJ7fvY+tM36HODmlsF6eYJRVVdFozABYtGsBDV1t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z/xuwufvvXj/7Ms1MalqDhU1NWgbqqHnH9NlHufg7EUKW1QDwPOFf6LCh6EwatUKKto6SHz5Ak+mTUV8QECO50WcPwcdm1owcG4KJTU1pHx4j3f7/4eQ3bvyPcleSbX9xCWEhMdIfj7n/wDn/LMmzuvoXPeHK6qbNm2K2rVrY8qUKZg8ebJk9u+wsDD89Zd0jwVDQ0OMHDkS48ePBwCsWbMGZcqUQdeuXfP8fAYGBvjll1+wbds2qKmpoU6dOvD19YW7uzvmzJkDZWVlxMfHY8iQIejUqRMqV66M1NRU7NmzB7q6urCyssp1PwlHlPn1wEeiYsqh4UChIyi8qOgHuR9E2XJQ4WiZb1VXVVfoCArPWkPxltorbs4l8mvPt+haWjF7UhUnjTZOFDqC4rPuVqDTli1bhiNHjuDapyEB0dHRWLp0KXx8fJCYmAhra2tMmjQJDRo0kJzTr18/lCpVCq6urli/fj3Cw8Ml61RXrVo12+cKDg6Gi4sL1qxZI5mcLCMjAxs3bsSRI0cQHh6OcuXKYdCgQZLJzsRiMebPn4+bN28iNDQUGhoasLGxwa+//oratWvnup+Ew6KaFAKL6m/HovrbsKj+diyqvx2L6m/HovrbsKj+diyqv4MCFtVjx47Fu3fvcOzYse8ciEo6dv8mIiIiIqIf1qNHj3D9+nVcvHhRskY00ffEopqIiIiIiH5YM2fORGxsLAYNGoQhQ4YIHYd+QCyqiYiIiIjoh/XPP//kfhDRN+AgQSIiIiIiIqICYlFNREREREREVEAsqomIiIiIiIgKiEU1ERERERERUQGxqCYiIiIiIiIqIBbVRERERERERAXEopqIiIiIiIiogFhUExERERERERUQi2oiIiIiIiKiAmJRTURERERERFRALKqJiIiIiIiICohFNREREREREVEBsagmIiIiIiIiKiAW1UREREREREQFxKKaiIiIiIiIqIBYVBMREREREREVEItqIiIiIiIiogJiUU1ERERERERUQCyqiYiIiIiIiAqIRTURERERERFRAbGoJiIiIiIiIiogFtVEREREREREBcSimoiIiIiIiKiAWFQTERERERERFRCLaiIiIiIiIqICYlFNREREREREVEAsqomIiIiIiIgKiEU1ERERERERUQGxqCYiIiIiIiIqIBbVRERERERERAUkyszMzBQ6BBERERER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\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "df4 = df[columns2]\n",
        "df4.columns = columns2_natural\n",
        "clustermap1 = sns.clustermap(data=df4[columns2_natural].corr(),annot=True,center=0)\n",
        "clustermap1.ax_row_dendrogram.set_visible(False)\n",
        "clustermap1.ax_col_dendrogram.set_visible(False)\n",
        "clustermap1.fig.suptitle('Clustermap of statement correlations for Q3&4')"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "978795c6",
      "metadata": {
        "papermill": {
          "duration": 0.030496,
          "end_time": "2023-05-01T19:26:26.654804",
          "exception": false,
          "start_time": "2023-05-01T19:26:26.624308",
          "status": "completed"
        },
        "tags": [],
        "id": "978795c6"
      },
      "source": [
        "**insight:**\n",
        "\n",
        "We can see two major groups of responses: those that believe that AI will improve problem solving and increasing the economy, and another group that is concerned about job losses and major concerned about the structuring of society."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "ce69872d",
      "metadata": {
        "papermill": {
          "duration": 0.02533,
          "end_time": "2023-05-01T19:26:26.705799",
          "exception": false,
          "start_time": "2023-05-01T19:26:26.680469",
          "status": "completed"
        },
        "tags": [],
        "id": "ce69872d"
      },
      "source": [
        "**3&4iv: what are the thoughts of people with high AI knowledge ratings?**\n",
        "\n",
        "If we accept a high AI knowledge rating is 8 or above, we can create a dataframe showing the means of each statement for people in this group and those with a rating of 7 or below for each statement and combining the two dataframes together. Also differences have been included between the two groups."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 25,
      "id": "40e4f942",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:26.760557Z",
          "iopub.status.busy": "2023-05-01T19:26:26.759353Z",
          "iopub.status.idle": "2023-05-01T19:26:26.781081Z",
          "shell.execute_reply": "2023-05-01T19:26:26.779496Z"
        },
        "papermill": {
          "duration": 0.05198,
          "end_time": "2023-05-01T19:26:26.784029",
          "exception": false,
          "start_time": "2023-05-01T19:26:26.732049",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "40e4f942",
        "outputId": "cb28f6ce-c50c-463e-d284-4a6375655703"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                          0-7  8-10  Difference\n",
              "Q3#1.AI_dehumanization   2.61  2.20       -0.41\n",
              "Q3#2.Job_replacement     3.24  3.05       -0.19\n",
              "Q3#3.Problem_solving     4.10  4.55        0.45\n",
              "Q3#4.AI_rulling_society  2.41  2.50        0.09\n",
              "Q4#1.AI_costly           3.63  3.35       -0.28\n",
              "Q4#2.Economic_crisis     2.55  2.60        0.05\n",
              "Q4#3.Economic_growth     3.59  3.90        0.31\n",
              "Q4#4.Job_loss            3.41  3.35       -0.06"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-77ba0270-22c8-428b-9021-de2bb4167459\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0-7</th>\n",
              "      <th>8-10</th>\n",
              "      <th>Difference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Q3#1.AI_dehumanization</th>\n",
              "      <td>2.61</td>\n",
              "      <td>2.20</td>\n",
              "      <td>-0.41</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Q3#2.Job_replacement</th>\n",
              "      <td>3.24</td>\n",
              "      <td>3.05</td>\n",
              "      <td>-0.19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Q3#3.Problem_solving</th>\n",
              "      <td>4.10</td>\n",
              "      <td>4.55</td>\n",
              "      <td>0.45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Q3#4.AI_rulling_society</th>\n",
              "      <td>2.41</td>\n",
              "      <td>2.50</td>\n",
              "      <td>0.09</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Q4#1.AI_costly</th>\n",
              "      <td>3.63</td>\n",
              "      <td>3.35</td>\n",
              "      <td>-0.28</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Q4#2.Economic_crisis</th>\n",
              "      <td>2.55</td>\n",
              "      <td>2.60</td>\n",
              "      <td>0.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Q4#3.Economic_growth</th>\n",
              "      <td>3.59</td>\n",
              "      <td>3.90</td>\n",
              "      <td>0.31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Q4#4.Job_loss</th>\n",
              "      <td>3.41</td>\n",
              "      <td>3.35</td>\n",
              "      <td>-0.06</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-77ba0270-22c8-428b-9021-de2bb4167459')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-77ba0270-22c8-428b-9021-de2bb4167459 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-77ba0270-22c8-428b-9021-de2bb4167459');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-596b4ec1-ab82-4430-832f-b6dddf8dc1d0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-596b4ec1-ab82-4430-832f-b6dddf8dc1d0')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-596b4ec1-ab82-4430-832f-b6dddf8dc1d0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ],
      "source": [
        "z2 = pd.DataFrame(df[df['Q1.AI_knowledge']>7][columns2].mean().round(2),columns=['8-10'])\n",
        "z1 = pd.DataFrame(df[df['Q1.AI_knowledge']<8][columns2].mean().round(2),columns=['0-7'])\n",
        "z1['8-10'] = z2\n",
        "z1['Difference'] = z1['8-10']-z1['0-7']\n",
        "z1"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "a7b20296",
      "metadata": {
        "papermill": {
          "duration": 0.025399,
          "end_time": "2023-05-01T19:26:26.835730",
          "exception": false,
          "start_time": "2023-05-01T19:26:26.810331",
          "status": "completed"
        },
        "tags": [],
        "id": "a7b20296"
      },
      "source": [
        "**insight**\n",
        "\n",
        "We can see students in the group that rated themselves more highly tended to have overall more positive opinions about AI including very high agreement that AI will lead to better problem solving and disagreeing more that AI will lead to dehumanization."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "f576716f",
      "metadata": {
        "papermill": {
          "duration": 0.025313,
          "end_time": "2023-05-01T19:26:26.887715",
          "exception": false,
          "start_time": "2023-05-01T19:26:26.862402",
          "status": "completed"
        },
        "tags": [],
        "id": "f576716f"
      },
      "source": [
        "<h3>Question 5</h3>\n",
        "<i>\n",
        "When you think about AI do you feel:\n",
        "<li>Curiosity (1)\n",
        "<li>Fear (2)\n",
        "<li>Indifference (3)\n",
        "<li>Trust (4)\n",
        "   </i>\n",
        "<br>\n",
        "These are intuitively connected to the previous questions so for this question the distribution of feelings was analyzed."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "9a57d3af",
      "metadata": {
        "papermill": {
          "duration": 0.025389,
          "end_time": "2023-05-01T19:26:26.939488",
          "exception": false,
          "start_time": "2023-05-01T19:26:26.914099",
          "status": "completed"
        },
        "tags": [],
        "id": "9a57d3af"
      },
      "source": [
        "**What are the distributions of feelings about AI?**\n",
        "\n",
        "A pie chart has been used to visulize the distribution of responses."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 26,
      "id": "a3923236",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:26.995490Z",
          "iopub.status.busy": "2023-05-01T19:26:26.994691Z",
          "iopub.status.idle": "2023-05-01T19:26:27.127348Z",
          "shell.execute_reply": "2023-05-01T19:26:27.125938Z"
        },
        "papermill": {
          "duration": 0.165547,
          "end_time": "2023-05-01T19:26:27.131826",
          "exception": false,
          "start_time": "2023-05-01T19:26:26.966279",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 545
        },
        "id": "a3923236",
        "outputId": "71cf7980-d35c-4f9f-ec43-a5ec891b5bf4"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "([<matplotlib.patches.Wedge at 0x7ced4e6df0a0>,\n",
              "  <matplotlib.patches.Wedge at 0x7ced4e6defe0>,\n",
              "  <matplotlib.patches.Wedge at 0x7ced4e6dfa60>,\n",
              "  <matplotlib.patches.Wedge at 0x7ced4e6dfe20>],\n",
              " [Text(0.9263109380132525, -0.5932520932259815, 'Curiosity'),\n",
              "  Text(-1.0998361291309535, -0.01898654940320904, 'Fear'),\n",
              "  Text(-0.8106485238439161, 0.7435381434665473, 'Indifference'),\n",
              "  Text(-0.2632470403378873, 1.068036046092707, 'Trust')])"
            ]
          },
          "metadata": {},
          "execution_count": 26
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "plt.pie(df['Q5.Feelings'].value_counts(ascending=False)[[1,2,3,4]],startangle=90,\n",
        "        counterclock=False,labels=['Curiosity','Fear','Indifference','Trust'], colors = ['firebrick', 'silver', 'maroon','mistyrose'])"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "8e203193",
      "metadata": {
        "papermill": {
          "duration": 0.025752,
          "end_time": "2023-05-01T19:26:27.218546",
          "exception": false,
          "start_time": "2023-05-01T19:26:27.192794",
          "status": "completed"
        },
        "tags": [],
        "id": "8e203193"
      },
      "source": [
        "**insight**\n",
        "\n",
        "Clearly the most important feeling most students feel about AI in general is curiosity which is a positive finding."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "1c5799df",
      "metadata": {
        "papermill": {
          "duration": 0.025991,
          "end_time": "2023-05-01T19:26:27.270684",
          "exception": false,
          "start_time": "2023-05-01T19:26:27.244693",
          "status": "completed"
        },
        "tags": [],
        "id": "1c5799df"
      },
      "source": [
        "<h3> Question 6 </h3>\n",
        "<i>In which areas do you think AI would have a big impact?\n",
        "<li>Education\n",
        "<li>Medicine\n",
        "<li>Agriculture\n",
        "<li>Constructions\n",
        "<li>Marketing\n",
        "<li>Public administration\n",
        "<li>Art\n",
        "    </i>\n",
        "There are 7 different possible areas for students to choose from with many different possible combinations. Because there are many different possible combinations of answers for question 6 it makes sense to spend more time looking into the results of this question.\n",
        "\n",
        "Some good questions are:\n",
        "<li> What percentages of students think AI will have a big impact on each area? 6i\n",
        "<li> How many areas do students think will be affected from 0 to 7? 6ii\n",
        "<li> Is there connection between AI knowledge rating and the areas students think will be affected? 6iii\n",
        "<li> What are the opinions of students that don't think AI will have a big impact on education? 6iv"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "c98d0ad2",
      "metadata": {
        "papermill": {
          "duration": 0.025962,
          "end_time": "2023-05-01T19:26:27.323097",
          "exception": false,
          "start_time": "2023-05-01T19:26:27.297135",
          "status": "completed"
        },
        "tags": [],
        "id": "c98d0ad2"
      },
      "source": [
        "**6i: What percentages of students think AI will have a big impact on each area?**\n",
        "\n",
        "In order to understand this best I created a dataframe of the areas versus the percentages that hold this belief and afterwards created a barplot of the results."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "3ce9b416",
      "metadata": {
        "papermill": {
          "duration": 0.026134,
          "end_time": "2023-05-01T19:26:27.375910",
          "exception": false,
          "start_time": "2023-05-01T19:26:27.349776",
          "status": "completed"
        },
        "tags": [],
        "id": "3ce9b416"
      },
      "source": [
        "**creating a table of the results**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 27,
      "id": "dda61dba",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:27.430251Z",
          "iopub.status.busy": "2023-05-01T19:26:27.429750Z",
          "iopub.status.idle": "2023-05-01T19:26:27.447112Z",
          "shell.execute_reply": "2023-05-01T19:26:27.445769Z"
        },
        "papermill": {
          "duration": 0.047974,
          "end_time": "2023-05-01T19:26:27.450035",
          "exception": false,
          "start_time": "2023-05-01T19:26:27.402061",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "dda61dba",
        "outputId": "0beebf5f-a1d5-43d7-c5c5-ea96d5a86605"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "               Percent\n",
              "Area                  \n",
              "Medicine         80.2%\n",
              "Education        67.0%\n",
              "Construction     54.9%\n",
              "Agriculture      50.5%\n",
              "Administration   38.5%\n",
              "Marketing        36.3%\n",
              "Art              13.2%"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9e759cfb-08ff-4d38-b95f-997848247902\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Percent</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Area</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Medicine</th>\n",
              "      <td>80.2%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Education</th>\n",
              "      <td>67.0%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Construction</th>\n",
              "      <td>54.9%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Agriculture</th>\n",
              "      <td>50.5%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Administration</th>\n",
              "      <td>38.5%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Marketing</th>\n",
              "      <td>36.3%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Art</th>\n",
              "      <td>13.2%</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9e759cfb-08ff-4d38-b95f-997848247902')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9e759cfb-08ff-4d38-b95f-997848247902 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9e759cfb-08ff-4d38-b95f-997848247902');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-561aa1b6-719d-4f9f-91a6-3949d3475fe3\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-561aa1b6-719d-4f9f-91a6-3949d3475fe3')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-561aa1b6-719d-4f9f-91a6-3949d3475fe3 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 27
        }
      ],
      "source": [
        "columns4 = ['Q6#1.Education','Q6#2.Medicine','Q6#3.Agriculture','Q6#4.Constructions','Q6#5.Marketing',\n",
        "            'Q6#6.Administration','Q6#7.Art']\n",
        "columns4_natural = ['Education','Medicine','Agriculture','Construction','Marketing','Administration','Art']\n",
        "list6 = []\n",
        "count_df=len(df.index)\n",
        "for i,j in enumerate(columns4):\n",
        "    list6.append([columns4_natural[i],f'{round((df[j].sum()/count_df)*100,1)}%'])\n",
        "df6 = pd.DataFrame(list6)\n",
        "df6.columns = ['Area', 'Percent']\n",
        "df6.set_index(['Area'],inplace=True)\n",
        "df6.sort_values(by=['Percent'],ascending=False,inplace=True)\n",
        "df6"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "af765bc6",
      "metadata": {
        "papermill": {
          "duration": 0.026977,
          "end_time": "2023-05-01T19:26:27.504272",
          "exception": false,
          "start_time": "2023-05-01T19:26:27.477295",
          "status": "completed"
        },
        "tags": [],
        "id": "af765bc6"
      },
      "source": [
        "**removing the percent sign and changing to float type to prepare dataframe for a barplot**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 28,
      "id": "357155d0",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:27.560513Z",
          "iopub.status.busy": "2023-05-01T19:26:27.559692Z",
          "iopub.status.idle": "2023-05-01T19:26:27.565749Z",
          "shell.execute_reply": "2023-05-01T19:26:27.564811Z"
        },
        "papermill": {
          "duration": 0.037054,
          "end_time": "2023-05-01T19:26:27.568001",
          "exception": false,
          "start_time": "2023-05-01T19:26:27.530947",
          "status": "completed"
        },
        "tags": [],
        "id": "357155d0"
      },
      "outputs": [],
      "source": [
        "df6['Percent']=df6['Percent'].str.rstrip('%').astype(float)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "c80c3878",
      "metadata": {
        "papermill": {
          "duration": 0.026186,
          "end_time": "2023-05-01T19:26:27.620830",
          "exception": false,
          "start_time": "2023-05-01T19:26:27.594644",
          "status": "completed"
        },
        "tags": [],
        "id": "c80c3878"
      },
      "source": [
        "**barplot of the results**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 29,
      "id": "722bab98",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:27.676676Z",
          "iopub.status.busy": "2023-05-01T19:26:27.675824Z",
          "iopub.status.idle": "2023-05-01T19:26:28.011090Z",
          "shell.execute_reply": "2023-05-01T19:26:28.010188Z"
        },
        "papermill": {
          "duration": 0.365877,
          "end_time": "2023-05-01T19:26:28.013423",
          "exception": false,
          "start_time": "2023-05-01T19:26:27.647546",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 577
        },
        "id": "722bab98",
        "outputId": "608186b3-6774-411a-b53f-b10dfd9433b0"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAmsAAAIwCAYAAADZBSzQAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAAB6o0lEQVR4nO3dd1QU198G8Gd3AREUEHtDEaWoINgANRZEEcUuxoo1irHGaILGrtEkdsWKsZcYawQRFTXGHjX2mFiwAJaodKXuzvuHL/tz3UXpM7jP55ycyMzszncvy+yzM/fekQmCIICIiIiIJEkudgFERERElDWGNSIiIiIJY1gjIiIikjCGNSIiIiIJY1gjIiIikjCGNSIiIiIJY1gjIiIikjCGNSIiIiIJY1gjIiIikjCGNQIA/PHHH+jcuTMcHR1hZ2eHhIQEsUvSqX///ujfv7/YZeSb5cuXw87ODjExMWKXoiUgIAAuLi7Z2tbOzg7Lly/P1X7s7Owwa9asXD1WSt5/b0ZFRcHOzg579+5VL8v8fUvF3r17YWdnhxs3bohdik45qS+/jw2Z+46Kisq35ywq8vL3nBMXLlyAnZ0dwsLCPrptQEAAPDw8Crwmqcr3sJb5Bs/8z9HREV5eXpg1axZevnyZ37srdPfu3cPy5cs/qT/g2NhYjBs3DsbGxpg2bRp++uknFC9ePNfPFxwcjI0bN+ZfgYXsr7/+wvLly/M1sK5evRrh4eH59nwfsm3bNo2A8CHJyclYvnw5Lly4UMBVFSylUolmzZrBzs4OJ0+e1LmNlIMxUUHKyTGhIBT1zwQpMCioJx4zZgyqVKmCtLQ0XL58GTt27MDJkycREhKSpyAgtnv37iEwMBCNGzdGlSpVxC4nX9y4cQOvX7/G2LFj0aRJkzw/X0hICO7evYuBAwfmvTgRXLlyBYGBgejatSvMzMzy5TnXrFkDLy8veHp65svzfciOHTtQqlQpdOvW7aPbJicnIzAwEKNGjYKrq2uu93n9+nUoFIpcPz6vzp8/jxcvXqBy5coIDg5GixYtCr2Gn3/+udD3Sf+T3+3fuXNndOjQAUZGRvn6vGLIyTEByP+/5/z4TJg9ezb0+VbmBRbWmjdvDkdHRwCAr68vLCwssGHDBhw7dgw+Pj55eu7k5OQiHfikJvNMQ8mSJUWuhIqqYsWKibr/AwcOoE6dOujSpQsWL16MN2/ewMTEpFBr+BQ+1Iuy/G5/hUIh6hcQMYn996yLoaGh2CVApVIhPT1dlPYptD5rbm5uAKBx+fC3335Dt27d4OTkhMaNG+Orr77C06dPNR7Xv39/+Pj44ObNm+jbty/q1auHRYsWAQBSU1OxfPlyeHl5wdHREc2aNcOoUaPw+PFj9eNVKhU2btyIDh06wNHREU2aNMG0adMQHx+vsR8PDw8MHz4cly5dQo8ePeDo6IjWrVtj//796m327t2LsWPHAgD8/PzUl3ozLyGFh4dj2LBhaNasGerWrQtPT0+sWLECSqVSqz22bduG1q1bw8nJCT169MClS5d09rlIS0vDsmXL0KZNG9StWxctWrTATz/9hLS0tGy1+6FDh9Rt7OrqigkTJuD58+ca7fvtt98CAHr06AE7OzsEBARk+XxJSUn4/vvv4eHhgbp168Ld3R2DBg3CrVu31M/3+++/Izo6Wt0+mf0MsuoDktlv4f1LcTt37oSnp6dGG+mS3TbK7BsVHh4OHx8f1K1bFx06dMAff/yh3mb58uX46aefAACtW7dWv4bMms+cOYPevXujYcOGcHFxgZeXl/r9mBU7Ozu8efMG+/btUz/f+22cmJiIgIAANGzYEA0aNMCkSZOQnJyssc2ePXvg5+cHd3d31K1bF+3bt8f27ds1tvHw8MDdu3fx559/qveVVT+eqKgouLu7AwACAwPV27/fV+X58+f48ssv4eLiAjc3N/z4449a7+n3H5d5yfHRo0cffV26rFy5Evb29tiyZctHt01JScHRo0fRvn17eHt7IyUlBceOHfvo43T5559/YGdnp/H4mzdvws7ODl27dtXYdujQofD19VX/nJ99pjKPe//88w/69euHevXqoU2bNuq+PX/++Sd8fX3h5OQELy8vnD17VuPx0dHRmDFjBry8vNR/+2PGjMlW9434+Hj06NEDzZs3R0REBIC8HYcuXbqEMWPGoGXLlurHzp07FykpKdluj5SUFEybNg2urq6oX78+vvnmG61juK72j46Ohr+/P5ydneHu7o65c+fi1KlTOo8379N1vMr8nLhw4YL6uNqxY0f1cx05cgQdO3aEo6MjunXrhr///lvjOTP7gUZGRmLIkCFwdnZGs2bNEBgYqHXW6Oeff0avXr3g6uoKJycndOvWLcu+Xb/99ht69OiBevXqoVGj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REQSxrBGREREJGEMa0REREQSxrBGREREJGEMa0REREQSxrBGREREJGEMa0REREQSxrBGREREJGEMa0REREQSxrBGREREJGEMa0REREQSxrBGREREJGEMa0REREQSxrBGREREJGEMa0REREQSxrBGREREJGEMa0REREQSxrBGREREJGEMa0REREQSxrBGREREJGEMa0REREQSxrBGREREJGEMa0REREQSxrBGREREJGEMa0REREQSxrBGREREJGEMa0REREQSxrBGREREJGEMa0REREQSJqmw1r9/f9jZ2en87+DBg+rtdu3aBS8vLzg6OqJTp044ceKEiFUTERERFRwDsQt41/Tp05GUlKSxbNOmTThy5Ajc3d0BAAcPHsTUqVPh7+8PNzc3hIaGYtSoUdi2bRucnZ1FqJqIiIio4EgqrNWsWVNr2ddff42mTZvC0tISALBs2TJ06NAB48aNAwC4ubnhzp07WLFiBYKCggqzXCIiIqICJ6nLoO/766+/EBUVhY4dOwIAIiMj8fDhQ3h7e2ts1759e5w7dw5paWlilElERERUYCR1Zu19ISEhMDExQevWrQEAERERAABra2uN7WxsbJCeno7IyEjY2Njken8GBtrZVaGQdJ7NV/r0WomIiIoKyYa1jIwMHDp0CB4eHjAxMQEAxMfHAwDMzMw0ts38OXN9bsjlMpQqZZrrx38KzMyKi10CERERvUeyYe3MmTOIiYmBj49PoexPpRKQkPBGa7lCIdebEJOQkAylUiV2GURERNliZlZcL64KSTashYSEwMLCAs2aNVMvMzc3BwAkJiaibNmy6uUJCQka63MrI0O/g4pSqdL7NiAiIpIaScbRlJQUhIeHo127djA0NFQvr1GjBoD/9V3LFBERAUNDQ1StWrVQ6yQiIiIqaJIMa8ePH8ebN2/Uo0AzVa1aFdWrV0dYWJjG8tDQULi7u8PIyKgwyyQiIiIqcJK8DBocHIxKlSqhQYMGWutGjx6NCRMmwMrKCq6urggNDcX169exdetWESolIiIiKliSC2vx8fE4deoUBgwYAJlMprXex8cHycnJCAoKwtq1a2FtbY3AwEC4uLiIUC0RERFRwZJcWDM3N8fNmzc/uI2vry98fX0LqSIiIiIi8UiyzxoRERERvcWwRkRERCRhDGtEREREEsawRkRERCRhkhtgQEWLXC6DXK49avdTolIJUKkEscsgIiI9xbBGuSaXy1DKojjkCoXYpRQolVKJ2LhkBjYiIhIFwxrlmlwug1yhwNVVa5D05KnY5RSIEpUqwnnEcMjlMoY1IiISBcMa5VnSk6dIePRI7DKIiIg+SRxgQERERCRhDGtEREREEsawRkRERCRhDGtEREREEsawRkRERCRhDGtEREREEsawRkRERCRhDGtEREREEsawRkRERCRhDGtEREREEsawRkRERCRhDGtEREREEsawRkRERCRhDGtEREREEsawRkRERCRhDGtEREREEsawRkRERCRhDGtEREREEsawRkRERCRhDGtEREREEsawRkRERCRhDGtEREREEsawRkRERCRhkgxr+/btQ5cuXeDo6AhXV1cMHToUKSkp6vXHjx9Hp06d4OjoCC8vL+zZs0fEaomIiIgKjoHYBbxv1apVCAoKgr+/P5ydnREbG4tz585BqVQCAC5duoRRo0ahR48emDx5Ms6fP4/vvvsOpqamaNeuncjVExEREeUvSYW1iIgIBAYGYuXKlWjRooV6uZeXl/rfq1atgpOTE2bNmgUAcHNzQ2RkJJYtW8awRkRERJ8cSV0G3bt3L6pUqaIR1N6VlpaGCxcuaIWy9u3b4/79+4iKiiqMMomIiIgKjaTOrF27dg22trZYuXIltmzZgsTERNStWxeTJk1CvXr18PjxY6Snp6NGjRoaj7OxsQHw9sxclSpVcr1/AwPt7KpQSCrPFqicvla2DRERUcGTVFh78eIFbt68iTt37mD69OkoXrw4Vq9ejcGDB+PIkSOIj48HAJiZmWk8LvPnzPW5IZfLUKqUae6L/wSYmRUXuwTJYtsQEZFYJBXWBEHAmzdvsHTpUtjb2wMA6tWrBw8PD2zduhXNmjUrsH2rVAISEt5oLVco5HrzQZ2QkAylUpXt7dk2REQkJjOz4npx5UNSYc3MzAwWFhbqoAYAFhYWqF27Nu7du4cOHToAABITEzUel5CQAAAwNzfP0/4zMvT7w1ipVOl9G2SFbUNERGKRVBytWbNmlutSU1NhZWUFQ0NDREREaKzL/Pn9vmxERERERZ2kwlqrVq0QFxeH27dvq5fFxsbi1q1bqFOnDoyMjODq6orDhw9rPC40NBQ2NjZ5GlxAREREJEWSugzq6ekJR0dHjBkzBl999RWKFSuGtWvXwsjICH36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0aNHWLlyJaZPn47w8PCCqJGIiPSYPtzZAeDdHShrOQ5rp0+fRufOnfHtt9+ql5UpUwZff/01IiIiUKNGjXwtkIiI9NunfmcHgHd3oA/LcVh7+vQpGjRooLGsQYMGEAQBr169YlgjIqICwTs7kL7K8dQdaWlpKFasmMYyIyMjAEBGRkb+VEVEREREAHI5GjQ6Ohq3bt1S/5yYmAgAePToEczMzLS2r1OnTi7LIyIiItJvuQprS5cuxdKlS7WWz5w5U+PnzNGit2/fzl11RERERHoux2Ft3rx5BVEHEREREemQ47DWtWvXgqiDiIiIiHTI071BiYiIiKhgMawRERERSRjDGhEREZGEMawRERERSRjDGhEREZGEMawRERERSRjDGhEREZGEMawRERERSRjDGhEREZGEMawRERERSRjDGhEREZGEMawRERERSRjDGhEREZGEMawRERERSZikwtrJkyfRr18/uLm5oW7dumjdujXmzZuHxMREje2OHz+OTp06wdHREV5eXtizZ49IFRMREREVLAOxC3hXXFwcnJyc0L9/f1hYWODu3btYvnw57t69i/Xr1wMALl26hFGjRqFHjx6YPHkyzp8/j++++w6mpqZo166dyK+AiIiIKH9JKqx17txZ42dXV1cYGRlh6tSpeP78OcqXL49Vq1bByckJs2bNAgC4ubkhMjISy5YtY1gjIiKiT46kLoPqYmFhAQBIT09HWloaLly4oBXK2rdvj/v37yMqKkqEComIiIgKjiTDmlKpRGpqKm7duoUVK1bAw8MDVapUwePHj5Geno4aNWpobG9jYwMAiIiIEKNcIiIiogIjqcugmVq1aoXnz58DAD777DMsXLgQABAfHw8AMDMz09g+8+fM9bllYKCdXRUKSebZApHT18q2yb/tizK2jW65eZ1sm/zZvijTp9dK2SfJsLZ27VokJyfj3r17WLVqFfz9/bFhw4YC3adcLkOpUqYFug+pMzMrLnYJksW2yRrbRje2S9bYNllj25Aukgxr9vb2AAAXFxc4Ojqic+fOOHr0KGrWrAkAWlN5JCQkAADMzc1zvU+VSkBCwhut5QqFXG/+eBISkqFUqrK9Pdsma2ybrOlL2+S0XQC2TVb0pV2A3L1v9JmZWXG9OBspybD2Ljs7OxgaGuLx48fw8PCAoaEhIiIi8Nlnn6m3yeyr9n5ftpzKyNDvPxClUqX3bZAVtk3W2Da6sV2yxrbJGtuGdJF8HL127RrS09NRpUoVGBkZwdXVFYcPH9bYJjQ0FDY2NqhSpYpIVRIREREVDEmdWRs1ahTq1q0LOzs7GBsb459//sHPP/8MOzs7eHp6AgBGjBgBPz8/zJgxA97e3rhw4QJCQkKwePFikasnIiIiyn+SCmtOTk4IDQ3F2rVrIQgCKleuDF9fXwwZMgRGRkYAgIYNG2L58uVYsmQJdu/ejUqVKmHOnDnw9vYWuXoiIiKi/CepsDZs2DAMGzbso9u1bt0arVu3LoSKiIiIiMQl+T5rRERERPqMYY2IiIhIwhjWiIiIiCSMYY2IiIhIwhjWiIiIiCSMYY2IiIhIwhjWiIiIiCSMYY2IiIhIwhjWiIiIiCSMYY2IiIhIwhjWiIiIiCSMYY2IiIhIwhjWiIiIiCSMYY2IiIhIwhjWiIiIiCSMYY2IiIhIwhjWiIiIiCSMYY2IiIhIwhjWiIiIiCSMYY2IiIhIwhjWiIiIiCSMYY2IiIhIwhjWiIiIiCSMYY2IiIhIwhjWiIiIiCSMYY2IiIhIwhjWiIiIiCSMYY2IiIhIwhjWiIiIiCSMYY2IiIhIwhjWiIiIiCRMUmHt0KFDGDFiBJo3bw5nZ2d07twZu3fvhiAIGtvt2rULXl5ecHR0RKdOnXDixAmRKiYiIiIqWJIKaxs3bkTx4sUREBCAVatWoXnz5pg6dSpWrFih3ubgwYOYOnUqvL29ERQUBGdnZ4waNQpXr14Vr3AiIiKiAmIgdgHvWrVqFSwtLdU/u7u7Iy4uDhs2bMCXX34JuVyOZcuWoUOHDhg3bhwAwM3NDXfu3MGKFSsQFBQkUuVEREREBUNSZ9beDWqZHBwckJSUhDdv3iAyMhIPHz6Et7e3xjbt27fHuXPnkJaWVlilEhERERUKSYU1XS5fvozy5cujRIkSiIiIAABYW1trbGNjY4P09HRERkaKUSIRERFRgZHUZdD3Xbp0CaGhofj2228BAPHx8QAAMzMzje0yf85cn1sGBtrZVaGQfJ7NNzl9rWyb/Nu+KGPb6Jab18m2yZ/tizJ9eq2UfZINa8+ePcNXX30FV1dX+Pn5Ffj+5HIZSpUyLfD9SJmZWXGxS5Astk3W2Da6sV2yxrbJGtuGdJFkWEtISMAXX3wBCwsLLF++HHL5228a5ubmAIDExESULVtWY/t31+eGSiUgIeGN1nKFQq43fzwJCclQKlXZ3p5tkzW2Tdb0pW1y2i4A2yYr+tIuQO7eN/rMzKy4XpyNlFxYS0lJwfDhw5GYmIidO3eiZMmS6nU1atQAAERERKj/nfmzoaEhqlatmqd9Z2To9x+IUqnS+zbICtsma2wb3dguWWPbZI1tQ7pIKo5mZGRg3LhxiIiIwLp161C+fHmN9VWrVkX16tURFhamsTw0NBTu7u4wMjIqzHKJiIiICpykzqzNnDkTJ06cQEBAAJKSkjQmuq1duzaMjIwwevRoTJgwAVZWVnB1dUVoaCiuX7+OrVu3ilc4ERERUQGRVFg7c+YMAOCHH37QWnfs2DFUqVIFPj4+SE5ORlBQENauXQtra2sEBgbCxcWlsMslIiIiKnCSCmvHjx/P1na+vr7w9fUt4GqIiIiIxCepPmtEREREpIlhjYiIiEjCGNaIiIiIJIxhjYiIiEjCGNaIiIiIJIxhjYiIiEjCGNaIiIiIJIxhjYiIiEjCGNaIiIiIJIxhjYiIiEjCGNaIiIiIJIxhjYiIiEjCGNaIiIiIJIxhjYiIiEjCGNaIiIiIJIxhjYiIiEjCGNaIiIiIJIxhjYiIiEjCGNaIiIiIJIxhjYiIiEjCGNaIiIiIJMxA7AKIiIgo9+RyGeRymdhlFCiVSoBKJYhdhmgY1oiIiIoouVyGUhbFIVcoxC6lQKmUSsTGJettYGNYIyIiKqLkchnkCgWurlqDpCdPxS6nQJSoVBHOI4ZDLpcxrBEREVHRlPTkKRIePRK7DCogHGBAREREJGEMa0REREQSxrBGREREJGEMa0REREQSxrBGREREJGEMa0REREQSJqmw9ujRI0ybNg2dO3dG7dq14ePjo3O7Xbt2wcvLC46OjujUqRNOnDhRyJUSERERFQ5JhbW7d+/i5MmTqFatGmxsbHRuc/DgQUydOhXe3t4ICgqCs7MzRo0ahatXrxZusURERESFQFKT4np4eMDT0xMAEBAQgJs3b2pts2zZMnTo0AHjxo0DALi5ueHOnTtYsWIFgoKCCrNcIiIiogInqTNrcvmHy4mMjMTDhw/h7e2tsbx9+/Y4d+4c0tLSCrI8IiIiokInqTNrHxMREQEAsLa21lhuY2OD9PR0REZGZnn5NDsMDLTDokIhqTxboHL6Wtk2+bd9Uca20S03r5Ntkz/bF2Vsm6zp02t9X5EKa/Hx8QAAMzMzjeWZP2euzw25XIZSpUxzX9wnwMysuNglSBbbJmtsG93YLllj22SNbZM1fW6bIhXWCpJKJSAh4Y3WcoVCrjdvkISEZCiVqmxvz7bJGtsma/rSNjltF4BtkxV9aReAbfMhutrGzKy4XpxxK1JhzdzcHACQmJiIsmXLqpcnJCRorM+tjIycHVg/NUqlSu/bICtsm6yxbXRju2SNbZM1tk3W9LltilQcrVGjBoD/9V3LFBERAUNDQ1StWlWMsoiIiIgKTJEKa1WrVkX16tURFhamsTw0NBTu7u4wMjISqTIiIiKigiGpy6DJyck4efIkACA6OhpJSUnqYNa4cWNYWlpi9OjRmDBhAqysrODq6orQ0FBcv34dW7duFbN0IiIiogIhqbD26tUrjB07VmNZ5s+bN2+Gq6srfHx8kJycjKCgIKxduxbW1tYIDAyEi4uLGCUTERERFShJhbUqVarg33///eh2vr6+8PX1LYSKiIiIiMRVpPqsEREREekbhjUiIiIiCWNYIyIiIpIwhjUiIiIiCWNYIyIiIpIwhjUiIiIiCWNYIyIiIpIwhjUiIiIiCWNYIyIiIpIwhjUiIiIiCWNYIyIiIpIwhjUiIiIiCWNYIyIiIpIwhjUiIiIiCWNYIyIiIpIwhjUiIiIiCWNYIyIiIpIwhjUiIiIiCWNYIyIiIpIwhjUiIiIiCWNYIyIiIpIwhjUiIiIiCWNYIyIiIpIwhjUiIiIiCWNYIyIiIpIwhjUiIiIiCWNYIyIiIpIwhjUiIiIiCWNYIyIiIpIwhjUiIiIiCWNYIyIiIpKwIhnW7t+/j0GDBsHZ2RlNmzbFTz/9hLS0NLHLIiIiIsp3BmIXkFPx8fEYMGAAqlevjuXLl+P58+f44YcfkJKSgmnTpoldHhEREVG+KnJh7ZdffsHr168RGBgICwsLAIBSqcTMmTMxfPhwlC9fXtwCiYiIiPJRkbsM+scff8Dd3V0d1ADA29sbKpUKZ86cEa8wIiIiogIgEwRBELuInHB3d0f37t0xYcIEjeWfffYZOnfurLU8uwRBgEql3RQyGSCXy5GakAAhQ5mr55Y6mYECxczMoFKpkJN3A9vmA49j22T9uE+8bXLbLgDbJsvHfeLtArBtPuRDbSOXyyCTycQprBAVucugCQkJMDMz01pubm6O+Pj4XD+vTCaDQpH1L7yYjn1+auTy3J1oZdtkjW2TtU+9bXLbLgDbJiufersAbJsPycvfVFGnv6+ciIiIqAgocmHNzMwMiYmJWsvj4+Nhbm4uQkVEREREBafIhbUaNWogIiJCY1liYiJevHiBGjVqiFQVERERUcEocmGtefPmOHv2LBISEtTLwsLCIJfL0bRpUxErIyIiIsp/RW40aHx8PDp06ABra2sMHz5cPSlux44dOSkuERERfXKKXFgD3t5uavbs2bhy5QpMTU3RuXNnfPXVVzAyMhK7NCIiIqJ8VSTDGhEREZG+KHJ91oiIiIj0CcMaERERkYQxrBERERFJGMMaERERkYQxrBERERFJGMMaERERkYQxrBERERFJGMMaERERkYQxrBHRJyk+Ph6XLl1CcHAw4uPjAQCpqalQqVQiV0ZUdOzfvx+xsbE618XFxWH//v2FW5Ce4h0MiD4Br169QmpqqtbySpUqiVCNuARBwOLFi7FlyxYkJydDJpNh9+7dqFOnDr744gvUq1cPo0aNErtM0URERODIkSN49uyZ1ntGJpNh7ty5IlVGUuTg4ICdO3fCyclJa93Nmzfh6+uL27dvi1CZfjEQuwDS9Mcff+DGjRt49uwZRowYgUqVKuHixYuwsrJC+fLlxS6v0KlUKuzatQuHDx/O8sMlPDxcpOrEFRsbizlz5uDIkSPIyMjQWCcIAmQymV4eRJcsWYKtW7fi22+/hbu7O7y8vNTrPDw8sGvXLr0Na/v378fkyZNRrFgxVKpUCYaGhhrrZTKZSJWRVH3ofE5CQgJMTU0LsRr9xbAmETExMfjyyy9x7do1VKxYEU+fPkWvXr1QqVIl7NmzB8WLF8f06dPFLrPQzZ8/Hxs2bECjRo3g6uqq9eGiz6ZMmYKLFy9i+PDhsLGxYdv8v3379mH8+PHo1asXlEqlxjorKytERkaKVJn4Vq1aBS8vL8ydOxfFixcXuxzJsbe3zzKwymQylCxZEvb29hgwYAA8PDwKubrCc/LkSZw6dUr98/r161GmTBmNbVJTU3H+/Hk4ODgUdnl6iWFNIr7//nvExsYiJCQE1apVQ926ddXr3N3dsWrVKhGrE09wcDBGjx6NkSNHil2K5Fy4cAFTpkxBly5dxC5FUuLi4mBjY6NznVKp1DoLqU/+++8/zJgxg0EtC9988w22bNkCIyMjeHh4wNLSEq9evcKJEyeQmpqKrl274s8//8TIkSOxYMECdOjQQeySC8TDhw9x/Phx9c+XLl2CkZGRxjaGhoaoVasWxo8fX9jl6SWGNYk4efIkZs+eDRsbG62zARUrVsTz589FqkxcaWlpqF+/vthlSJKZmRlKlSoldhmSU716dZw5cwbu7u5a6/7880/UqlVLhKqkoWHDhrhz547OtqG3g1Lq1q2LZcuWaZxh+/bbbzF69GikpKRg27Zt+OqrrxAUFPTJhrUBAwZgwIABAN52HVi5ciXs7e1Frkq/cTSoRCiVSpiYmOhcl5CQoLeXuDp27KjxDY/+Z8iQIdiyZYtenynSZeDAgdiwYQOWLFmCu3fvAgCePXuGbdu2YcuWLRg4cKC4BYpo/Pjx2LVrF3755RdERkYiLi5O6z99tnv3bvj6+mpdCpXJZOjZs6d65KOPjw8iIiJEqLBwpaamwtbWFomJiWKXovd4Zk0inJycsGfPHrRo0UJr3cGDB/X27FK9evWwZMkSvHr1Ck2aNIGZmZnWNm3bthWhMvFFRETg/v37aNOmDRo1aqSzbaZMmSJCZeLq1q0b4uPjsXz5cqxZswYAMHLkSBQvXhzjxo1D+/btRa5QPF27dgUAzJgxI8u+Wfo4KCVTcnIynj59qnPdkydP1AOcTExM9OILdLFixXDx4kW9/oIjFQxrEjFu3Dj4+fmhb9++8PLyUo9yXLNmDU6ePInt27eLXaIovvnmGwBvD5ShoaFa6/V1xCMAnDhxQv2Be+nSJa31MplM78KaIAiIj49H37590bNnT1y5cgWxsbEwNzeHi4sLSpYsKXaJopo7dy5HfH6Ah4cHFi5cCBMTE7Rq1QolSpRAUlISjh07hoULF8LT0xMA8O+//6JatWoiV1s4mjZtijNnzsDNzU3sUvQa51mTkCtXrmDhwoW4cuUKlEolZDIZnJ2d8c0338DFxUXs8kQRHR390W0qV65cCJVQUZCWlgZnZ2esXLkSLVu2FLscKmKSkpIQEBCA8PBwyGQyGBgYICMjA4IgoE2bNpg3bx5KlCiBI0eOwMTEBM2aNRO75AJ38uRJTJs2Da1bt0aLFi1QunRprcBfp04dkarTHwxrEpSSkoL4+HiYmZlx1BZRDnl4eOC7775D69atxS5FsuLj43H9+nXEx8fD3NwcTk5OMDc3F7ssybh//z6uX7+OFy9eoFy5cqhbty5q1qwpdlmieH9gwbtBTZ/ncyxsDGskeYIg4OTJk7h8+bL6w6Vhw4Zo3ry53l/Sef78OTZu3Ii//voLcXFxsLCwQIMGDTBgwAC9nEQZANatW4eTJ09i3bp1KFasmNjlSIogCJg/fz62bt2KtLQ09XIjIyP0798fEydOFLE6kqI///zzg+sjIyPRvXv3QqpGfzGsScjp06c/OFP/pk2bRKpMPPHx8Rg2bBiuXbsGMzMzlC5dGq9evUJCQgKcnZ2xdu1anR3r9cGdO3fQr18/pKeno2nTpuq2OXv2LAwNDbF161a9nKZi9uzZOHz4MJRKJRo3bowyZcpohXp968uXadWqVQgMDMTQoUPh7e2NMmXK4OXLlzh06BDWrVuHMWPGYPjw4WKXKSqlUolr167h2bNnGoE2E+c1fDuJ+6FDhxAcHIxr167xzFohYFiTiHXr1mHBggWoXLlylrPRr1ixQoTKxDV58mScOHECCxYsQNOmTdXLz5w5g4kTJ6JVq1b4/vvvRaxQPEOGDEFcXBzWr1+vcQkrPj4egwcPRqlSpbBu3ToRKxTHx2aWl8lkOHbsWCFVIy0eHh7o1q2bztttBQYGYu/evXo9Vc6tW7cwevRoPH36VOdtlvT5kl9ycjKOHj2KkJAQnD17FkqlEg4ODujSpQv8/PzELu+Tx7AmER4eHvDw8NDbb/xZcXNzw8SJE3WeZt+9ezcWLFiA8+fPi1CZ+FxcXDB//nz1CLV3hYeHY+LEibhy5YoIlZFUOTo6Ys2aNWjSpInWujNnzsDf3x83btwQoTJp8PX1RWpqKqZMmYKaNWvq/NKsTyOKlUolTp06heDgYBw/fhwpKSnqs7ELFy7U62lwChun7pCIuLg4dojWITk5WeuedJnKli2L5OTkQq5IOhQKhc7LNMDbUZEKhaKQKyKpq1y5Mn7//XedYe3kyZN6P7L63r17WLJkCRo3bix2KaK6fPkyQkJCEBYWhtjYWFhYWKBTp07o2LEjatWqBVdXV5QtW1bsMvUKw5pEtGrVCpcvX+ZtYN7j4OCArVu3olmzZhrhQ6VSYcuWLahdu7aI1YmrSZMmWLJkCRwcHGBtba1e/vDhQyxdulTnB7I+yJxl/kP0td/RwIEDMWPGDMTExKBdu3bqfo5hYWE4ePAgZsyYIXaJoqpevTpev34tdhmi69u3L2QyGVxdXTFo0CA0bdoUBgZv4wLvZiAOXgaViLNnz2LGjBnw8vLKcqZ+fZzL5uLFixg8eDDKli2L1q1bo0yZMnj16hXCw8Px8uVLrF+/Hg0bNhS7TFE8efIE/fr1w7Nnz1CrVi1129y5cwcVK1bE1q1bUbFiRbHLLHRZ3cPw3UEG+trvCAC2bNmClStXIjY2FjKZDIIgwNLSEl9++SX69esndnmi+vPPP/H9999j0aJFsLGxEbsc0XTq1Al37tyBQqGAm5sbOnbsCE9PT5QoUQKJiYlo1KgRtmzZgkaNGoldqt5gWJMIzmWTtZs3b2L16tW4fPkyEhISYG5ujgYNGsDf318vA+y7Xr9+jT179mi1Tbdu3WBqaip2eaLQ9c0/Pj4ep0+fxrZt27BgwQLY2dmJUJl0qFQqREREID4+HhYWFrC2toZczltFd+zYES9evEBCQgLKlSun1T9NJpPhwIEDIlVXuO7du4cDBw7g4MGDiI6OhrGxMVq0aIFWrVph0qRJ2Lx5M8NaIWJYk4iPzWUDQO/7URDl1aZNm3Dq1Cm9HCVLHxcQEPDRuRvnzZtXSNVIR2YftsOHDyMmJgYymQyenp7w8/NjYCskDGtEpDfOnj2LkSNH6tUo2Q0bNqBjx44oU6YMNmzY8MFtZTIZb9pNWVIqlTh9+jRCQkJw7NgxJCcno1KlSno7FU5hYlgjyfH390dAQACqV68Of3//D24rk8mwatWqQqpMfPXr18fmzZtRt25duLi4fPAsgEwmw+XLlwuxOmlLTk7GpEmTcPv2bRw+fFjscgqNvb09fv31Vzg5OWXZny+TPne3oJxJSUlBeHg4QkJCsHr1arHL+eRxNKiIcvLBCwB//fVXIVUmrtevX0OpVKr/Tf+TOdgi89/6frstXTp27Ki1LD09Hc+fP0dKSgp+/PFHEaoSzz///KPz3/TWnDlzMHjwYFSqVAlz5sz56PacC/MtY2Nj+Pj4wMfHR+xS9ALPrIkoMDAQvr6+KF++PJYvX/7RD15ds44TkSZd/Y6MjIxQoUIFtG3bVq9H+V28eBG1a9fWOfjkzZs3uHXrlt71QfLw8MDKlSthb2/Pu1+QZDGskaS9G2jf999//+HXX3/V2xDr5+eH6dOn6wwfDx48wPTp07F582YRKiOpcnBwwM6dO+Hk5KS17ubNm/D19eVlUCIJ4lhtiUhKSsJ///2nc91///2nt5cDV6xYgefPn+tc999//+nl/VIz/fnnn1m+L5KSknDp0qVCrkga/Pz8cP/+fZ3rHjx4oNf3MfzQd/Pk5GQYGxsXYjXSs3//fsTGxupcFxcXl60Jl4kKAvusScSUKVNgamqq86bky5cvx5s3b7Bw4UIRKhPXhz5cXrx4oXPyYAKuXLkCS0tLscsQBUOspqtXr2qMfg0ODtYaeJKamopjx46hRo0ahV2epEyaNAk7d+5EqVKltNZFRUVh0qRJenv3CxIXw5pEXLp0CdOnT9e5rkWLFpg5c2YhVySekJAQhISEAHjbR+THH3/UmpwyLS0NN2/eRP369cUoUTRr1qzBmjVrALxtmwEDBmj1z0pLS4NSqUSfPn3EKFHS9DHEnj59GoGBgQDevme2bNmitY2BgQFsbGyyPAbpiw99OUxISNDbiaZJfAxrEhEfH5/lgaB48eKIi4sr3IJElJ6erj4zIggCkpOTtWZXNzIyQufOnTF06FAxShSNi4sLBg8eDEEQsGLFCnTo0AEVKlTQ2MbQ0BA2NjZo1aqVSFUWPobYrI0aNUrdr/PdaTzorZMnT+LUqVPqn9evX48yZcpobJOamorz58/DwcGhsMsjAsCwJhlVq1bF2bNndd58+9y5c6hcubIIVYmja9eu6Nq1KwCgf//+mDFjhl6P4HtX48aN1XeykMlkWQ6+0DcMsdnDqTu0PXz4EMePHwfw9m/q0qVLMDIy0tjG0NAQtWrVwvjx48UokYijQaViw4YNWLhwIcaOHYvu3bvD0tISMTEx2Lt3L5YsWYLx48dj8ODBYpdJEpKUlIQ3b96gXLlyWuv+++8/mJqa6uVlmw+NIKa3UlNTERkZidTUVK11+ny/3Xen8SCSEoY1iRAEAbNmzcIvv/wCAFAoFOqJYXv16qXXfUlUKhXOnz+PBw8eIC0tTWOdPt8eZ9y4cVkOSpk6dareDkqhrKWlpWHGjBk4cOCA+vjyPk7dQSQ9DGsS8/DhQ5w/fx5xcXGwsLCAm5sbqlevLnZZonnx4gX69euHR48eQSaTqTsAv9sfSV8/XJo1a4bp06ejTZs2WuvCw8Mxc+ZMjb44n7KP3ZbsXfp2i7J3LV68GPv378fEiRMxYcIETJs2DSYmJjhw4AAeP36MqVOnokWLFmKXKaqYmBisX78eN27cwLNnzxAYGIhatWph06ZNqFevHpydncUukfQQ51mTmOrVq6NXr17w9/dHr1699DqoAcAPP/yAUqVK4eTJkxAEAb/++iuOHz+OsWPHolq1anp1j8f3cVDK/7x+/Trb/yUlJYldrmjCwsIwatQoeHt7AwCcnJzQpUsXrF+/Hg0aNFD33dJXt27dgpeXF0JDQ1GhQgU8fvxYfTb/+fPn2Lhxo7gFkt7iAAMR3bp1CzY2NjA2NsatW7c+ur0+9iW5ePEipkyZor4fJgBUqlQJ/v7+6kvH69atE7FC8XBQyv/omo6CtD179gzW1tZQKBQoVqwYEhIS1Os6deqE8ePH69U0Qe+bN28enJ2dsXLlSshkMvz222/qdfXq1cOhQ4dErI70GcOaiLp3764eRt+9e/cs7w0qCAJkMpleXu5LTEyEpaUl5HI5SpQogVevXqnXOTs7Y+3atSJWJy5fX18sXLgQ5ubmWoNSNm7cyJFrpKVs2bLqgFalShVcuHBBHfYfPnwoYmXScOPGDSxfvhyGhoZaffosLS01jj9EhYlhTUSbN29WT0nBezjqVqVKFfVtuGrWrInffvtNPfVCeHg4LCwsRKxOXAMHDsTjx4+xaNEiLFq0SGtQir6OHs6cAPZD9PV+so0bN8alS5fg4eEBX19f/PTTT4iIiIChoSHCw8Ph4+MjdomiKl68eJaXyZ88eaLXxxsSFwcYkKQtXLgQMTEx+P7773Hy5EmMHDkSJUuWhIGBAV6+fIkJEyZgyJAhYpcpqocPH+LcuXOIj4/noBQAjRo10lr25s0bKJVKGBsbw8jICH/++acIlYnvxYsXiI2Nha2tLQBg48aNCAsLQ2pqKpo0aYKRI0fCxMRE5CrFM2HCBPz777/YvHkzzMzMUKdOHezduxc1atRA3759Ubt2bcyePVvsMkkPMaxRkXLjxg2Eh4cjJSUFTZo00fuRa5Q9GRkZOHfuHObPn4+ffvpJL+fRysjIwL///ouKFSvq3S23suv58+fo3bs3kpKS4OrqivDwcHz22We4d+8eZDIZfv31V5QuXVrsMkkPMayJyN7ePst+arroY581ytrFixc/uo2us0z6bPfu3di9e7d6PkN9olKp4OTkhLVr1+oclEJvJSQkYOPGjTh79ixiY2Nhbm4Od3d3DBo0iJdBSTTssyaigIAAdVhTKpXYtGkTDA0N4enpidKlS+Ply5cIDw9HRkaG3k78eu7cOTx58gTdu3fXWrd3715UqlQJbm5uIlQmvv79+2vMPQdAK/wz4GuqUKGC3t5ySS6Xo0qVKoiPjxe7FMmKiopClSpVMGbMGIwZM0Zr/blz5+Du7i5CZaTvGNZE9G4Amz9/PhwcHLBy5UqNm5Z/++23+PLLL9Wd7PXNkiVL0Lp1a53rYmJi8Ouvv+rlWRIA2L9/v9ay+Ph4nD59GkeOHNHrKRh0iYyMRFBQEKpWrSp2KaLx9/fHypUrUb9+fd6OS4dBgwZh+/btGlMFZfr9998xduxYXLt2TYTKSN8xrEnEvn378MMPP2gENeDtt+HevXsjICAA3377rUjViefu3bsYO3asznV16tTB6tWrC7ki6ciq35WrqyuMjY2xc+dOvTzr6OLionWGMSMjA+np6TA2Ns7WaNFPVVhYGGJjY+Hp6Qk7OzuUKVNGY70+390BAKytrTFgwABs27YNpUqVUi8/fPgwvv76a/j5+YlYHekzhjWJSElJQXR0tM510dHROm+4rA9kMhkSExN1rouPj8/y/ob6rn79+vj555/FLkMUgwcP1gprRkZGqFChApo3b67X/Y5ev34Na2trjZ/pf5YvX46hQ4diyJAh2Lx5M0qUKIEDBw5g0qRJGD58uM5Lo0SFgWFNIjw9PbFgwQIYGxvD09MTJUuWRGJiIo4ePYpFixbB09NT7BJFUa9ePWzbtg1t27bV+AAWBAHbt29HvXr1RKxOuvR5DrrRo0eLXYJk8U4PH1asWDGsXr0agwYNwtChQ9GhQwfMmzcP48aNw7Bhw8Quj/QYR4NKRFJSEiZPnoyjR48CAAwMDJCRkQFBENCmTRvMmzcPJUqUELnKwnflyhX4+fmhevXq6Nq1K8qWLYv//vsP+/fvx8OHD7Flyxa9vbGyrpuXp6en48GDB3j69CkmTpyolxPjPn36FDExMTpvz3br1i2ULl0aFSpUEKEy8QUGBsLX11dnf7X//vsPv/76q95OGPyuhIQE+Pn54d9//8WkSZN4+ZNEx7AmMffv38f169fx4sULlCtXDo6Ojuq7HOiry5cvY/78+bh+/TpUKhXkcjmcnZ3x9ddfo0GDBmKXJ5r+/ftrLStWrBgqVKgALy8vfPbZZyJUJb7hw4ejWrVqmDx5sta6H3/8EQ8fPtTbflkODg7YuXMnnJyctNbdvHkTvr6+ejeCWNeXHgCIjY3Fw4cP4eLiol6m7336SDy8DCoxNjY2eh/O3tegQQP88ssvSElJQXx8PMzMzFC8eHGxyxIdL2npdu3aNXz++ec617m6uuocRasvPvTd/MWLFzAzMyvEaqQhq357RkZGsLW1Zb8+kgSGNQlJT0/H7t27cePGDTx79gzTpk1D9erVERoaCjs7O70PccbGxjA2Nha7DEnIvD3Q/Pnz4eHhIXY5kvLmzRsYGOg+tMlkMr378A0JCUFISAiAt6//xx9/RMmSJTW2SUtLw82bN1G/fn0xShQVv/RQUcCwJhGRkZEYOHAgYmNjUbt2bVy+fFn9oXLx4kWcOnUK8+bNE7nKwjdp0qSPbqOP7VKsWDEUL14cCoVC7FIkx8bGBuHh4WjevLnWumPHjmmMhtQH6enp6mOJIAhITk7WmiLIyMgInTt3xtChQ8UoURJSU1Ph6+uLb775Bs2aNRO7HCINDGsSMWfOHFhaWmLXrl0wMzND3bp11esaNWqERYsWiVideHT1n0lISMDTp09RqlQpvZ7Ys0uXLti9ezfvj/qeAQMGICAgAHK5HN27d0e5cuXw33//Ye/evdi1axfmzp0rdomFqmvXrujatSuAt/0cZ8yYofdn6XUpVqwYnj9/rhVkiaSAYU0i/vzzTyxcuBCWlpZac4eVLVsWL168EKkycWXVv+j+/fsYP368Xk4UnMnMzAxXr15Fx44d8dlnn6FMmTIa05vIZDK9vE1Zly5d8PLlS6xYsQI7d+5ULzc2NsbXX3+tDi76KKtLfmlpaTAyMirkaqSnbdu2OHToEO+dSpLDsCYRCoUiy86/L1++hImJSSFXJG02Njb44osvMG/ePPz2229ilyOKzLOtL168wN27d7XW62tYA4ChQ4eiV69euHLlCuLi4mBhYQEXFxe9nP7mXfv370diYqJ6JPGdO3cwatQoREVFoUGDBliyZAlKly4tcpXiqV+/PhYtWoThw4ejefPmWl+AgLeBjqiwMaxJRKNGjbBhwwY0b95cfRo+8ybdv/76K28erEPJkiXx+PFjscsQjb7ekDy7SpQoobfTl2Tl559/Rq9evdQ/z549G4aGhpg8eTK2bNmCRYsW4fvvvxexQnFl9pE9efIkTp48qbVeJpPp3dQmJA0MaxIxYcIE9O7dGx06dICHhwdkMhm2bduGu3fv4tGjR9i1a5fYJYoiLi5Oa1l6ejru37+PRYsWoVatWoVflERcvHgRtWvXhqmpqda6N2/e4NatW2jUqJEIlRW+I0eOwM3NDWZmZjhy5MhHt9fXsyPR0dHq/moxMTG4fPkyVq9ejebNm8PS0hI//vijyBWK69ixY2KXQKQTw5pE2NjYYM+ePQgMDERISAgUCgV+//13uLu7Y8GCBbCyshK7RFG4ublpXYYA3o5qq1ixIlasWCFCVdLg5+eX5QSnERER8PPz05uzAGPGjMGvv/4KJyenj96/UZ/PjsjlcqSnpwMALly4AAMDA7i5uQF42zdW15cjfVK5cmWxSyDSiWFNQqpWrar332zfN3fuXK2wVqxYMZQvXx716tXLcj4tffChCU6Tk5P1ak66Y8eOoWzZsup/k2729vbYvn07KlSogC1btsDNzU09sODJkyd63V/tfcnJyUhNTdVarq/33CVx6e8nnQRkZw6xTDKZTO+mHACAbt26iV2CpFy9ehVXrlxR/xwcHIzLly9rbJOamopjx46hRo0ahV2eaDLPiKSmpuLIkSNo2rQpbG1tRa5Ker766iv4+/ujU6dOMDU1xYYNG9TrwsPD4ejoKGJ14hMEAStXrsTOnTuzHIGvr2dlSVwMayLat28fTE1NYWVl9cGzJAB0Xgok/XP69GkEBgYCePue0DUVg4GBAWxsbDB9+vTCLk90xYoVw5IlS3TexJ3e3rrtxIkTePjwIaysrDRuL9WjRw+97W6RaePGjdi4cSOGDh2KxYsXY8SIEVAoFDh48CDS09OzvI8oUUHjjdxF1KtXL1y7dg21atWCj48POnTowD4TeHupJifhVF+/6drb26v7adH/9OrVC506dUKfPn3ELoWKmA4dOuDzzz9H3759UadOHezZswd16tSBSqXCiBEjYGdnh/Hjx4tdJukhnlkT0S+//IInT57g4MGDCAkJweLFi+Hs7AwfHx94e3vD0tJS7BJFERAQoA5rSqUSmzZtgqGhITw9PVG6dGm8fPkS4eHhyMjI0Nt5xABO3ZGVyZMnY+LEibC0tESLFi1QvHhxsUsS1YYNG9CxY0eUKVNG47KnLvo8Nx/wdrSsg4MDFAoFDAwMkJCQAODtwIw+ffrgu+++Y1gjUfDMmoTcu3cPISEhOHToEKKjo+Hm5ob+/fvr9e2E5s+fj/v372PlypUat4FRqVT48ssvYW1trbd3Mbh58yYSExPVc/DFx8er26tJkyYYOXKkXt46x8XFBenp6eo7gRgbG2vd2eH9fn6fsnfPwNrb239wW30eKQsALVu2xMyZM9GiRQu0bdsWn3/+OYYMGQLg7YTCc+bMwaVLl0SukvQRz6xJSM2aNTFu3DiMGDECS5cuxcaNG2FsbKzXYW3fvn344YcftEKHXC5H7969ERAQoLdhbe7cuWjSpIk6rM2dOxfh4eFo2rQp1q9fD7lcjpEjR4pcZeEbPHgw+3i+490zsDwb+2H169fHjRs30KJFC/j4+CAwMBAvX76EgYEBJycnUTGsSYRSqcTp06cRGhqKY8eOQaFQoEePHujRo4fYpYkqJSUF0dHROtdFR0frHFqvL+7fv4/hw4cDeNtOhw8fxtSpU9G9e3ds27YNmzdv1suwNnr0aLFLoCJq1KhReP78OQDA398fCQkJCAkJQWpqKpo0aYKpU6eKXCHpK4Y1kV28eBEhISEICwtDWloaWrdujQULFqBZs2Z6PYdYJk9PTyxYsADGxsbw9PREyZIlkZiYiKNHj2LRokXw9PQUu0TRpKSkqPtj/fXXX+r3DwDY2dnh2bNnYpZHEqVUKnHt2jU8e/YMaWlpWuu7dOlS+EVJRI0aNdRT3hgZGWHKlCmYMmWKyFURMayJqkWLFoiNjUXz5s0xY8YMeHh4oFixYmKXJSnTpk1DSkoKJk+ejMmTJ8PAwAAZGRkQBAFt2rTR62+6VatWxR9//IHGjRsjODgYderUUU/Y+erVK729abmfn1+W6+RyOUqWLAkHBwd0794d5cuXL8TKxHfr1i2MHj0aT58+1TldkEwm07uwxvkuqSjgAAMR2dvbw8DAAIaGhh/tY6NvnaLfd//+fdy4cQP//fcfypUrB0dHR/U9DvXV7t27MWXKFFhYWCA+Ph4//fQTOnbsCODtDbofPHiA9evXi1xl4Rs5ciRu3bqFFy9ewM7ODqVLl8arV6/w77//omzZsrCyssLt27ehUqmwefNmvZqTzdfXF6mpqZgyZQpq1qwJQ0NDrW1KliwpQmXisbe3z9F8l/v27Sukyoj+h2fWRDRq1CixS5CkoKAgdOnSRX37IODtSEcvLy+NaRgiIyOxdu1azJ49W4wyRdejRw9Uq1YNN27cQO3atdX3eATe3hLnQ2eYPmXt2rXD48ePsW3bNo15C6OiojBixAh07doVy5cvx6BBg7Bo0SL8/PPPIlZbuO7du4clS5agcePGYpciGc7Ozrh27RqUSiXnuyTJ4pk1khwHBweNG5QrlUrUrVsXu3fv1jgLcu3aNfTq1UuvpxogbV5eXvj666/Rtm1brXVhYWFYuHAhjh49ipCQEEyfPl2vzlh37doVX3zxBdq3by92KZLy7nyXd+7c4XyXJDk8s0aSo+v7A79T6MbO4tqePn2aZbcCmUymHu1Xrlw59Vxs+mLSpEn4/vvvYWdnp/fdCN5VqVIlfPHFF/jiiy/U811u3rwZ8+bN43yXJAkMa0RFFDuL6+bo6Ihly5ahbt26qFixonp5dHQ0li9frj5jGx0drXcDDGbPno0XL16gY8eOKFeunFb/NJlMhgMHDohUnTRwvkuSIoY1oiJqxowZKFGiBDZt2pRlZ3F9NHPmTAwaNAht2rSBra0tSpUqhdjYWPz7778oXbo0li5dCgB4+fIlevbsKXK1hatOnTqcMPgDON8lSRXDGhUZ/JDRxM7iutWsWRPh4eHYvXs3bt68qR4Vmvmhm3kZ9IsvvhC50sL3ww8/iF2CJHG+S5I6DjAgybG3t0fx4sU1wtmbN2+0lgmCgJSUFL0dYMDO4tkXExODQ4cOITg4GNeuXdPb9wxpe3e+yw4dOnC+S5IkfmUgyeGUJtnDzuIflpycrB71efbsWSiVSjg4OORoEtRPwZw5czB48GBUqlQJc+bM+ej2+jZj//Pnz2FgYIAzZ87g7NmzH9xW3+e7JPHwzBpREdWxY0e8ePECCQkJ7Cz+/5RKJU6dOoXg4GAcP34cKSkpKFOmDF6+fImFCxfq5VlIDw8PrFy5Evb29vDw8PjgtjKZDMeOHSukyqQhMDAwR9vzyySJgWfWiIoodhb/n8uXL6v7HMXGxsLCwgKdOnVCx44dUatWLbi6umpMsqxPjh8/rvPf9BbDFxUFDGtERRQ7i/9P3759IZPJ4OrqikGDBqFp06bqjuGJiYkiV0dElDcMa0SfgJSUFCQkJMDMzAzGxsZil1PobG1tcefOHVy8eBEKhQKxsbHw9PTU25vZf0hycjLOnTuHp0+fak2kLJPJMHDgQHEKI6IsMawRFWEnTpxAYGAgbt++DUEQIJPJ4ODggDFjxujVJJ4HDhzAvXv3cODAARw8eBABAQHqiUxbtWrFy8X/788//8To0aMRHx+vcz3DGpE0cYABUREVHh6O0aNHo169emjfvj3KlCmDFy9eICwsDNeuXcOyZcvg6ekpdpmiyOzDdvjwYcTExEAmk8HT0xN+fn5o1KiR2OWJxsfHB5aWlpg6dSqqV6/OiZSJigiGNaIiqkuXLqhZsyYWLFigtW7ChAm4d+8e9u/fX/iFSUjmjPQhISE4duwYkpOTUalSJb0b8ZjJxcUFK1asQJMmTcQuhYhyQC52AUSUOxEREVne+7Nz586IiIgo3IIkSKFQoEWLFpg/fz7Onj2L+fPno1atWmKXJZr69evjwYMHYpdBRDnEPmtERZS5uTkePHiAZs2aaa178OABzM3NRahKuoyNjeHj4wMfHx+xSxHNrFmzMHbsWBgaGsLd3V1rbj4AsLCwKPzCiOiDGNaIiqj27dtj0aJFMDY2hpeXF8zMzJCYmIiwsDAsWbJE725STh9nZmaGSpUqYdq0aVkOuuCtuIikh33WiIqotLQ0fP311zh69ChkMhkMDAyQkZEBQRDQtm1bLFiwAEZGRmKXSRLi7++Pv/76C927d4e1tbXOAQZdu3YVoTIi+hCGNaIi7t9//8WlS5eQkJAAc3NzNGjQAHZ2dmKXRRLk7OyMmTNnonPnzmKXQkQ5wAEGREXIw4cP0a1bN5w8eVK9zM7ODn379sWIESPQp08fPHv2DN26dUNkZKSIlZIUlS9fXmc/NSKSNoY1oiJk/fr1MDEx+eCEty1atICpqSl+/vnnQqyMioIxY8Zg7dq1WU6KS0TSxAEGREXImTNnsnXj6e7duyMwMLAQKqKiJDg4GE+ePEGrVq3g4OCgdZZNJpNh1apVIlVHRFlhWCMqQp4/f46qVat+dLsqVarg+fPnhVARFSWvX79GtWrVNH4mIuljWCMqQkxNTREbG/vR7eLi4mBiYlIIFVFRsmXLFrFLIKJcYJ81oiKkbt26CA0N/eh2Bw8eRN26dQuhIiIiKmg8s0ZUhPTp0wcjR46EjY0NRowYAYVCobFepVJh5cqVCAsLw4oVK0SqkqQkp30Xs9MnkogKF+dZIypiFixYgHXr1qFMmTJwd3dHpUqVAABPnz7FuXPn8PLlSwwZMgQTJkwQuVKSgkaNGmn8nJ6ejpSUFABAsWLFkJqaCuDt7biMjIzw559/FnqNRPRhDGtERdDJkyexfv16XLlyBWlpaQDefvDWr18fAwcO/ODUHqS/bty4gXHjxuHLL7+El5cXSpQogaSkJISFhWHVqlVYvHgxnJycxC6TiN7DsEZUhCmVSsTFxQF4ewPu9y+LEr2rZ8+e6NKlC/r06aO1btu2bdi3bx92794tQmVE9CHss0ZUhCkUCpQuXVrsMqiI+Oeff1ClShWd66pWrYq7d+8WckVElB0cDUpEpCcqV66MX375Be9fUBEEAdu3b1f3fyQiaeFlUCIiPREeHo6xY8eiUqVKaNWqFUqXLo1Xr17hxIkTePLkCZYuXQpPT0+xyySi9zCsERHpkdu3b2Pt2rW4fv06Xrx4gbJly8LJyQnDhw+Hqalptu6QQUSFi2GNiEiPxcTEIDQ0FCEhIbh27Rpu374tdklE9B4OMCAi0jPJyck4evQoQkJCcPbsWSiVSjg4OGDSpElil0ZEOjCsERHpAaVSiVOnTiE4OBjHjx9HSkoKypQpA6VSiYULF6J9+/Zil0hEWWBYIyL6hF2+fBkhISEICwtDbGwsLCws0KlTJ3Ts2BG1atWCq6srypYtK3aZRPQBDGtERJ+wvn37QiaTwdXVFYMGDULTpk1hYPD20J+YmChydUSUHQxrRESfMFtbW9y5cwcXL16EQqFAbGwsPD09UaJECbFLI6JsYlgjIvqEHThwAPfu3cOBAwdw8OBBBAQEwNjYGC1atECrVq0gk8nELpGIPoJTdxAR6ZHMPmyHDx9GTEwMZDIZPD094efnh0aNGoldHhHpwLBGRKSHlEolTp8+jZCQEBw7dgzJycmoVKkSjh07JnZpRPQehjUiIj2XkpKC8PBwhISEYPXq1WKXQ0TvYVgjIiIikjC52AUQERERUdYY1oiIiIgkjGGNiIiISMIY1oiIiIgkjGGNiIiISMIY1oioSNi2bRvs7Ozg6+srdilERIWKYY2IioTg4GBUrlwZ169fx6NHj8Quh4io0DCsEZHkRUZG4sqVK5g0aRIsLS0RHBz80cdkZGQgLS2tEKojIipYDGtEJHnBwcEwNzdHixYt4OXlpRXWoqKiYGdnh59//hkbN26Ep6cnHB0dcf/+fQDA/fv3MWbMGDRu3BiOjo7o1q2b1m2V4uLi8OOPP6Jjx45wcXFB/fr1MXToUPzzzz+F9jqJiHQxELsAIqKPCQ4ORps2bWBkZAQfHx/s2LED169fh5OTk8Z2e/fuRWpqKnr27AkjIyOYm5vj7t276N27N8qXL48vvvgCJiYmOHToEEaOHInly5ejTZs2AN6evQsPD0e7du1QpUoVvHz5Ejt37kS/fv1w8OBBlC9fXoyXTkTE200RkbTdvHkT3bt3x4YNG9CkSRMIgoCWLVuibdu2+O677wC8PbPWunVrlChRAkePHoWlpaX68QMHDsSrV6+wZ88eGBkZAQAEQUDv3r0RGxuLw4cPAwDS0tJgYGAAufx/FxyioqLg7e0Nf39/jBw5shBfNRHR//AyKBFJWnBwMMqUKQNXV1cAgEwmQ/v27REaGgqlUqmxbdu2bTWCWlxcHM6fPw9vb28kJSUhJiYGMTExiI2NRbNmzfDw4UM8f/4cAGBkZKQOakqlErGxsTAxMYG1tTX+/vvvQnq1RETaeBmUiCRLqVTi4MGDcHV1RVRUlHq5k5MT1q9fj3PnzqFZs2bq5VWqVNF4/OPHjyEIApYuXYqlS5fq3MerV69Qvnx5qFQqbN68Gdu3b0dUVJRGELSwsMjfF0ZElAMMa0QkWefPn8eLFy9w8OBBHDx4UGt9cHCwRlgzNjbWWK9SqQAAgwcPxmeffaZzH1ZWVgCA1atXY+nSpejevTvGjh0Lc3NzyOVyzJ07F+wtQkRiYlgjIskKDg5G6dKlMW3aNK11R48exdGjRzFz5swsH1+1alUAgKGhIZo0afLBfR0+fBiurq6YO3euxvKEhASUKlUqF9UTEeUPhjUikqSUlBQcOXIE7dq1Q7t27bTWlytXDiEhITh+/LjWqNBMpUuXRuPGjdWjOsuVK6exPiYmRt3HTaFQaJ1BO3ToEJ4/f45q1arl06siIso5hjUikqTjx4/j9evX8PDw0Lne2dkZlpaWOHDgQJZhDQCmT5+OPn36oGPHjujZsyeqVq2Kly9f4urVq3j27BkOHDgAAGjZsiVWrFiBSZMmwcXFBXfu3EFwcLD67BwRkVgY1ohIkg4cOIBixYqhadOmOtfL5XK0bNkSwcHBiIuLy/J5atasiT179iAwMBD79u1DXFwcLC0tUbt2bY3pOPz9/ZGcnIzg4GCEhoaidu3aWLNmDRYuXJjfL42IKEc4zxoRERGRhHGeNSIiIiIJY1gjIiIikjCGNSIiIiIJY1gjIiIikjCGNSIiIiIJY1gjIiIikjCGNSIiIiIJY1gjIiIikjCGNSIiIiIJY1gjIiIikjCGNSIiIiIJY1gjIiIikrD/A0K+cQHSSYLyAAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "bplot = sns.barplot(data=df6.reset_index(),x='Area',y='Percent',color='r')\n",
        "bplot.set(title='Percentage of students that think AI will make a big impact in this area')\n",
        "for item in bplot.get_xticklabels():\n",
        "    item.set_rotation(90)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "0151eb1b",
      "metadata": {
        "papermill": {
          "duration": 0.02679,
          "end_time": "2023-05-01T19:26:28.067325",
          "exception": false,
          "start_time": "2023-05-01T19:26:28.040535",
          "status": "completed"
        },
        "tags": [],
        "id": "0151eb1b"
      },
      "source": [
        "**insight:**\n",
        "\n",
        "Medicine had the highest percentage of students that thought AI would make the biggest impact with just over 80% whereas Art had the lowest with just 13.2%. These results would make sense as Medicine and Education tend to work with large amounts of data which can be easily interpreted by a human whereas art is more difficult for AI to understand."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "d84c782e",
      "metadata": {
        "papermill": {
          "duration": 0.026896,
          "end_time": "2023-05-01T19:26:28.121271",
          "exception": false,
          "start_time": "2023-05-01T19:26:28.094375",
          "status": "completed"
        },
        "tags": [],
        "id": "d84c782e"
      },
      "source": [
        "**6ii: How many areas do students think will be affected from 0 to 7?**\n",
        "\n",
        "I created an empty dataframe and added the numerical encoding of 0s and 1s from the 7 areas in order to see the total number of types a given number of n yes responses was given."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 30,
      "id": "46a77985",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:28.178239Z",
          "iopub.status.busy": "2023-05-01T19:26:28.177766Z",
          "iopub.status.idle": "2023-05-01T19:26:28.196304Z",
          "shell.execute_reply": "2023-05-01T19:26:28.194909Z"
        },
        "papermill": {
          "duration": 0.050703,
          "end_time": "2023-05-01T19:26:28.199109",
          "exception": false,
          "start_time": "2023-05-01T19:26:28.148406",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "46a77985",
        "outputId": "727fa23e-127a-4169-9f9b-bcda381a3560"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Total\n",
              "0.0       1\n",
              "1.0       7\n",
              "2.0      16\n",
              "3.0      28\n",
              "4.0      22\n",
              "5.0       7\n",
              "6.0       6\n",
              "7.0       4\n",
              "dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 30
        }
      ],
      "source": [
        "df6_2 = pd.DataFrame(data=np.zeros((91,1)),columns=['Total'])\n",
        "for i in columns4:\n",
        "    df6_2['Total'] += df[i]\n",
        "df6_2.value_counts(sort=False)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "9f15d945",
      "metadata": {
        "papermill": {
          "duration": 0.027465,
          "end_time": "2023-05-01T19:26:28.254088",
          "exception": false,
          "start_time": "2023-05-01T19:26:28.226623",
          "status": "completed"
        },
        "tags": [],
        "id": "9f15d945"
      },
      "source": [
        "**insight:**\n",
        "\n",
        "Most people identified 2-4 areas that they thought there would be a significant effect. Only 1 person thought there would be no big impact in any area. These results seem to follow a bell curve implying no need for further analysis."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "77ab5306",
      "metadata": {
        "papermill": {
          "duration": 0.027261,
          "end_time": "2023-05-01T19:26:28.309127",
          "exception": false,
          "start_time": "2023-05-01T19:26:28.281866",
          "status": "completed"
        },
        "tags": [],
        "id": "77ab5306"
      },
      "source": [
        "**6iii Is there connection between AI knowledge rating and the areas students think will be affected?**\n",
        "\n",
        "Again this was explored using similar methods to before such as making a dataframe and then altering the dataframe in order to use a barplot."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "37b22dfe",
      "metadata": {
        "papermill": {
          "duration": 0.028914,
          "end_time": "2023-05-01T19:26:28.366538",
          "exception": false,
          "start_time": "2023-05-01T19:26:28.337624",
          "status": "completed"
        },
        "tags": [],
        "id": "37b22dfe"
      },
      "source": [
        "**another dataframe df6_3 was created to display the results**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 31,
      "id": "0b869769",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:28.423877Z",
          "iopub.status.busy": "2023-05-01T19:26:28.423455Z",
          "iopub.status.idle": "2023-05-01T19:26:28.451024Z",
          "shell.execute_reply": "2023-05-01T19:26:28.450053Z"
        },
        "papermill": {
          "duration": 0.059043,
          "end_time": "2023-05-01T19:26:28.453359",
          "exception": false,
          "start_time": "2023-05-01T19:26:28.394316",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "0b869769",
        "outputId": "c97cd3e1-4e2c-45e2-ea17-f27dd02ec01e"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                Disagree  Agree  Difference\n",
              "Area                                       \n",
              "Art                 5.67   7.50        1.83\n",
              "Medicine            5.22   6.08        0.86\n",
              "Marketing           5.71   6.27        0.56\n",
              "Education           5.67   6.03        0.36\n",
              "Administration      5.79   6.11        0.32\n",
              "Agriculture         5.76   6.07        0.31\n",
              "Construction        5.88   5.94        0.06"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f13611d8-9fbf-4af3-a3d7-607abb8432cc\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Disagree</th>\n",
              "      <th>Agree</th>\n",
              "      <th>Difference</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Area</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Art</th>\n",
              "      <td>5.67</td>\n",
              "      <td>7.50</td>\n",
              "      <td>1.83</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Medicine</th>\n",
              "      <td>5.22</td>\n",
              "      <td>6.08</td>\n",
              "      <td>0.86</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Marketing</th>\n",
              "      <td>5.71</td>\n",
              "      <td>6.27</td>\n",
              "      <td>0.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Education</th>\n",
              "      <td>5.67</td>\n",
              "      <td>6.03</td>\n",
              "      <td>0.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Administration</th>\n",
              "      <td>5.79</td>\n",
              "      <td>6.11</td>\n",
              "      <td>0.32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Agriculture</th>\n",
              "      <td>5.76</td>\n",
              "      <td>6.07</td>\n",
              "      <td>0.31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Construction</th>\n",
              "      <td>5.88</td>\n",
              "      <td>5.94</td>\n",
              "      <td>0.06</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f13611d8-9fbf-4af3-a3d7-607abb8432cc')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f13611d8-9fbf-4af3-a3d7-607abb8432cc button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f13611d8-9fbf-4af3-a3d7-607abb8432cc');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f3b0c182-1657-41c6-86d7-ba558fd217a2\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f3b0c182-1657-41c6-86d7-ba558fd217a2')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f3b0c182-1657-41c6-86d7-ba558fd217a2 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 31
        }
      ],
      "source": [
        "list6_3 = []\n",
        "for i,j in enumerate(columns4):\n",
        "    x1 = df[df[j]==0]['Q1.AI_knowledge'].mean().round(2)\n",
        "    x2 = df[df[j]==1]['Q1.AI_knowledge'].mean().round(2)\n",
        "    list6_3.append([columns4_natural[i],x1,x2,x2-x1])\n",
        "df6_3 = pd.DataFrame(list6_3)\n",
        "df6_3.columns = ['Area', 'Disagree','Agree','Difference']\n",
        "df6_3.set_index(['Area'],inplace=True)\n",
        "df6_3.sort_values(by=['Difference'],ascending=False,inplace=True)\n",
        "df6_3"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "8acb5f76",
      "metadata": {
        "papermill": {
          "duration": 0.027524,
          "end_time": "2023-05-01T19:26:28.508839",
          "exception": false,
          "start_time": "2023-05-01T19:26:28.481315",
          "status": "completed"
        },
        "tags": [],
        "id": "8acb5f76"
      },
      "source": [
        "**the final barplot**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 32,
      "id": "37d86734",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:28.567422Z",
          "iopub.status.busy": "2023-05-01T19:26:28.566950Z",
          "iopub.status.idle": "2023-05-01T19:26:28.953989Z",
          "shell.execute_reply": "2023-05-01T19:26:28.952601Z"
        },
        "papermill": {
          "duration": 0.419402,
          "end_time": "2023-05-01T19:26:28.956821",
          "exception": false,
          "start_time": "2023-05-01T19:26:28.537419",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 616
        },
        "id": "37d86734",
        "outputId": "f3918e4e-ab73-49aa-f43e-af501dead5c6"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-32-9fe6403e167a>:7: FutureWarning: The frame.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n",
            "  df6_3biii = df6_3bi.append(df6_3bii)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "df6_3bi = df6_3.reset_index().drop(columns=['Agree','Difference'])\n",
        "df6_3bi.columns = ['Area','AI Knowledge Rating']\n",
        "df6_3bi['Response'] = 'Disagree'\n",
        "df6_3bii = df6_3.reset_index().drop(columns=['Disagree','Difference'])\n",
        "df6_3bii.columns = ['Area','AI Knowledge Rating']\n",
        "df6_3bii['Response'] = 'Agree'\n",
        "df6_3biii = df6_3bi.append(df6_3bii)\n",
        "df6_3biii\n",
        "\n",
        "palette = {\"Disagree\":\"tab:red\",\n",
        "           \"Agree\":\"tab:green\"}\n",
        "\n",
        "barplot6_3 = sns.barplot(data=df6_3biii,x='Area',y='AI Knowledge Rating',hue='Response',palette=palette)\n",
        "barplot6_3.set(ylim=[5,8])\n",
        "for item in barplot6_3.get_xticklabels():\n",
        "    item.set_rotation(90)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "81a7b31e",
      "metadata": {
        "papermill": {
          "duration": 0.027896,
          "end_time": "2023-05-01T19:26:29.012847",
          "exception": false,
          "start_time": "2023-05-01T19:26:28.984951",
          "status": "completed"
        },
        "tags": [],
        "id": "81a7b31e"
      },
      "source": [
        "**insight:**\n",
        "\n",
        "People that felt they understood AI more in general believed there would be more big impacts in these 7 areas. There were two particular areas which stood out: art and medicine. Those that disagreed that medicine would have a big impact from AI had the lowest knowledge rating. The biggest discrepancy between respondents who agreed and disagreed was in art- those that thought AI would have a big impact on art rated themselves almost two points higher! This probably is significant however the difference is probably exaggerated by small sample size."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "930c383d",
      "metadata": {
        "papermill": {
          "duration": 0.027863,
          "end_time": "2023-05-01T19:26:29.068907",
          "exception": false,
          "start_time": "2023-05-01T19:26:29.041044",
          "status": "completed"
        },
        "tags": [],
        "id": "930c383d"
      },
      "source": [
        "**6iv What are the opinions of students that don't think AI will have a big impact on education?**\n",
        "\n",
        "To answer this I modified the code from 6i in order to filter those who responded disagree on education."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 33,
      "id": "24e3d18a",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:29.128921Z",
          "iopub.status.busy": "2023-05-01T19:26:29.128086Z",
          "iopub.status.idle": "2023-05-01T19:26:29.145759Z",
          "shell.execute_reply": "2023-05-01T19:26:29.144542Z"
        },
        "papermill": {
          "duration": 0.050786,
          "end_time": "2023-05-01T19:26:29.148580",
          "exception": false,
          "start_time": "2023-05-01T19:26:29.097794",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "24e3d18a",
        "outputId": "e80feaf0-2bb1-4795-c379-acf1d52c856b"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "               Percent\n",
              "Area                  \n",
              "Medicine         76.7%\n",
              "Construction     63.3%\n",
              "Agriculture      53.3%\n",
              "Administration   36.7%\n",
              "Marketing        23.3%\n",
              "Art              13.3%\n",
              "Education         0.0%"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4201dd2a-dafe-41bd-8967-6d6cbaccc9f5\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Percent</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Area</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Medicine</th>\n",
              "      <td>76.7%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Construction</th>\n",
              "      <td>63.3%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Agriculture</th>\n",
              "      <td>53.3%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Administration</th>\n",
              "      <td>36.7%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Marketing</th>\n",
              "      <td>23.3%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Art</th>\n",
              "      <td>13.3%</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Education</th>\n",
              "      <td>0.0%</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4201dd2a-dafe-41bd-8967-6d6cbaccc9f5')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-4201dd2a-dafe-41bd-8967-6d6cbaccc9f5 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-4201dd2a-dafe-41bd-8967-6d6cbaccc9f5');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-60bc25ec-7ce7-424a-a429-92829ded764f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-60bc25ec-7ce7-424a-a429-92829ded764f')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-60bc25ec-7ce7-424a-a429-92829ded764f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 33
        }
      ],
      "source": [
        "df6iv = df[df['Q6#1.Education']==0]\n",
        "list6iv = []\n",
        "count_df6iv=len(df6iv.index)\n",
        "for i,j in enumerate(columns4):\n",
        "    list6iv.append([columns4_natural[i],f'{round((df6iv[j].sum()/count_df6iv)*100,1)}%'])\n",
        "df6iv = pd.DataFrame(list6iv)\n",
        "df6iv.columns = ['Area', 'Percent']\n",
        "df6iv.set_index(['Area'],inplace=True)\n",
        "df6iv.sort_values(by=['Percent'],ascending=False,inplace=True)\n",
        "df6iv"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "181668ea",
      "metadata": {
        "papermill": {
          "duration": 0.028712,
          "end_time": "2023-05-01T19:26:29.206436",
          "exception": false,
          "start_time": "2023-05-01T19:26:29.177724",
          "status": "completed"
        },
        "tags": [],
        "id": "181668ea"
      },
      "source": [
        "**insight**\n",
        "\n",
        "There are no significant differences between what we have seen previously. Minor difference such as in marketing being slightly lower do not matter as there are only 30 students fit the education criteria."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "aeec4cdb",
      "metadata": {
        "papermill": {
          "duration": 0.028077,
          "end_time": "2023-05-01T19:26:29.262943",
          "exception": false,
          "start_time": "2023-05-01T19:26:29.234866",
          "status": "completed"
        },
        "tags": [],
        "id": "aeec4cdb"
      },
      "source": [
        "<h3>Question 7:</h3>\n",
        "<i>On a scale of 1 to 10, how useful do you think AI would be in the educational process? (1- not useful at all, 10-extremely useful)</i>\n",
        "<br>\n",
        "<br>\n",
        "This question has a similar question to the first so it makes sense to reuse the code to interpret it. Also we can create a scatterplot to see if there is a relationship with AI Knowledge Rating."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 34,
      "id": "6f162930",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:29.322297Z",
          "iopub.status.busy": "2023-05-01T19:26:29.321241Z",
          "iopub.status.idle": "2023-05-01T19:26:29.637603Z",
          "shell.execute_reply": "2023-05-01T19:26:29.636001Z"
        },
        "papermill": {
          "duration": 0.349129,
          "end_time": "2023-05-01T19:26:29.640401",
          "exception": false,
          "start_time": "2023-05-01T19:26:29.291272",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 532
        },
        "id": "6f162930",
        "outputId": "3e162c6e-7204-4df5-b696-308acf5ef582"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[Text(0.5, 0, 'Utility grade'),\n",
              " Text(0, 0.5, 'Number of responses'),\n",
              " Text(0.5, 1.0, 'A countplot of utility grades')]"
            ]
          },
          "metadata": {},
          "execution_count": 34
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "fig1 = sns.countplot(data=df,x='Q7.Utility_grade',color='r')\n",
        "fig1.set(xlabel='Utility grade',ylabel='Number of responses',title='A countplot of utility grades')"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "ac99b204",
      "metadata": {
        "papermill": {
          "duration": 0.028643,
          "end_time": "2023-05-01T19:26:29.698014",
          "exception": false,
          "start_time": "2023-05-01T19:26:29.669371",
          "status": "completed"
        },
        "tags": [],
        "id": "ac99b204"
      },
      "source": [
        "**insight:**\n",
        "\n",
        "There seems to be 3 groups of students: those that give a grade of 2-5 with a peak at 4, 6-9 with a peak at 8 and finally 10."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 35,
      "id": "14dc60e8",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:29.758478Z",
          "iopub.status.busy": "2023-05-01T19:26:29.758030Z",
          "iopub.status.idle": "2023-05-01T19:26:30.285438Z",
          "shell.execute_reply": "2023-05-01T19:26:30.284110Z"
        },
        "papermill": {
          "duration": 0.560449,
          "end_time": "2023-05-01T19:26:30.288147",
          "exception": false,
          "start_time": "2023-05-01T19:26:29.727698",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 532
        },
        "id": "14dc60e8",
        "outputId": "fff14d55-113e-4d34-c399-33a793864381"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[Text(0.5, 0, 'AI Knowledge Rating'),\n",
              " Text(0, 0.5, 'Utility Grade'),\n",
              " Text(0.5, 1.0, 'A regplot of utility grade against AI knowledge rating')]"
            ]
          },
          "metadata": {},
          "execution_count": 35
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "fig7 = sns.regplot(data=df,x='Q1.AI_knowledge',y='Q7.Utility_grade',x_jitter=0.15,y_jitter=0.15,marker='x',color='r')\n",
        "fig7.set(xlabel='AI Knowledge Rating',ylabel='Utility Grade',title='A regplot of utility grade against AI knowledge rating')"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "bb6dbfc7",
      "metadata": {
        "papermill": {
          "duration": 0.030348,
          "end_time": "2023-05-01T19:26:30.348682",
          "exception": false,
          "start_time": "2023-05-01T19:26:30.318334",
          "status": "completed"
        },
        "tags": [],
        "id": "bb6dbfc7"
      },
      "source": [
        "**insight:**\n",
        "\n",
        "It appears that there is a weak-moderate positive correlation between AI knowledge rating and utility grade. We would expect this as students that learn more about AI see more of its positive benefits.    "
      ]
    },
    {
      "cell_type": "markdown",
      "id": "3e2b613e",
      "metadata": {
        "papermill": {
          "duration": 0.029572,
          "end_time": "2023-05-01T19:26:30.408942",
          "exception": false,
          "start_time": "2023-05-01T19:26:30.379370",
          "status": "completed"
        },
        "tags": [],
        "id": "3e2b613e"
      },
      "source": [
        "<h3> Questions 8 - 11: AI & Education </h3>\n",
        "\n",
        "<i>\n",
        "    <h4> Question 8: What do you think is the main advantage that AI would have in the teaching process? </h4>\n",
        "    <ol>\n",
        "        <li> Teachers can be assisted by a virtual assistant for teaching lessons and answering students' questions immediately\n",
        "        <li>More efficient management of teachers' time\n",
        "<li> More interactive and engaging lessons for students\n",
        "<li> Other\n",
        "    </ol>\n",
        "\n",
        "<h4> Question 9: What do you think is the main advantage that AI would have in the learning process? </h4>\n",
        "<ol>\n",
        "    <li> Personalized lessons according to students' needs\n",
        "<li> Universal access for all students eager to learn, including those with special needs\n",
        "<li> More interactive and engaging lessons for students\n",
        "<li> Other\n",
        "    </ol>\n",
        "    \n",
        "<h4>Question 10: What do you think is the main advantage that AI would have in the evaluation process?</h4>\n",
        "<ol>\n",
        "    <li> Automation of exam grading\n",
        "<li> Fewer errors in grading system\n",
        "<li> Constant feedback from virtual assistants for each student\n",
        "<li> Other\n",
        "    </ol>\n",
        "    \n",
        "<h4>Question 11: What do you think is the main disadvantage that AI would have in the educational process? </h4>\n",
        "<ol>\n",
        "    <li>Lack of a relationship between students and teacher\n",
        "<li> Internet addiction\n",
        "<li> Rarer interactions between students and teachers\n",
        "<li> Loss of information caused by possible system failure\n",
        "    </ol>\n",
        "    </i>\n",
        "<br>\n",
        "<br>\n",
        "This section of the survery delves more into AI & Education and has a similar format to questions 3&4. Although there are no other responses this possibly could have been a good opportunity to do some data cleaning.\n",
        "<br>\n",
        "Questions for this section are:\n",
        "<li> Are there any responses that are other, and if so what are they? 8-11i\n",
        "<li> What are the distribution of responses? 8-11ii\n",
        "<li> How does the response to question 7 affect the responses here? 8-11iii\n",
        "<li> Do more positive attitudes to AI in Q3&4 result in different responses about education? 8-11iv"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "dd5a247b",
      "metadata": {
        "papermill": {
          "duration": 0.030492,
          "end_time": "2023-05-01T19:26:30.469202",
          "exception": false,
          "start_time": "2023-05-01T19:26:30.438710",
          "status": "completed"
        },
        "tags": [],
        "id": "dd5a247b"
      },
      "source": [
        "**8-11i: Are there any responses that are other, and if so what are they?**\n",
        "\n",
        "In order to find this out I created a loop across columns 8 to 10 and created a total variable of how many other responses. This was then printed."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 36,
      "id": "a3bd0e5c",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:30.531544Z",
          "iopub.status.busy": "2023-05-01T19:26:30.531073Z",
          "iopub.status.idle": "2023-05-01T19:26:30.540952Z",
          "shell.execute_reply": "2023-05-01T19:26:30.539984Z"
        },
        "papermill": {
          "duration": 0.043852,
          "end_time": "2023-05-01T19:26:30.543324",
          "exception": false,
          "start_time": "2023-05-01T19:26:30.499472",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "a3bd0e5c",
        "outputId": "42a85ce5-382c-4d58-9d09-c380521202ee"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0\n"
          ]
        }
      ],
      "source": [
        "columns_8 = ['Q8.Advantage_teaching','Q9.Advantage_learning','Q10.Advantage_evaluation ','Q11.Disadvantage_educational_process']\n",
        "columns_8_natural = ['Advantage Teaching','Advantage Learning','Advantage Evaluation','Disadvantage Education Process']\n",
        "total_8 = 0\n",
        "for i in range(3):\n",
        "    total_8 += df[df[columns_8[i]]==4]['ID'].count()\n",
        "print(total_8)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "9bdb235a",
      "metadata": {
        "papermill": {
          "duration": 0.029893,
          "end_time": "2023-05-01T19:26:30.602850",
          "exception": false,
          "start_time": "2023-05-01T19:26:30.572957",
          "status": "completed"
        },
        "tags": [],
        "id": "9bdb235a"
      },
      "source": [
        "**insight:**\n",
        "\n",
        "Although we already knew this it is always good practice to check your data. Nobody put an 'Other' response."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "f5ad7054",
      "metadata": {
        "papermill": {
          "duration": 0.029879,
          "end_time": "2023-05-01T19:26:30.662623",
          "exception": false,
          "start_time": "2023-05-01T19:26:30.632744",
          "status": "completed"
        },
        "tags": [],
        "id": "f5ad7054"
      },
      "source": [
        "**8-11ii: What are the distribution of responses?**\n",
        "\n",
        "The length of responses was quite long so some shortened versions of names were created to improve readability. With the combination of another barplot and dataframe it was possible to visualize the results in a clear and concise manner.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 37,
      "id": "7ee8fbf6",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:30.725136Z",
          "iopub.status.busy": "2023-05-01T19:26:30.724688Z",
          "iopub.status.idle": "2023-05-01T19:26:30.752417Z",
          "shell.execute_reply": "2023-05-01T19:26:30.751219Z"
        },
        "papermill": {
          "duration": 0.061825,
          "end_time": "2023-05-01T19:26:30.754898",
          "exception": false,
          "start_time": "2023-05-01T19:26:30.693073",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "7ee8fbf6",
        "outputId": "73e741e7-c4a7-4151-e17a-9503c72f0405"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                       Question               Statement  \\\n",
              "Question Number                                                           \n",
              "8                            Advantage Teaching       Virtual Assistant   \n",
              "8                            Advantage Teaching         Time Efficiency   \n",
              "8                            Advantage Teaching   More Interaction (Q8)   \n",
              "9                            Advantage Learning  Lesson Personalization   \n",
              "9                            Advantage Learning        Universal Access   \n",
              "9                            Advantage Learning   More Interaction (Q9)   \n",
              "10                         Advantage Evaluation      Grading Automation   \n",
              "10                         Advantage Evaluation            Fewer Errors   \n",
              "10                         Advantage Evaluation       Constant Feedback   \n",
              "11               Disadvantage Education Process    Lack of Relationship   \n",
              "11               Disadvantage Education Process      Internet Addiction   \n",
              "11               Disadvantage Education Process      Rarer Interactions   \n",
              "11               Disadvantage Education Process        Information Loss   \n",
              "\n",
              "                 Percent  \n",
              "Question Number           \n",
              "8                   42.9  \n",
              "8                   22.0  \n",
              "8                   35.2  \n",
              "9                   29.7  \n",
              "9                   52.7  \n",
              "9                   17.6  \n",
              "10                  24.2  \n",
              "10                  26.4  \n",
              "10                  49.5  \n",
              "11                  37.4  \n",
              "11                  26.4  \n",
              "11                  25.3  \n",
              "11                  11.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ff10b090-267d-4005-bac1-7d891a749099\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Question</th>\n",
              "      <th>Statement</th>\n",
              "      <th>Percent</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Question Number</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Advantage Teaching</td>\n",
              "      <td>Virtual Assistant</td>\n",
              "      <td>42.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Advantage Teaching</td>\n",
              "      <td>Time Efficiency</td>\n",
              "      <td>22.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Advantage Teaching</td>\n",
              "      <td>More Interaction (Q8)</td>\n",
              "      <td>35.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Advantage Learning</td>\n",
              "      <td>Lesson Personalization</td>\n",
              "      <td>29.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Advantage Learning</td>\n",
              "      <td>Universal Access</td>\n",
              "      <td>52.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Advantage Learning</td>\n",
              "      <td>More Interaction (Q9)</td>\n",
              "      <td>17.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Advantage Evaluation</td>\n",
              "      <td>Grading Automation</td>\n",
              "      <td>24.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Advantage Evaluation</td>\n",
              "      <td>Fewer Errors</td>\n",
              "      <td>26.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Advantage Evaluation</td>\n",
              "      <td>Constant Feedback</td>\n",
              "      <td>49.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Disadvantage Education Process</td>\n",
              "      <td>Lack of Relationship</td>\n",
              "      <td>37.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Disadvantage Education Process</td>\n",
              "      <td>Internet Addiction</td>\n",
              "      <td>26.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Disadvantage Education Process</td>\n",
              "      <td>Rarer Interactions</td>\n",
              "      <td>25.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Disadvantage Education Process</td>\n",
              "      <td>Information Loss</td>\n",
              "      <td>11.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ff10b090-267d-4005-bac1-7d891a749099')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ff10b090-267d-4005-bac1-7d891a749099 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ff10b090-267d-4005-bac1-7d891a749099');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-dfcf3c03-325a-430e-9ba9-2986f27e507e\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dfcf3c03-325a-430e-9ba9-2986f27e507e')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-dfcf3c03-325a-430e-9ba9-2986f27e507e button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 37
        }
      ],
      "source": [
        "#--A list of mostly two word names for the possible responses to each question\n",
        "responses_8 =[['Virtual Assistant','Time Efficiency','More Interaction (Q8)'],['Lesson Personalization','Universal Access','More Interaction (Q9)'],\n",
        "              ['Grading Automation','Fewer Errors','Constant Feedback'],['Lack of Relationship','Internet Addiction','Rarer Interactions','Information Loss']]\n",
        "list_8 = []\n",
        "for k in range(4):\n",
        "    for i,j in enumerate(responses_8[k]):\n",
        "        x1 = df[df[columns_8[k]]==i+1]['ID'].count()/(91/100)\n",
        "        x1 = round(x1,1)\n",
        "        list_8.append([k+8,columns_8_natural[k],j,x1])\n",
        "df8 = pd.DataFrame(list_8)\n",
        "df8.columns = ['Question Number','Question','Statement','Percent']\n",
        "df8.set_index(['Question Number'],inplace=True)\n",
        "df8"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 38,
      "id": "4f76e77b",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:30.817817Z",
          "iopub.status.busy": "2023-05-01T19:26:30.817391Z",
          "iopub.status.idle": "2023-05-01T19:26:31.418833Z",
          "shell.execute_reply": "2023-05-01T19:26:31.417639Z"
        },
        "papermill": {
          "duration": 0.636346,
          "end_time": "2023-05-01T19:26:31.421542",
          "exception": false,
          "start_time": "2023-05-01T19:26:30.785196",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 435
        },
        "id": "4f76e77b",
        "outputId": "85da64e9-084e-4687-8767-cd7ab90e0d86"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "q8ii = sns.barplot(data=df8.reset_index(),y='Statement',x='Percent',hue='Question',dodge=False)\n",
        "sns.move_legend(\n",
        "    q8ii, \"lower center\",\n",
        "    bbox_to_anchor=(.5, 1), ncol=3, title=None, frameon=False,\n",
        ")"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "f7a08b7d",
      "metadata": {
        "papermill": {
          "duration": 0.031519,
          "end_time": "2023-05-01T19:26:31.484878",
          "exception": false,
          "start_time": "2023-05-01T19:26:31.453359",
          "status": "completed"
        },
        "tags": [],
        "id": "f7a08b7d"
      },
      "source": [
        "**insight:**\n",
        "\n",
        "There were generally a very even split between the responses which is perhaps to be expected. AI's ability to perform virtual assistant roles, universal acess, constant feedback were amongst the popular statements whereas the main disadvantage students felt was a lack of relationship."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "e52d85ae",
      "metadata": {
        "papermill": {
          "duration": 0.031636,
          "end_time": "2023-05-01T19:26:31.548391",
          "exception": false,
          "start_time": "2023-05-01T19:26:31.516755",
          "status": "completed"
        },
        "tags": [],
        "id": "e52d85ae"
      },
      "source": [
        "**8-11iii: How does the response to question 7 affect the responses here?**\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 39,
      "id": "81cc33a7",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:31.615714Z",
          "iopub.status.busy": "2023-05-01T19:26:31.614633Z",
          "iopub.status.idle": "2023-05-01T19:26:31.639687Z",
          "shell.execute_reply": "2023-05-01T19:26:31.638387Z"
        },
        "papermill": {
          "duration": 0.061228,
          "end_time": "2023-05-01T19:26:31.642092",
          "exception": false,
          "start_time": "2023-05-01T19:26:31.580864",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "81cc33a7",
        "outputId": "b77a738a-4146-40ee-8de8-5e2dcdd9d67f"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                       Question               Statement  \\\n",
              "Question Number                                                           \n",
              "8                            Advantage Teaching       Virtual Assistant   \n",
              "8                            Advantage Teaching         Time Efficiency   \n",
              "8                            Advantage Teaching   More Interaction (Q8)   \n",
              "9                            Advantage Learning  Lesson Personalization   \n",
              "9                            Advantage Learning        Universal Access   \n",
              "9                            Advantage Learning   More Interaction (Q9)   \n",
              "10                         Advantage Evaluation      Grading Automation   \n",
              "10                         Advantage Evaluation            Fewer Errors   \n",
              "10                         Advantage Evaluation       Constant Feedback   \n",
              "11               Disadvantage Education Process    Lack of Relationship   \n",
              "11               Disadvantage Education Process      Internet Addiction   \n",
              "11               Disadvantage Education Process      Rarer Interactions   \n",
              "11               Disadvantage Education Process        Information Loss   \n",
              "\n",
              "                 Mean Ultility Score  \n",
              "Question Number                       \n",
              "8                               7.49  \n",
              "8                               6.60  \n",
              "8                               7.91  \n",
              "9                               8.44  \n",
              "9                               7.25  \n",
              "9                               6.31  \n",
              "10                              6.55  \n",
              "10                              7.62  \n",
              "10                              7.78  \n",
              "11                              6.85  \n",
              "11                              7.38  \n",
              "11                              8.30  \n",
              "11                              7.60  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e4435f21-6dcb-4191-9d63-14a1d76baa39\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Question</th>\n",
              "      <th>Statement</th>\n",
              "      <th>Mean Ultility Score</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Question Number</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Advantage Teaching</td>\n",
              "      <td>Virtual Assistant</td>\n",
              "      <td>7.49</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Advantage Teaching</td>\n",
              "      <td>Time Efficiency</td>\n",
              "      <td>6.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Advantage Teaching</td>\n",
              "      <td>More Interaction (Q8)</td>\n",
              "      <td>7.91</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Advantage Learning</td>\n",
              "      <td>Lesson Personalization</td>\n",
              "      <td>8.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Advantage Learning</td>\n",
              "      <td>Universal Access</td>\n",
              "      <td>7.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Advantage Learning</td>\n",
              "      <td>More Interaction (Q9)</td>\n",
              "      <td>6.31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Advantage Evaluation</td>\n",
              "      <td>Grading Automation</td>\n",
              "      <td>6.55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Advantage Evaluation</td>\n",
              "      <td>Fewer Errors</td>\n",
              "      <td>7.62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Advantage Evaluation</td>\n",
              "      <td>Constant Feedback</td>\n",
              "      <td>7.78</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Disadvantage Education Process</td>\n",
              "      <td>Lack of Relationship</td>\n",
              "      <td>6.85</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Disadvantage Education Process</td>\n",
              "      <td>Internet Addiction</td>\n",
              "      <td>7.38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Disadvantage Education Process</td>\n",
              "      <td>Rarer Interactions</td>\n",
              "      <td>8.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Disadvantage Education Process</td>\n",
              "      <td>Information Loss</td>\n",
              "      <td>7.60</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e4435f21-6dcb-4191-9d63-14a1d76baa39')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e4435f21-6dcb-4191-9d63-14a1d76baa39 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e4435f21-6dcb-4191-9d63-14a1d76baa39');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-21f1491e-c866-4244-aee5-7b5ccb36e506\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-21f1491e-c866-4244-aee5-7b5ccb36e506')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-21f1491e-c866-4244-aee5-7b5ccb36e506 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ],
      "source": [
        "list8_iii = []\n",
        "for k in range(4):\n",
        "    for i,j in enumerate(responses_8[k]):\n",
        "        x1 = df[df[columns_8[k]]==i+1]['Q7.Utility_grade'].mean()\n",
        "        x1 = round(x1,2)\n",
        "        list8_iii.append([k+8,columns_8_natural[k],j,x1])\n",
        "df8_iii = pd.DataFrame(list8_iii)\n",
        "df8_iii.columns = ['Question Number','Question','Statement','Mean Ultility Score']\n",
        "df8_iii.set_index(['Question Number'],inplace=True)\n",
        "df8_iii"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "ac187fec",
      "metadata": {
        "papermill": {
          "duration": 0.031845,
          "end_time": "2023-05-01T19:26:31.706169",
          "exception": false,
          "start_time": "2023-05-01T19:26:31.674324",
          "status": "completed"
        },
        "tags": [],
        "id": "ac187fec"
      },
      "source": [
        "**insight:**\n",
        "\n",
        "Positive statements with giving the highest utility score were:\n",
        "<li> Q8: More Interaction\n",
        "<li> Q9: Lesson Personaization\n",
        "<li> Q10: Constant Feedback\n",
        "In constrast the negative statement associated with giving the lowest utility score was lack of relationship between students and teacher.\n",
        "<br><br>    \n",
        "These statements are all convincing arguments about the use of AI."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "873077e7",
      "metadata": {
        "papermill": {
          "duration": 0.031262,
          "end_time": "2023-05-01T19:26:31.769343",
          "exception": false,
          "start_time": "2023-05-01T19:26:31.738081",
          "status": "completed"
        },
        "tags": [],
        "id": "873077e7"
      },
      "source": [
        "**8-11iv: Do more positive attitudes to AI in Q3&4 result in different responses about education?**\n",
        "\n",
        "In order to find this a AI positivity column was created that calculates the total of the Q3&4 responses weighted whether the question is positive or negative and then scales this between 0 and 1 with 0 being the most negative and 1 being the most positive. Then this was fed back into a similar DataFrame to calculate the mean AI positivity for each question."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "13e96637",
      "metadata": {
        "papermill": {
          "duration": 0.031777,
          "end_time": "2023-05-01T19:26:31.832885",
          "exception": false,
          "start_time": "2023-05-01T19:26:31.801108",
          "status": "completed"
        },
        "tags": [],
        "id": "13e96637"
      },
      "source": [
        "**creating the AI positivity values**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 40,
      "id": "7b775d75",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:31.898652Z",
          "iopub.status.busy": "2023-05-01T19:26:31.898137Z",
          "iopub.status.idle": "2023-05-01T19:26:31.914707Z",
          "shell.execute_reply": "2023-05-01T19:26:31.913490Z"
        },
        "papermill": {
          "duration": 0.05287,
          "end_time": "2023-05-01T19:26:31.917561",
          "exception": false,
          "start_time": "2023-05-01T19:26:31.864691",
          "status": "completed"
        },
        "tags": [],
        "id": "7b775d75"
      },
      "outputs": [],
      "source": [
        "pd.options.display.max_columns = None\n",
        "pd.options.display.max_rows = None\n",
        "list8d = [-1,-1,1,-1,-1,-1,1,-1]\n",
        "df8b = df\n",
        "df8b['AI Positivity'] = df['ID'] * 0 + 6\n",
        "for j,i in enumerate(columns2):\n",
        "    df8b['AI Positivity'] += ((df[i]-1)/4 * list8d[j])\n",
        "df8b['AI Positivity'] = df8b['AI Positivity']/8\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "c5cc7298",
      "metadata": {
        "papermill": {
          "duration": 0.032786,
          "end_time": "2023-05-01T19:26:31.982894",
          "exception": false,
          "start_time": "2023-05-01T19:26:31.950108",
          "status": "completed"
        },
        "tags": [],
        "id": "c5cc7298"
      },
      "source": [
        "**Here is a graph of the AI positivity function**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 41,
      "id": "5ee71183",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:32.051373Z",
          "iopub.status.busy": "2023-05-01T19:26:32.050010Z",
          "iopub.status.idle": "2023-05-01T19:26:32.510035Z",
          "shell.execute_reply": "2023-05-01T19:26:32.508556Z"
        },
        "papermill": {
          "duration": 0.496873,
          "end_time": "2023-05-01T19:26:32.512769",
          "exception": false,
          "start_time": "2023-05-01T19:26:32.015896",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 528
        },
        "id": "5ee71183",
        "outputId": "9c0f3bc3-ad95-419f-aa9f-83106ac74cb4"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "b8iv = sns.countplot(data=df8b,x='AI Positivity',color='r')\n",
        "b8iv.set(title='A countplot of number of students vs AI positivity')\n",
        "for item in b8iv.get_xticklabels():\n",
        "    item.set_rotation(90)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "25225c1f",
      "metadata": {
        "papermill": {
          "duration": 0.031554,
          "end_time": "2023-05-01T19:26:32.576416",
          "exception": false,
          "start_time": "2023-05-01T19:26:32.544862",
          "status": "completed"
        },
        "tags": [],
        "id": "25225c1f"
      },
      "source": [
        "**recreating the dataframe with these values**"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 42,
      "id": "257b18c0",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:32.642735Z",
          "iopub.status.busy": "2023-05-01T19:26:32.641769Z",
          "iopub.status.idle": "2023-05-01T19:26:32.668570Z",
          "shell.execute_reply": "2023-05-01T19:26:32.667266Z"
        },
        "papermill": {
          "duration": 0.0633,
          "end_time": "2023-05-01T19:26:32.671661",
          "exception": false,
          "start_time": "2023-05-01T19:26:32.608361",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 488
        },
        "id": "257b18c0",
        "outputId": "f49246fe-b82b-4662-c43f-66fc9af8bcca"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                       Question               Statement  \\\n",
              "Question Number                                                           \n",
              "8                            Advantage Teaching       Virtual Assistant   \n",
              "8                            Advantage Teaching         Time Efficiency   \n",
              "8                            Advantage Teaching   More Interaction (Q8)   \n",
              "9                            Advantage Learning  Lesson Personalization   \n",
              "9                            Advantage Learning        Universal Access   \n",
              "9                            Advantage Learning   More Interaction (Q9)   \n",
              "10                         Advantage Evaluation      Grading Automation   \n",
              "10                         Advantage Evaluation            Fewer Errors   \n",
              "10                         Advantage Evaluation       Constant Feedback   \n",
              "11               Disadvantage Education Process    Lack of Relationship   \n",
              "11               Disadvantage Education Process      Internet Addiction   \n",
              "11               Disadvantage Education Process      Rarer Interactions   \n",
              "11               Disadvantage Education Process        Information Loss   \n",
              "\n",
              "                 AI Positivity Mean  \n",
              "Question Number                      \n",
              "8                              0.53  \n",
              "8                              0.58  \n",
              "8                              0.61  \n",
              "9                              0.56  \n",
              "9                              0.58  \n",
              "9                              0.56  \n",
              "10                             0.54  \n",
              "10                             0.54  \n",
              "10                             0.60  \n",
              "11                             0.51  \n",
              "11                             0.56  \n",
              "11                             0.61  \n",
              "11                             0.68  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-692ceac7-d372-4eef-9fa0-2466a2ba1b45\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Question</th>\n",
              "      <th>Statement</th>\n",
              "      <th>AI Positivity Mean</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Question Number</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Advantage Teaching</td>\n",
              "      <td>Virtual Assistant</td>\n",
              "      <td>0.53</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Advantage Teaching</td>\n",
              "      <td>Time Efficiency</td>\n",
              "      <td>0.58</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Advantage Teaching</td>\n",
              "      <td>More Interaction (Q8)</td>\n",
              "      <td>0.61</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Advantage Learning</td>\n",
              "      <td>Lesson Personalization</td>\n",
              "      <td>0.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Advantage Learning</td>\n",
              "      <td>Universal Access</td>\n",
              "      <td>0.58</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Advantage Learning</td>\n",
              "      <td>More Interaction (Q9)</td>\n",
              "      <td>0.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Advantage Evaluation</td>\n",
              "      <td>Grading Automation</td>\n",
              "      <td>0.54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Advantage Evaluation</td>\n",
              "      <td>Fewer Errors</td>\n",
              "      <td>0.54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Advantage Evaluation</td>\n",
              "      <td>Constant Feedback</td>\n",
              "      <td>0.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Disadvantage Education Process</td>\n",
              "      <td>Lack of Relationship</td>\n",
              "      <td>0.51</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Disadvantage Education Process</td>\n",
              "      <td>Internet Addiction</td>\n",
              "      <td>0.56</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Disadvantage Education Process</td>\n",
              "      <td>Rarer Interactions</td>\n",
              "      <td>0.61</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Disadvantage Education Process</td>\n",
              "      <td>Information Loss</td>\n",
              "      <td>0.68</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-692ceac7-d372-4eef-9fa0-2466a2ba1b45')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-692ceac7-d372-4eef-9fa0-2466a2ba1b45 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-692ceac7-d372-4eef-9fa0-2466a2ba1b45');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-db9444e7-97b0-4c2f-aae8-c9e84534e2a0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-db9444e7-97b0-4c2f-aae8-c9e84534e2a0')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-db9444e7-97b0-4c2f-aae8-c9e84534e2a0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ],
      "source": [
        "list8_iv = []\n",
        "for k in range(4):\n",
        "    for i,j in enumerate(responses_8[k]):\n",
        "        x1 = df8b[df8b[columns_8[k]]==i+1]['AI Positivity'].mean()\n",
        "        x1 = round(x1,2)\n",
        "        list8_iv.append([k+8,columns_8_natural[k],j,x1])\n",
        "df8_iv = pd.DataFrame(list8_iv)\n",
        "df8_iv.columns = ['Question Number','Question','Statement','AI Positivity Mean']\n",
        "df8_iv.set_index(['Question Number'],inplace=True)\n",
        "df8_iv"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "70c883c3",
      "metadata": {
        "papermill": {
          "duration": 0.033135,
          "end_time": "2023-05-01T19:26:32.737738",
          "exception": false,
          "start_time": "2023-05-01T19:26:32.704603",
          "status": "completed"
        },
        "tags": [],
        "id": "70c883c3"
      },
      "source": [
        "**insight:**\n",
        "\n",
        "People that held more positive views of AI thought that the following statements were the most true: more interaction, universal access, constant feedback, the greatest disadvantage is information loss"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "428fd992",
      "metadata": {
        "papermill": {
          "duration": 0.03347,
          "end_time": "2023-05-01T19:26:32.804178",
          "exception": false,
          "start_time": "2023-05-01T19:26:32.770708",
          "status": "completed"
        },
        "tags": [],
        "id": "428fd992"
      },
      "source": [
        "<h3>Questions 12-14: Demographics</h3>\n",
        "<i>\n",
        "<h4>Question 12: What is your gender?</h4>\n",
        "<ol>\n",
        "<li> Female\n",
        "<li> Male\n",
        "</ol>\n",
        "<h4>Question 13: What is your year of study?</h4>\n",
        "<ol><li> Year 2\n",
        "<li> Year 3</ol>\n",
        "\n",
        "<h4>Question 14: What is your major?</h4>\n",
        "<ol><li> Economic Cybernetics\n",
        "<li> Statistics and Economic Forecasting\n",
        "<li> Economic Informatics</ol>\n",
        "</i>\n",
        "\n",
        "This part of the survey is useful in order to help us understand what sorts of people that our analysis includes and therefore where are conclusions we draw are the most likely to be true.\n",
        "For this part of the survey some questions are:\n",
        "<li>Are the students distributed evenly through all the categories? 12-14i\n",
        "<li>What questions does gender have an impact on? 12-14ii\n"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "d2568638",
      "metadata": {
        "papermill": {
          "duration": 0.034742,
          "end_time": "2023-05-01T19:26:32.871571",
          "exception": false,
          "start_time": "2023-05-01T19:26:32.836829",
          "status": "completed"
        },
        "tags": [],
        "id": "d2568638"
      },
      "source": [
        "**12-14i: Are the students distributed evenly through all the categories?**\n",
        "\n",
        "A dataframe with a groupby was created with similar methods as before. A barchart with a dropdown to alter the hue shows a visual comparison of the demographics. The mode can also be changed to a pie chart in order to see the larger groups more easily."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 43,
      "id": "a62a82fd",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:32.942196Z",
          "iopub.status.busy": "2023-05-01T19:26:32.941725Z",
          "iopub.status.idle": "2023-05-01T19:26:32.967390Z",
          "shell.execute_reply": "2023-05-01T19:26:32.966398Z"
        },
        "papermill": {
          "duration": 0.06407,
          "end_time": "2023-05-01T19:26:32.969976",
          "exception": false,
          "start_time": "2023-05-01T19:26:32.905906",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 408
        },
        "id": "a62a82fd",
        "outputId": "c96c848c-811f-4aeb-a72b-05d377cb2e45"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Gender  Year of Study                                Major  Count\n",
              "                                                                   \n",
              "  Female              2                 Economic Cybernetics     14\n",
              "  Female              2                 Economic Informatics      5\n",
              "  Female              3                 Economic Cybernetics      6\n",
              "  Female              3  Statistics and Economic Forecasting     24\n",
              "  Female              3                 Economic Informatics     10\n",
              "    Male              2                 Economic Cybernetics      9\n",
              "    Male              2  Statistics and Economic Forecasting      2\n",
              "    Male              2                 Economic Informatics      4\n",
              "    Male              3                 Economic Cybernetics      1\n",
              "    Male              3  Statistics and Economic Forecasting     12\n",
              "    Male              3                 Economic Informatics      4"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-eab84c92-4277-477d-818c-b12e39f7b6e8\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Gender</th>\n",
              "      <th>Year of Study</th>\n",
              "      <th>Major</th>\n",
              "      <th>Count</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Female</td>\n",
              "      <td>2</td>\n",
              "      <td>Economic Cybernetics</td>\n",
              "      <td>14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Female</td>\n",
              "      <td>2</td>\n",
              "      <td>Economic Informatics</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Female</td>\n",
              "      <td>3</td>\n",
              "      <td>Economic Cybernetics</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Female</td>\n",
              "      <td>3</td>\n",
              "      <td>Statistics and Economic Forecasting</td>\n",
              "      <td>24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Female</td>\n",
              "      <td>3</td>\n",
              "      <td>Economic Informatics</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Male</td>\n",
              "      <td>2</td>\n",
              "      <td>Economic Cybernetics</td>\n",
              "      <td>9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Male</td>\n",
              "      <td>2</td>\n",
              "      <td>Statistics and Economic Forecasting</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Male</td>\n",
              "      <td>2</td>\n",
              "      <td>Economic Informatics</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Male</td>\n",
              "      <td>3</td>\n",
              "      <td>Economic Cybernetics</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Male</td>\n",
              "      <td>3</td>\n",
              "      <td>Statistics and Economic Forecasting</td>\n",
              "      <td>12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Male</td>\n",
              "      <td>3</td>\n",
              "      <td>Economic Informatics</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eab84c92-4277-477d-818c-b12e39f7b6e8')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-eab84c92-4277-477d-818c-b12e39f7b6e8 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-eab84c92-4277-477d-818c-b12e39f7b6e8');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8e25216a-d216-4d57-a43b-fcb6e90ccb19\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8e25216a-d216-4d57-a43b-fcb6e90ccb19')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8e25216a-d216-4d57-a43b-fcb6e90ccb19 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 43
        }
      ],
      "source": [
        "result = df.groupby(['Q12.Gender','Q13.Year_of_study','Q14.Major'])['ID'].count().reset_index()\n",
        "result[''] = ''\n",
        "result.set_index('',inplace=True)\n",
        "result.columns = ['Gender','Year of Study','Major','Count']\n",
        "result['Gender'] = result['Gender'].map({1:'Female',2:'Male'})\n",
        "result['Year of Study'] = result['Year of Study'].map({2:3,1:2})\n",
        "result['Major'] = result['Major'].map({1:'Economic Cybernetics',2:'Statistics and Economic Forecasting',3:'Economic Informatics'})\n",
        "result"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 44,
      "id": "d8cc7848",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:33.038405Z",
          "iopub.status.busy": "2023-05-01T19:26:33.037883Z",
          "iopub.status.idle": "2023-05-01T19:26:33.376126Z",
          "shell.execute_reply": "2023-05-01T19:26:33.375141Z"
        },
        "papermill": {
          "duration": 0.376311,
          "end_time": "2023-05-01T19:26:33.378951",
          "exception": false,
          "start_time": "2023-05-01T19:26:33.002640",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 661,
          "referenced_widgets": [
            "eefbca6b9d964a51a69bbe623ffcb016",
            "ffe67cd4331946569cea52aca6040de0",
            "a8c851130ac049dea9c70ea4574b5e7a",
            "82301781a33f4348b995194994ca5aee",
            "e3ca3a821c0d4a4baa7117f7a14827a1",
            "53adab60f8dd48da952eb89083af5172",
            "999e4a90d32a476c8bd97686e1f6b6bd",
            "3e3b1c20cc974396b4cd31ff3cc77960",
            "e349e545eadc42e0a78c30a002e735b9",
            "656e18d713344ca8bda7b0112917d44a"
          ]
        },
        "id": "d8cc7848",
        "outputId": "48886b3b-6d27-4f4a-a4d5-edd383179428"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "interactive(children=(Dropdown(description='hue', options=(None, 'Gender', 'Year of Study', 'Major Code'), val…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "eefbca6b9d964a51a69bbe623ffcb016"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<function __main__.draw_plot(hue, mode)>"
            ]
          },
          "metadata": {},
          "execution_count": 44
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import ipywidgets as widgets\n",
        "dd = widgets.Dropdown(options=[None,'Gender','Year of Study','Major Code'],value=None)\n",
        "dd2 = widgets.Dropdown(options=['Bar Chart','Pie Chart'],value='Bar Chart')\n",
        "result['Major Code'] = result['Major'].map({'Economic Cybernetics':'EC','Statistics and Economic Forecasting':'S&EF','Economic Informatics':'EI'})\n",
        "result['Demographic'] = result['Gender'] + ' ' + result['Year of Study'].astype(str) + ' ' + result['Major Code']\n",
        "palette2 = sns.color_palette(\"bright\")\n",
        "def draw_plot(hue,mode):\n",
        "    column = hue\n",
        "    if column == None:\n",
        "        column_x = 'Gender'\n",
        "    else:\n",
        "        column_x = column\n",
        "    if column != None:\n",
        "        result.sort_values(by=['Count'],inplace=True,ascending=False)\n",
        "        result.sort_values(by=[column_x],inplace=True)\n",
        "    else:\n",
        "        result.sort_values(by=['Gender','Year of Study','Major Code'],inplace=True)\n",
        "    #BarChart v PieChart\n",
        "    if mode == 'Bar Chart':\n",
        "        b12i = sns.barplot(data=result,x='Demographic',y='Count',errorbar=None,hue=column,\n",
        "                           dodge=False,palette=palette2)\n",
        "        for item in b12i.get_xticklabels():\n",
        "            item.set_rotation(90)\n",
        "        if column != None:\n",
        "            b12i.set(title=f'{mode} of Number of Students by Demographic with {column} as hue')\n",
        "        else:\n",
        "            b12i.set(title=f'{mode} of Number of Students by Demographic')\n",
        "    else:\n",
        "        result['colors'] = result[column_x]\n",
        "        x1 = result['colors'].unique()\n",
        "        x2 = ['firebrick','royalblue','limegreen']\n",
        "        for i in range(len(x1)):\n",
        "            result['colors'].replace(to_replace = x1[i],value = x2[i], inplace=True)\n",
        "        b12i = plt.pie(data=result, x='Count',labels='Demographic',colors='colors',\n",
        "                       rotatelabels=True,counterclock=False,startangle=90)\n",
        "widgets.interact(draw_plot,hue=dd,mode=dd2)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "653535b7",
      "metadata": {
        "papermill": {
          "duration": 0.033816,
          "end_time": "2023-05-01T19:26:33.448588",
          "exception": false,
          "start_time": "2023-05-01T19:26:33.414772",
          "status": "completed"
        },
        "tags": [],
        "id": "653535b7"
      },
      "source": [
        "**insight:**\n",
        "\n",
        "Looking at the data here we can see that the most common demographic was year 3 female statistics and economic forecasting students and there were no year 2 female economic S&EF students. Around 2/3 students were female and 2/3 students were in their third year. About an equal number of students were from each major. The larger groups were evenly distributed however the subgroups tended to have much larger differences between each other."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "201b90da",
      "metadata": {
        "papermill": {
          "duration": 0.033706,
          "end_time": "2023-05-01T19:26:33.516525",
          "exception": false,
          "start_time": "2023-05-01T19:26:33.482819",
          "status": "completed"
        },
        "tags": [],
        "id": "201b90da"
      },
      "source": [
        "**12-14ii: What questions does gender have an impact on?**\n",
        "\n",
        "In order to understand this a dataframe was created comparing the means of each question from the two groups and looking at the differences. Some of the questions were categorical so had to be analyzed separately."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 45,
      "id": "3026556a",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:33.586217Z",
          "iopub.status.busy": "2023-05-01T19:26:33.585800Z",
          "iopub.status.idle": "2023-05-01T19:26:33.642549Z",
          "shell.execute_reply": "2023-05-01T19:26:33.641274Z"
        },
        "papermill": {
          "duration": 0.094871,
          "end_time": "2023-05-01T19:26:33.645183",
          "exception": false,
          "start_time": "2023-05-01T19:26:33.550312",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 864
        },
        "id": "3026556a",
        "outputId": "cfe2d202-751e-470f-e6af-9cb80d245ddc"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                   Question  Female  Male  %Difference  Abs Difference\n",
              "0           Q1.AI_knowledge    5.88  5.97         1.53            0.09\n",
              "1             Q2#1.Internet    0.88  0.69       -21.59           -0.19\n",
              "2         Q2#2.Books/Papers    0.39  0.28       -28.21           -0.11\n",
              "3         Q2#3.Social_media    0.42  0.47        11.90            0.05\n",
              "4          Q2#4.Discussions    0.24  0.12       -50.00           -0.12\n",
              "5          Q2#5.NotInformed    0.03  0.12       300.00            0.09\n",
              "6    Q3#1.AI_dehumanization    2.51  2.53         0.80            0.02\n",
              "7      Q3#2.Job_replacement    3.08  3.41        10.71            0.33\n",
              "8      Q3#3.Problem_solving    4.31  4.00        -7.19           -0.31\n",
              "9   Q3#4.AI_rulling_society    2.29  2.69        17.47            0.40\n",
              "10           Q4#1.AI_costly    3.69  3.34        -9.49           -0.35\n",
              "11     Q4#2.Economic_crisis    2.59  2.50        -3.47           -0.09\n",
              "12     Q4#3.Economic_growth    3.58  3.81         6.42            0.23\n",
              "13            Q4#4.Job_loss    3.37  3.44         2.08            0.07\n",
              "14           Q6#1.Education    0.66  0.69         4.55            0.03\n",
              "15            Q6#2.Medicine    0.76  0.88        15.79            0.12\n",
              "16         Q6#3.Agriculture    0.53  0.47       -11.32           -0.06\n",
              "17       Q6#4.Constructions    0.58  0.50       -13.79           -0.08\n",
              "18           Q6#5.Marketing    0.34  0.41        20.59            0.07\n",
              "19      Q6#6.Administration    0.32  0.50        56.25            0.18\n",
              "20                 Q6#7.Art    0.14  0.12       -14.29           -0.02\n",
              "21         Q7.Utility_grade    7.58  7.19        -5.15           -0.39\n",
              "22        Q13.Year_of_study    1.68  1.53        -8.93           -0.15\n",
              "23         Q15.Passed_exams    0.81  0.62       -23.46           -0.19\n",
              "24                  Q16.GPA    7.95  7.51        -5.53           -0.44\n",
              "25            AI Positivity    0.57  0.56        -1.75           -0.01"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0e777e33-1a78-46ee-9dd7-c0b314bee019\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Question</th>\n",
              "      <th>Female</th>\n",
              "      <th>Male</th>\n",
              "      <th>%Difference</th>\n",
              "      <th>Abs Difference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Q1.AI_knowledge</td>\n",
              "      <td>5.88</td>\n",
              "      <td>5.97</td>\n",
              "      <td>1.53</td>\n",
              "      <td>0.09</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Q2#1.Internet</td>\n",
              "      <td>0.88</td>\n",
              "      <td>0.69</td>\n",
              "      <td>-21.59</td>\n",
              "      <td>-0.19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Q2#2.Books/Papers</td>\n",
              "      <td>0.39</td>\n",
              "      <td>0.28</td>\n",
              "      <td>-28.21</td>\n",
              "      <td>-0.11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Q2#3.Social_media</td>\n",
              "      <td>0.42</td>\n",
              "      <td>0.47</td>\n",
              "      <td>11.90</td>\n",
              "      <td>0.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Q2#4.Discussions</td>\n",
              "      <td>0.24</td>\n",
              "      <td>0.12</td>\n",
              "      <td>-50.00</td>\n",
              "      <td>-0.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Q2#5.NotInformed</td>\n",
              "      <td>0.03</td>\n",
              "      <td>0.12</td>\n",
              "      <td>300.00</td>\n",
              "      <td>0.09</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Q3#1.AI_dehumanization</td>\n",
              "      <td>2.51</td>\n",
              "      <td>2.53</td>\n",
              "      <td>0.80</td>\n",
              "      <td>0.02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Q3#2.Job_replacement</td>\n",
              "      <td>3.08</td>\n",
              "      <td>3.41</td>\n",
              "      <td>10.71</td>\n",
              "      <td>0.33</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Q3#3.Problem_solving</td>\n",
              "      <td>4.31</td>\n",
              "      <td>4.00</td>\n",
              "      <td>-7.19</td>\n",
              "      <td>-0.31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Q3#4.AI_rulling_society</td>\n",
              "      <td>2.29</td>\n",
              "      <td>2.69</td>\n",
              "      <td>17.47</td>\n",
              "      <td>0.40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Q4#1.AI_costly</td>\n",
              "      <td>3.69</td>\n",
              "      <td>3.34</td>\n",
              "      <td>-9.49</td>\n",
              "      <td>-0.35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Q4#2.Economic_crisis</td>\n",
              "      <td>2.59</td>\n",
              "      <td>2.50</td>\n",
              "      <td>-3.47</td>\n",
              "      <td>-0.09</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Q4#3.Economic_growth</td>\n",
              "      <td>3.58</td>\n",
              "      <td>3.81</td>\n",
              "      <td>6.42</td>\n",
              "      <td>0.23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Q4#4.Job_loss</td>\n",
              "      <td>3.37</td>\n",
              "      <td>3.44</td>\n",
              "      <td>2.08</td>\n",
              "      <td>0.07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Q6#1.Education</td>\n",
              "      <td>0.66</td>\n",
              "      <td>0.69</td>\n",
              "      <td>4.55</td>\n",
              "      <td>0.03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Q6#2.Medicine</td>\n",
              "      <td>0.76</td>\n",
              "      <td>0.88</td>\n",
              "      <td>15.79</td>\n",
              "      <td>0.12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Q6#3.Agriculture</td>\n",
              "      <td>0.53</td>\n",
              "      <td>0.47</td>\n",
              "      <td>-11.32</td>\n",
              "      <td>-0.06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Q6#4.Constructions</td>\n",
              "      <td>0.58</td>\n",
              "      <td>0.50</td>\n",
              "      <td>-13.79</td>\n",
              "      <td>-0.08</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Q6#5.Marketing</td>\n",
              "      <td>0.34</td>\n",
              "      <td>0.41</td>\n",
              "      <td>20.59</td>\n",
              "      <td>0.07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Q6#6.Administration</td>\n",
              "      <td>0.32</td>\n",
              "      <td>0.50</td>\n",
              "      <td>56.25</td>\n",
              "      <td>0.18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Q6#7.Art</td>\n",
              "      <td>0.14</td>\n",
              "      <td>0.12</td>\n",
              "      <td>-14.29</td>\n",
              "      <td>-0.02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Q7.Utility_grade</td>\n",
              "      <td>7.58</td>\n",
              "      <td>7.19</td>\n",
              "      <td>-5.15</td>\n",
              "      <td>-0.39</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Q13.Year_of_study</td>\n",
              "      <td>1.68</td>\n",
              "      <td>1.53</td>\n",
              "      <td>-8.93</td>\n",
              "      <td>-0.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Q15.Passed_exams</td>\n",
              "      <td>0.81</td>\n",
              "      <td>0.62</td>\n",
              "      <td>-23.46</td>\n",
              "      <td>-0.19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>Q16.GPA</td>\n",
              "      <td>7.95</td>\n",
              "      <td>7.51</td>\n",
              "      <td>-5.53</td>\n",
              "      <td>-0.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>AI Positivity</td>\n",
              "      <td>0.57</td>\n",
              "      <td>0.56</td>\n",
              "      <td>-1.75</td>\n",
              "      <td>-0.01</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0e777e33-1a78-46ee-9dd7-c0b314bee019')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0e777e33-1a78-46ee-9dd7-c0b314bee019 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0e777e33-1a78-46ee-9dd7-c0b314bee019');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8d937835-4832-455c-8809-303822dd6256\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8d937835-4832-455c-8809-303822dd6256')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8d937835-4832-455c-8809-303822dd6256 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ],
      "source": [
        "list_12ii = []\n",
        "df12iia = df.copy()\n",
        "df12iia.drop(columns=[\"Q2.AI_sources\",\"Q6.Domains\",\"ID\"],axis=1,inplace=True)\n",
        "sc = [10,1,1,1,1,1,5,5,5,5,5,5,5,5,1,1,1,1,1,1,1,10,2,1,10]\n",
        "c = 0\n",
        "for j,i in enumerate(df12iia.columns):\n",
        "    if i not in ['Q12.Gender','Q14.Major','Q11.Disadvantage_educational_process',\n",
        "                  'Q10.Advantage_evaluation ','Q9.Advantage_learning','Q8.Advantage_teaching',\n",
        "                  'Q5.Feelings']:\n",
        "        x1 = round(df12iia[df12iia['Q12.Gender']==1][i].mean(),2)\n",
        "        x2 = round(df12iia[df12iia['Q12.Gender']==2][i].mean(),2)\n",
        "        list_12ii.append([i,x1,x2,round((x2/x1 - 1)*100,2),x2-x1])\n",
        "        c+=1\n",
        "df12ii = pd.DataFrame(list_12ii)\n",
        "df12ii.columns = ['Question','Female','Male','%Difference','Abs Difference']\n",
        "df12ii\n",
        "#df12ii.sort_values('Scaled Difference',ascending=False)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "05e4b3c0",
      "metadata": {
        "papermill": {
          "duration": 0.034621,
          "end_time": "2023-05-01T19:26:33.715193",
          "exception": false,
          "start_time": "2023-05-01T19:26:33.680572",
          "status": "completed"
        },
        "tags": [],
        "id": "05e4b3c0"
      },
      "source": [
        "**insight (for non-categorical questions):**\n",
        "\n",
        "Gender has a role in some of the responses. Key differences include male students more likely to say they are not informed and more likely to think there will be a big impact by AI on medicine and administration. Male students were less likely to use books/papers, internet and discussions as sources as well as psasing their exams at a lower rate of 62% compared to 81% for female students."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 46,
      "id": "b3f952dc",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:33.788022Z",
          "iopub.status.busy": "2023-05-01T19:26:33.787588Z",
          "iopub.status.idle": "2023-05-01T19:26:34.085287Z",
          "shell.execute_reply": "2023-05-01T19:26:34.084038Z"
        },
        "papermill": {
          "duration": 0.337395,
          "end_time": "2023-05-01T19:26:34.088453",
          "exception": false,
          "start_time": "2023-05-01T19:26:33.751058",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 589,
          "referenced_widgets": [
            "2f520dee25714be891cf6ca22225b130",
            "b43a4cd98c574fb990623ed7dd1690ce",
            "47d32e6f5c2a423ab6533adcc639da8e",
            "092e8202f2794582bd097c231af440e8",
            "beb824f9cb504361a5492cf5eb55a612",
            "08c27c03792c4303bf5b3c6ba4aad7e5",
            "43ff88fe5dbc4fbc9116ea5de02374d6"
          ]
        },
        "id": "b3f952dc",
        "outputId": "d2668da6-6c48-462d-96cc-ff9e6814cce8"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "interactive(children=(Dropdown(description='question_12', options=('Feelings', 'Teaching Advantage', 'Learning…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "2f520dee25714be891cf6ca22225b130"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<function __main__.remaining_q(question_12)>"
            ]
          },
          "metadata": {},
          "execution_count": 46
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "dd3 = widgets.Dropdown(options=['Feelings','Teaching Advantage','Learning Advantage',\n",
        "                              'Evaluation Advantage','Disadvantage Education Process',\n",
        "                              'Major'],value='Feelings')\n",
        "dictionary_1 = {'Feelings':'Q5.Feelings',\n",
        "                'Teaching Advantage':'Q8.Advantage_teaching',\n",
        "                'Learning Advantage':'Q9.Advantage_learning',\n",
        "                'Evaluation Advantage':'Q10.Advantage_evaluation ',\n",
        "                'Disadvantage Education Process':'Q11.Disadvantage_educational_process',\n",
        "                'Major':'Q14.Major'}\n",
        "dictionary_2 = {'Feelings':['Curiosity','Fear','Indifference','Trust'],\n",
        "                'Teaching Advantage':['Virtual Assistant','Time Efficiency','More Interaction'],\n",
        "                'Learning Advantage':['Lesson Personalization','Universal Access','More Interaction'],\n",
        "                'Evaluation Advantage':['Grading Automation','Fewer Errors','Constant Feedback'],\n",
        "                'Disadvantage Education Process':['Lack of Relationship','Internet Addiction','Rarer Interactions','Loss of Information'],\n",
        "                'Major':['Economic Cybernetics','Statistics and Economic Forecasting','Economic Informatics']}\n",
        "def remaining_q(question_12):\n",
        "    df13 = df.copy()\n",
        "    for i in range(len(dictionary_2[question_12])):\n",
        "        df13[dictionary_1[question_12]].replace(i+1,dictionary_2[question_12][i],inplace=True)\n",
        "    df13['Q12.Gender'] = df13['Q12.Gender'].replace(1,'Female')\n",
        "    df13['Q12.Gender'] = df13['Q12.Gender'].replace(2,'Male')\n",
        "    cp12 = sns.countplot(data=df13,x=dictionary_1[question_12],hue='Q12.Gender')\n",
        "    cp12.set_title(f'A Countplot of {question_12} with Colour as Gender')\n",
        "    cp12.set_xlabel(question_12)\n",
        "    cp12.set_ylabel('Count')\n",
        "    for item in cp12.get_xticklabels():\n",
        "            item.set_rotation(45)\n",
        "widgets.interact(remaining_q,question_12=dd3)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "19bac0fa",
      "metadata": {
        "papermill": {
          "duration": 0.035149,
          "end_time": "2023-05-01T19:26:34.160798",
          "exception": false,
          "start_time": "2023-05-01T19:26:34.125649",
          "status": "completed"
        },
        "tags": [],
        "id": "19bac0fa"
      },
      "source": [
        "**insight:**\n",
        "\n",
        "It can be seen that female students were more likely to feel indifference or curiosity about AI. Male students were more likely to rate AI's virtual assistant ability as its main teaching advantage. Male students were more concerned about internet addiction on average compared to female students."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "9a622fad",
      "metadata": {
        "papermill": {
          "duration": 0.034822,
          "end_time": "2023-05-01T19:26:34.231235",
          "exception": false,
          "start_time": "2023-05-01T19:26:34.196413",
          "status": "completed"
        },
        "tags": [],
        "id": "9a622fad"
      },
      "source": [
        "<h3>Question 15 & 16</h3>\n",
        "<h4>Question 15: Did you pass all your exams?</h4>\n",
        "<i><li> Yes\n",
        "<li> No\n",
        "\n",
        "<h4>Question 16: What is your GPA for your last year of study? (Note that grades are from 1 to 10 in Romania)</h4>\n",
        "<li> 5.0-5.4\n",
        "<li> 5.5.-5.9\n",
        "<li> 6.0-6.4\n",
        "<li> 6.5-6.9\n",
        "<li> 7.0-7.4\n",
        "<li> 7.5-7.9\n",
        "<li> 8.0-8.4\n",
        "<li> 8.5-8.9\n",
        "<li> 9.0-9.4\n",
        "<li> 9.5-10</i>\n",
        "<br>\n",
        "<br>\n",
        "In this final section, the survey explored the grades and 100% exam pass rates of students.\n",
        "Some questions for this section were:\n",
        "    <li> How is a 100% exam pass rate related to GPA? 15-16i\n",
        "    <li> Do students with a higher AI knowledge rating do better in exams? 15-16ii"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "279ec90e",
      "metadata": {
        "papermill": {
          "duration": 0.035752,
          "end_time": "2023-05-01T19:26:34.302083",
          "exception": false,
          "start_time": "2023-05-01T19:26:34.266331",
          "status": "completed"
        },
        "tags": [],
        "id": "279ec90e"
      },
      "source": [
        "**15-16i: How is a 100% exam pass rate related to GPA?**\n",
        "\n",
        "A logistic regression plot was used to visualize the relationship."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 47,
      "id": "b5698fd0",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:34.376423Z",
          "iopub.status.busy": "2023-05-01T19:26:34.375796Z",
          "iopub.status.idle": "2023-05-01T19:26:38.250999Z",
          "shell.execute_reply": "2023-05-01T19:26:38.249627Z"
        },
        "papermill": {
          "duration": 3.916361,
          "end_time": "2023-05-01T19:26:38.254010",
          "exception": false,
          "start_time": "2023-05-01T19:26:34.337649",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 475
        },
        "id": "b5698fd0",
        "outputId": "a83203b6-4ce3-40e2-fdee-e6b173f2845f"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, '100% Exam Pass Rate')"
            ]
          },
          "metadata": {},
          "execution_count": 47
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "r15 = sns.regplot(data=df, y='Q15.Passed_exams',x='Q16.GPA',logistic=True,scatter=False,color='r')\n",
        "r15.set_xlabel('GPA')\n",
        "r15.set_ylabel('100% Exam Pass Rate')"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "2836354d",
      "metadata": {
        "papermill": {
          "duration": 0.035797,
          "end_time": "2023-05-01T19:26:38.326602",
          "exception": false,
          "start_time": "2023-05-01T19:26:38.290805",
          "status": "completed"
        },
        "tags": [],
        "id": "2836354d"
      },
      "source": [
        "**insight:**\n",
        "\n",
        "It seems that almost all students with a GPA above 9 are predicted to have a 100% exam pass rate. At a GPA of 7 students can predict to pass all their exams about 55% of the time. The graph predicts students with GPAs below 6 to be very unlikely to consistently pass their exams at a 100% rate."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "2bd81784",
      "metadata": {
        "papermill": {
          "duration": 0.036525,
          "end_time": "2023-05-01T19:26:38.399500",
          "exception": false,
          "start_time": "2023-05-01T19:26:38.362975",
          "status": "completed"
        },
        "tags": [],
        "id": "2bd81784"
      },
      "source": [
        "**15-16ii: Do students with a higher AI knowledge rating do better in exams?**\n",
        "\n",
        "A linear regression on a scatterplot was plotted and then a correlation coefficient was calculated."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 48,
      "id": "afc3d671",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:38.473985Z",
          "iopub.status.busy": "2023-05-01T19:26:38.473582Z",
          "iopub.status.idle": "2023-05-01T19:26:38.898442Z",
          "shell.execute_reply": "2023-05-01T19:26:38.897246Z"
        },
        "papermill": {
          "duration": 0.465928,
          "end_time": "2023-05-01T19:26:38.901230",
          "exception": false,
          "start_time": "2023-05-01T19:26:38.435302",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 481
        },
        "id": "afc3d671",
        "outputId": "73143a32-f69b-4ec7-9edf-df74000edf48"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'GPA')"
            ]
          },
          "metadata": {},
          "execution_count": 48
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "r15b = sns.regplot(data=df,y='Q16.GPA',x='Q1.AI_knowledge',color='r',marker='.',x_jitter=0.1,y_jitter=0.1)\n",
        "r15b.set_xlabel('AI Knowledge Rating')\n",
        "r15b.set_ylabel('GPA')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 49,
      "id": "0e07d16d",
      "metadata": {
        "execution": {
          "iopub.execute_input": "2023-05-01T19:26:38.979031Z",
          "iopub.status.busy": "2023-05-01T19:26:38.978558Z",
          "iopub.status.idle": "2023-05-01T19:26:38.986647Z",
          "shell.execute_reply": "2023-05-01T19:26:38.984827Z"
        },
        "papermill": {
          "duration": 0.04931,
          "end_time": "2023-05-01T19:26:38.989073",
          "exception": false,
          "start_time": "2023-05-01T19:26:38.939763",
          "status": "completed"
        },
        "tags": [],
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0e07d16d",
        "outputId": "72c4d1a6-9d38-4e29-f863-8179fde0824f"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.27\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-49-00024b4ea73a>:1: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.\n",
            "  print(round(df.corr()['Q16.GPA']['Q1.AI_knowledge'],2))\n"
          ]
        }
      ],
      "source": [
        "print(round(df.corr()['Q16.GPA']['Q1.AI_knowledge'],2))"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "fc851471",
      "metadata": {
        "papermill": {
          "duration": 0.036383,
          "end_time": "2023-05-01T19:26:39.061955",
          "exception": false,
          "start_time": "2023-05-01T19:26:39.025572",
          "status": "completed"
        },
        "tags": [],
        "id": "fc851471"
      },
      "source": [
        "**insight:**\n",
        "\n",
        "There is a weak correlation between AI knowledge rating and GPA - the correlation is only 0.27. This value is possibly slightly lower than expected but AI knowledge is a self reported rating."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "6b0ea987",
      "metadata": {
        "papermill": {
          "duration": 0.036377,
          "end_time": "2023-05-01T19:26:39.134837",
          "exception": false,
          "start_time": "2023-05-01T19:26:39.098460",
          "status": "completed"
        },
        "tags": [],
        "id": "6b0ea987"
      },
      "source": [
        "<h1> Conclusion </h1>\n",
        "\n",
        "Although this is an incomplete analysis there have been many interesting insights that have been found. These include:\n",
        "    <li> Most students had a AI knowledge rating between 4 and 8\n",
        "    <li> The internet is the most common source of information\n",
        "    <li> There are mainly two groups of attitudes to AI:\n",
        "        <ol>\n",
        "            <li> Students that think AI will solve problems and boost the economy\n",
        "            <li> Students that think AI will reduce the number of opportuntities for humans including jobs\n",
        "        </ol>\n",
        "    <li> Increased AI knowledge rating tended to have more positive opinions\n",
        "    <li> Most students are curious about AI\n",
        "    <li> Students think that medicine will be the domain that sees the largest impact from AI\n",
        "    <li> Students think art will see the smallest impact from AI\n",
        "    <li> AI knowledge rating is correlated with utility grading\n",
        "    <li> Female year 3 stats and economic forecasting had the highest representation in the survey\n",
        "    <li> Male students included in the survey tended to have significantly lower rates of passing all their exams\n",
        "    <li> There is a weak correlation between AI knowledge rating and GPA\n"
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.7.12"
    },
    "papermill": {
      "default_parameters": {},
      "duration": 30.863238,
      "end_time": "2023-05-01T19:26:40.096835",
      "environment_variables": {},
      "exception": null,
      "input_path": "__notebook__.ipynb",
      "output_path": "__notebook__.ipynb",
      "parameters": {},
      "start_time": "2023-05-01T19:26:09.233597",
      "version": "2.4.0"
    },
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "eefbca6b9d964a51a69bbe623ffcb016": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [
              "widget-interact"
            ],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "VBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "VBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_ffe67cd4331946569cea52aca6040de0",
              "IPY_MODEL_a8c851130ac049dea9c70ea4574b5e7a",
              "IPY_MODEL_82301781a33f4348b995194994ca5aee"
            ],
            "layout": "IPY_MODEL_e3ca3a821c0d4a4baa7117f7a14827a1"
          }
        },
        "ffe67cd4331946569cea52aca6040de0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DropdownModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DropdownModel",
            "_options_labels": [
              "None",
              "Gender",
              "Year of Study",
              "Major Code"
            ],
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "DropdownView",
            "description": "hue",
            "description_tooltip": null,
            "disabled": false,
            "index": null,
            "layout": "IPY_MODEL_53adab60f8dd48da952eb89083af5172",
            "style": "IPY_MODEL_999e4a90d32a476c8bd97686e1f6b6bd"
          }
        },
        "a8c851130ac049dea9c70ea4574b5e7a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DropdownModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DropdownModel",
            "_options_labels": [
              "Bar Chart",
              "Pie Chart"
            ],
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "DropdownView",
            "description": "mode",
            "description_tooltip": null,
            "disabled": false,
            "index": 0,
            "layout": "IPY_MODEL_3e3b1c20cc974396b4cd31ff3cc77960",
            "style": "IPY_MODEL_e349e545eadc42e0a78c30a002e735b9"
          }
        },
        "82301781a33f4348b995194994ca5aee": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_model_name": "OutputModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/output",
            "_view_module_version": "1.0.0",
            "_view_name": "OutputView",
            "layout": "IPY_MODEL_656e18d713344ca8bda7b0112917d44a",
            "msg_id": "",
            "outputs": []
          }
        },
        "e3ca3a821c0d4a4baa7117f7a14827a1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "53adab60f8dd48da952eb89083af5172": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "999e4a90d32a476c8bd97686e1f6b6bd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "3e3b1c20cc974396b4cd31ff3cc77960": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "e349e545eadc42e0a78c30a002e735b9": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "656e18d713344ca8bda7b0112917d44a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "2f520dee25714be891cf6ca22225b130": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [
              "widget-interact"
            ],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "VBoxModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "VBoxView",
            "box_style": "",
            "children": [
              "IPY_MODEL_b43a4cd98c574fb990623ed7dd1690ce",
              "IPY_MODEL_47d32e6f5c2a423ab6533adcc639da8e"
            ],
            "layout": "IPY_MODEL_092e8202f2794582bd097c231af440e8"
          }
        },
        "b43a4cd98c574fb990623ed7dd1690ce": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DropdownModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DropdownModel",
            "_options_labels": [
              "Feelings",
              "Teaching Advantage",
              "Learning Advantage",
              "Evaluation Advantage",
              "Disadvantage Education Process",
              "Major"
            ],
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "DropdownView",
            "description": "question_12",
            "description_tooltip": null,
            "disabled": false,
            "index": 0,
            "layout": "IPY_MODEL_beb824f9cb504361a5492cf5eb55a612",
            "style": "IPY_MODEL_08c27c03792c4303bf5b3c6ba4aad7e5"
          }
        },
        "47d32e6f5c2a423ab6533adcc639da8e": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_model_name": "OutputModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/output",
            "_view_module_version": "1.0.0",
            "_view_name": "OutputView",
            "layout": "IPY_MODEL_43ff88fe5dbc4fbc9116ea5de02374d6",
            "msg_id": "",
            "outputs": []
          }
        },
        "092e8202f2794582bd097c231af440e8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "beb824f9cb504361a5492cf5eb55a612": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        },
        "08c27c03792c4303bf5b3c6ba4aad7e5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "DescriptionStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "description_width": ""
          }
        },
        "43ff88fe5dbc4fbc9116ea5de02374d6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": null,
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": null
          }
        }
      }
    },
    "colab": {
      "provenance": []
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}